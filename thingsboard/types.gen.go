// Package thingsboard provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package thingsboard

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	HTTP_login_formScopes = "HTTP_login_form.Scopes"
)

// Defines values for AlarmSeverity.
const (
	AlarmSeverityCRITICAL      AlarmSeverity = "CRITICAL"
	AlarmSeverityINDETERMINATE AlarmSeverity = "INDETERMINATE"
	AlarmSeverityMAJOR         AlarmSeverity = "MAJOR"
	AlarmSeverityMINOR         AlarmSeverity = "MINOR"
	AlarmSeverityWARNING       AlarmSeverity = "WARNING"
)

// Defines values for AlarmStatus.
const (
	AlarmStatusACTIVEACK    AlarmStatus = "ACTIVE_ACK"
	AlarmStatusACTIVEUNACK  AlarmStatus = "ACTIVE_UNACK"
	AlarmStatusCLEAREDACK   AlarmStatus = "CLEARED_ACK"
	AlarmStatusCLEAREDUNACK AlarmStatus = "CLEARED_UNACK"
)

// Defines values for AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities.
const (
	AlarmAssignmentNotificationRuleTriggerConfigAlarmSeveritiesCRITICAL      AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities = "CRITICAL"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmSeveritiesINDETERMINATE AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities = "INDETERMINATE"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmSeveritiesMAJOR         AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities = "MAJOR"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmSeveritiesMINOR         AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities = "MINOR"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmSeveritiesWARNING       AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities = "WARNING"
)

// Defines values for AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses.
const (
	AlarmAssignmentNotificationRuleTriggerConfigAlarmStatusesACK     AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses = "ACK"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmStatusesACTIVE  AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses = "ACTIVE"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmStatusesANY     AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses = "ANY"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmStatusesCLEARED AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses = "CLEARED"
	AlarmAssignmentNotificationRuleTriggerConfigAlarmStatusesUNACK   AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses = "UNACK"
)

// Defines values for AlarmAssignmentNotificationRuleTriggerConfigNotifyOn.
const (
	ASSIGNED   AlarmAssignmentNotificationRuleTriggerConfigNotifyOn = "ASSIGNED"
	UNASSIGNED AlarmAssignmentNotificationRuleTriggerConfigNotifyOn = "UNASSIGNED"
)

// Defines values for AlarmAssignmentNotificationRuleTriggerConfigTriggerType.
const (
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeALARM                             AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "ALARM"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	AlarmAssignmentNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             AlarmAssignmentNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for AlarmCommentInfoType.
const (
	OTHER  AlarmCommentInfoType = "OTHER"
	SYSTEM AlarmCommentInfoType = "SYSTEM"
)

// Defines values for AlarmCommentNotificationRuleTriggerConfigAlarmSeverities.
const (
	AlarmCommentNotificationRuleTriggerConfigAlarmSeveritiesCRITICAL      AlarmCommentNotificationRuleTriggerConfigAlarmSeverities = "CRITICAL"
	AlarmCommentNotificationRuleTriggerConfigAlarmSeveritiesINDETERMINATE AlarmCommentNotificationRuleTriggerConfigAlarmSeverities = "INDETERMINATE"
	AlarmCommentNotificationRuleTriggerConfigAlarmSeveritiesMAJOR         AlarmCommentNotificationRuleTriggerConfigAlarmSeverities = "MAJOR"
	AlarmCommentNotificationRuleTriggerConfigAlarmSeveritiesMINOR         AlarmCommentNotificationRuleTriggerConfigAlarmSeverities = "MINOR"
	AlarmCommentNotificationRuleTriggerConfigAlarmSeveritiesWARNING       AlarmCommentNotificationRuleTriggerConfigAlarmSeverities = "WARNING"
)

// Defines values for AlarmCommentNotificationRuleTriggerConfigAlarmStatuses.
const (
	AlarmCommentNotificationRuleTriggerConfigAlarmStatusesACK     AlarmCommentNotificationRuleTriggerConfigAlarmStatuses = "ACK"
	AlarmCommentNotificationRuleTriggerConfigAlarmStatusesACTIVE  AlarmCommentNotificationRuleTriggerConfigAlarmStatuses = "ACTIVE"
	AlarmCommentNotificationRuleTriggerConfigAlarmStatusesANY     AlarmCommentNotificationRuleTriggerConfigAlarmStatuses = "ANY"
	AlarmCommentNotificationRuleTriggerConfigAlarmStatusesCLEARED AlarmCommentNotificationRuleTriggerConfigAlarmStatuses = "CLEARED"
	AlarmCommentNotificationRuleTriggerConfigAlarmStatusesUNACK   AlarmCommentNotificationRuleTriggerConfigAlarmStatuses = "UNACK"
)

// Defines values for AlarmCommentNotificationRuleTriggerConfigTriggerType.
const (
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeALARM                             AlarmCommentNotificationRuleTriggerConfigTriggerType = "ALARM"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   AlarmCommentNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      AlarmCommentNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     AlarmCommentNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    AlarmCommentNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          AlarmCommentNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    AlarmCommentNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     AlarmCommentNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      AlarmCommentNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                AlarmCommentNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        AlarmCommentNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT AlarmCommentNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	AlarmCommentNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             AlarmCommentNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for AlarmConditionFilterValueType.
const (
	AlarmConditionFilterValueTypeBOOLEAN  AlarmConditionFilterValueType = "BOOLEAN"
	AlarmConditionFilterValueTypeDATETIME AlarmConditionFilterValueType = "DATE_TIME"
	AlarmConditionFilterValueTypeNUMERIC  AlarmConditionFilterValueType = "NUMERIC"
	AlarmConditionFilterValueTypeSTRING   AlarmConditionFilterValueType = "STRING"
)

// Defines values for AlarmConditionFilterKeyType.
const (
	AlarmConditionFilterKeyTypeATTRIBUTE   AlarmConditionFilterKeyType = "ATTRIBUTE"
	AlarmConditionFilterKeyTypeCONSTANT    AlarmConditionFilterKeyType = "CONSTANT"
	AlarmConditionFilterKeyTypeENTITYFIELD AlarmConditionFilterKeyType = "ENTITY_FIELD"
	AlarmConditionFilterKeyTypeTIMESERIES  AlarmConditionFilterKeyType = "TIME_SERIES"
)

// Defines values for AlarmCountQuerySeverityList.
const (
	AlarmCountQuerySeverityListCRITICAL      AlarmCountQuerySeverityList = "CRITICAL"
	AlarmCountQuerySeverityListINDETERMINATE AlarmCountQuerySeverityList = "INDETERMINATE"
	AlarmCountQuerySeverityListMAJOR         AlarmCountQuerySeverityList = "MAJOR"
	AlarmCountQuerySeverityListMINOR         AlarmCountQuerySeverityList = "MINOR"
	AlarmCountQuerySeverityListWARNING       AlarmCountQuerySeverityList = "WARNING"
)

// Defines values for AlarmCountQueryStatusList.
const (
	AlarmCountQueryStatusListACK     AlarmCountQueryStatusList = "ACK"
	AlarmCountQueryStatusListACTIVE  AlarmCountQueryStatusList = "ACTIVE"
	AlarmCountQueryStatusListANY     AlarmCountQueryStatusList = "ANY"
	AlarmCountQueryStatusListCLEARED AlarmCountQueryStatusList = "CLEARED"
	AlarmCountQueryStatusListUNACK   AlarmCountQueryStatusList = "UNACK"
)

// Defines values for AlarmDataSeverity.
const (
	AlarmDataSeverityCRITICAL      AlarmDataSeverity = "CRITICAL"
	AlarmDataSeverityINDETERMINATE AlarmDataSeverity = "INDETERMINATE"
	AlarmDataSeverityMAJOR         AlarmDataSeverity = "MAJOR"
	AlarmDataSeverityMINOR         AlarmDataSeverity = "MINOR"
	AlarmDataSeverityWARNING       AlarmDataSeverity = "WARNING"
)

// Defines values for AlarmDataStatus.
const (
	AlarmDataStatusACTIVEACK    AlarmDataStatus = "ACTIVE_ACK"
	AlarmDataStatusACTIVEUNACK  AlarmDataStatus = "ACTIVE_UNACK"
	AlarmDataStatusCLEAREDACK   AlarmDataStatus = "CLEARED_ACK"
	AlarmDataStatusCLEAREDUNACK AlarmDataStatus = "CLEARED_UNACK"
)

// Defines values for AlarmDataPageLinkSeverityList.
const (
	AlarmDataPageLinkSeverityListCRITICAL      AlarmDataPageLinkSeverityList = "CRITICAL"
	AlarmDataPageLinkSeverityListINDETERMINATE AlarmDataPageLinkSeverityList = "INDETERMINATE"
	AlarmDataPageLinkSeverityListMAJOR         AlarmDataPageLinkSeverityList = "MAJOR"
	AlarmDataPageLinkSeverityListMINOR         AlarmDataPageLinkSeverityList = "MINOR"
	AlarmDataPageLinkSeverityListWARNING       AlarmDataPageLinkSeverityList = "WARNING"
)

// Defines values for AlarmDataPageLinkStatusList.
const (
	AlarmDataPageLinkStatusListACK     AlarmDataPageLinkStatusList = "ACK"
	AlarmDataPageLinkStatusListACTIVE  AlarmDataPageLinkStatusList = "ACTIVE"
	AlarmDataPageLinkStatusListANY     AlarmDataPageLinkStatusList = "ANY"
	AlarmDataPageLinkStatusListCLEARED AlarmDataPageLinkStatusList = "CLEARED"
	AlarmDataPageLinkStatusListUNACK   AlarmDataPageLinkStatusList = "UNACK"
)

// Defines values for AlarmIdEntityType.
const (
	AlarmIdEntityTypeALARM AlarmIdEntityType = "ALARM"
)

// Defines values for AlarmInfoSeverity.
const (
	AlarmInfoSeverityCRITICAL      AlarmInfoSeverity = "CRITICAL"
	AlarmInfoSeverityINDETERMINATE AlarmInfoSeverity = "INDETERMINATE"
	AlarmInfoSeverityMAJOR         AlarmInfoSeverity = "MAJOR"
	AlarmInfoSeverityMINOR         AlarmInfoSeverity = "MINOR"
	AlarmInfoSeverityWARNING       AlarmInfoSeverity = "WARNING"
)

// Defines values for AlarmInfoStatus.
const (
	ACTIVEACK    AlarmInfoStatus = "ACTIVE_ACK"
	ACTIVEUNACK  AlarmInfoStatus = "ACTIVE_UNACK"
	CLEAREDACK   AlarmInfoStatus = "CLEARED_ACK"
	CLEAREDUNACK AlarmInfoStatus = "CLEARED_UNACK"
)

// Defines values for AlarmNotificationRuleTriggerConfigAlarmSeverities.
const (
	AlarmNotificationRuleTriggerConfigAlarmSeveritiesCRITICAL      AlarmNotificationRuleTriggerConfigAlarmSeverities = "CRITICAL"
	AlarmNotificationRuleTriggerConfigAlarmSeveritiesINDETERMINATE AlarmNotificationRuleTriggerConfigAlarmSeverities = "INDETERMINATE"
	AlarmNotificationRuleTriggerConfigAlarmSeveritiesMAJOR         AlarmNotificationRuleTriggerConfigAlarmSeverities = "MAJOR"
	AlarmNotificationRuleTriggerConfigAlarmSeveritiesMINOR         AlarmNotificationRuleTriggerConfigAlarmSeverities = "MINOR"
	AlarmNotificationRuleTriggerConfigAlarmSeveritiesWARNING       AlarmNotificationRuleTriggerConfigAlarmSeverities = "WARNING"
)

// Defines values for AlarmNotificationRuleTriggerConfigNotifyOn.
const (
	AlarmNotificationRuleTriggerConfigNotifyOnACKNOWLEDGED    AlarmNotificationRuleTriggerConfigNotifyOn = "ACKNOWLEDGED"
	AlarmNotificationRuleTriggerConfigNotifyOnCLEARED         AlarmNotificationRuleTriggerConfigNotifyOn = "CLEARED"
	AlarmNotificationRuleTriggerConfigNotifyOnCREATED         AlarmNotificationRuleTriggerConfigNotifyOn = "CREATED"
	AlarmNotificationRuleTriggerConfigNotifyOnSEVERITYCHANGED AlarmNotificationRuleTriggerConfigNotifyOn = "SEVERITY_CHANGED"
)

// Defines values for AlarmNotificationRuleTriggerConfigTriggerType.
const (
	AlarmNotificationRuleTriggerConfigTriggerTypeALARM                             AlarmNotificationRuleTriggerConfigTriggerType = "ALARM"
	AlarmNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   AlarmNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	AlarmNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      AlarmNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	AlarmNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     AlarmNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	AlarmNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    AlarmNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	AlarmNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          AlarmNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	AlarmNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    AlarmNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	AlarmNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     AlarmNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	AlarmNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      AlarmNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	AlarmNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                AlarmNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	AlarmNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        AlarmNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	AlarmNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT AlarmNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	AlarmNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             AlarmNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for AlarmScheduleType.
const (
	AlarmScheduleTypeANYTIME      AlarmScheduleType = "ANY_TIME"
	AlarmScheduleTypeCUSTOM       AlarmScheduleType = "CUSTOM"
	AlarmScheduleTypeSPECIFICTIME AlarmScheduleType = "SPECIFIC_TIME"
)

// Defines values for ApiUsageLimitNotificationRuleTriggerConfigApiFeatures.
const (
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesALARM     ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "ALARM"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesDB        ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "DB"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesEMAIL     ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "EMAIL"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesJS        ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "JS"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesRE        ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "RE"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesSMS       ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "SMS"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesTBEL      ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "TBEL"
	ApiUsageLimitNotificationRuleTriggerConfigApiFeaturesTRANSPORT ApiUsageLimitNotificationRuleTriggerConfigApiFeatures = "TRANSPORT"
)

// Defines values for ApiUsageLimitNotificationRuleTriggerConfigNotifyOn.
const (
	ApiUsageLimitNotificationRuleTriggerConfigNotifyOnDISABLED ApiUsageLimitNotificationRuleTriggerConfigNotifyOn = "DISABLED"
	ApiUsageLimitNotificationRuleTriggerConfigNotifyOnENABLED  ApiUsageLimitNotificationRuleTriggerConfigNotifyOn = "ENABLED"
	ApiUsageLimitNotificationRuleTriggerConfigNotifyOnWARNING  ApiUsageLimitNotificationRuleTriggerConfigNotifyOn = "WARNING"
)

// Defines values for ApiUsageLimitNotificationRuleTriggerConfigTriggerType.
const (
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeALARM                             ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "ALARM"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	ApiUsageLimitNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             ApiUsageLimitNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for AssetIdEntityType.
const (
	AssetIdEntityTypeASSET AssetIdEntityType = "ASSET"
)

// Defines values for AssetProfileIdEntityType.
const (
	AssetProfileIdEntityTypeASSETPROFILE AssetProfileIdEntityType = "ASSET_PROFILE"
)

// Defines values for AssetSearchQueryFilterDirection.
const (
	AssetSearchQueryFilterDirectionFROM AssetSearchQueryFilterDirection = "FROM"
	AssetSearchQueryFilterDirectionTO   AssetSearchQueryFilterDirection = "TO"
)

// Defines values for AuditLogActionStatus.
const (
	FAILURE AuditLogActionStatus = "FAILURE"
	SUCCESS AuditLogActionStatus = "SUCCESS"
)

// Defines values for AuditLogActionType.
const (
	AuditLogActionTypeACTIVATED              AuditLogActionType = "ACTIVATED"
	AuditLogActionTypeADDED                  AuditLogActionType = "ADDED"
	AuditLogActionTypeADDEDCOMMENT           AuditLogActionType = "ADDED_COMMENT"
	AuditLogActionTypeALARMACK               AuditLogActionType = "ALARM_ACK"
	AuditLogActionTypeALARMASSIGNED          AuditLogActionType = "ALARM_ASSIGNED"
	AuditLogActionTypeALARMCLEAR             AuditLogActionType = "ALARM_CLEAR"
	AuditLogActionTypeALARMDELETE            AuditLogActionType = "ALARM_DELETE"
	AuditLogActionTypeALARMUNASSIGNED        AuditLogActionType = "ALARM_UNASSIGNED"
	AuditLogActionTypeASSIGNEDFROMTENANT     AuditLogActionType = "ASSIGNED_FROM_TENANT"
	AuditLogActionTypeASSIGNEDTOCUSTOMER     AuditLogActionType = "ASSIGNED_TO_CUSTOMER"
	AuditLogActionTypeASSIGNEDTOEDGE         AuditLogActionType = "ASSIGNED_TO_EDGE"
	AuditLogActionTypeASSIGNEDTOTENANT       AuditLogActionType = "ASSIGNED_TO_TENANT"
	AuditLogActionTypeATTRIBUTESDELETED      AuditLogActionType = "ATTRIBUTES_DELETED"
	AuditLogActionTypeATTRIBUTESREAD         AuditLogActionType = "ATTRIBUTES_READ"
	AuditLogActionTypeATTRIBUTESUPDATED      AuditLogActionType = "ATTRIBUTES_UPDATED"
	AuditLogActionTypeCREDENTIALSREAD        AuditLogActionType = "CREDENTIALS_READ"
	AuditLogActionTypeCREDENTIALSUPDATED     AuditLogActionType = "CREDENTIALS_UPDATED"
	AuditLogActionTypeDELETED                AuditLogActionType = "DELETED"
	AuditLogActionTypeDELETEDCOMMENT         AuditLogActionType = "DELETED_COMMENT"
	AuditLogActionTypeLOCKOUT                AuditLogActionType = "LOCKOUT"
	AuditLogActionTypeLOGIN                  AuditLogActionType = "LOGIN"
	AuditLogActionTypeLOGOUT                 AuditLogActionType = "LOGOUT"
	AuditLogActionTypePROVISIONFAILURE       AuditLogActionType = "PROVISION_FAILURE"
	AuditLogActionTypePROVISIONSUCCESS       AuditLogActionType = "PROVISION_SUCCESS"
	AuditLogActionTypeRELATIONADDORUPDATE    AuditLogActionType = "RELATION_ADD_OR_UPDATE"
	AuditLogActionTypeRELATIONDELETED        AuditLogActionType = "RELATION_DELETED"
	AuditLogActionTypeRELATIONSDELETED       AuditLogActionType = "RELATIONS_DELETED"
	AuditLogActionTypeRPCCALL                AuditLogActionType = "RPC_CALL"
	AuditLogActionTypeSMSSENT                AuditLogActionType = "SMS_SENT"
	AuditLogActionTypeSUSPENDED              AuditLogActionType = "SUSPENDED"
	AuditLogActionTypeTIMESERIESDELETED      AuditLogActionType = "TIMESERIES_DELETED"
	AuditLogActionTypeTIMESERIESUPDATED      AuditLogActionType = "TIMESERIES_UPDATED"
	AuditLogActionTypeUNASSIGNEDFROMCUSTOMER AuditLogActionType = "UNASSIGNED_FROM_CUSTOMER"
	AuditLogActionTypeUNASSIGNEDFROMEDGE     AuditLogActionType = "UNASSIGNED_FROM_EDGE"
	AuditLogActionTypeUPDATED                AuditLogActionType = "UPDATED"
	AuditLogActionTypeUPDATEDCOMMENT         AuditLogActionType = "UPDATED_COMMENT"
)

// Defines values for BooleanFilterPredicateOperation.
const (
	BooleanFilterPredicateOperationEQUAL    BooleanFilterPredicateOperation = "EQUAL"
	BooleanFilterPredicateOperationNOTEQUAL BooleanFilterPredicateOperation = "NOT_EQUAL"
)

// Defines values for ButtonLinkType.
const (
	ButtonLinkTypeDASHBOARD ButtonLinkType = "DASHBOARD"
	ButtonLinkTypeLINK      ButtonLinkType = "LINK"
)

// Defines values for ClearRuleAlarmStatuses.
const (
	ClearRuleAlarmStatusesACK     ClearRuleAlarmStatuses = "ACK"
	ClearRuleAlarmStatusesACTIVE  ClearRuleAlarmStatuses = "ACTIVE"
	ClearRuleAlarmStatusesANY     ClearRuleAlarmStatuses = "ANY"
	ClearRuleAlarmStatusesCLEARED ClearRuleAlarmStatuses = "CLEARED"
	ClearRuleAlarmStatusesUNACK   ClearRuleAlarmStatuses = "UNACK"
)

// Defines values for CoapDeviceTransportConfigurationPowerMode.
const (
	CoapDeviceTransportConfigurationPowerModeDRX  CoapDeviceTransportConfigurationPowerMode = "DRX"
	CoapDeviceTransportConfigurationPowerModeEDRX CoapDeviceTransportConfigurationPowerMode = "E_DRX"
	CoapDeviceTransportConfigurationPowerModePSM  CoapDeviceTransportConfigurationPowerMode = "PSM"
)

// Defines values for ColumnMappingType.
const (
	ColumnMappingTypeACCESSTOKEN                       ColumnMappingType = "ACCESS_TOKEN"
	ColumnMappingTypeDESCRIPTION                       ColumnMappingType = "DESCRIPTION"
	ColumnMappingTypeISGATEWAY                         ColumnMappingType = "IS_GATEWAY"
	ColumnMappingTypeLABEL                             ColumnMappingType = "LABEL"
	ColumnMappingTypeLWM2MBOOTSTRAPSERVERPUBLICKEYORID ColumnMappingType = "LWM2M_BOOTSTRAP_SERVER_PUBLIC_KEY_OR_ID"
	ColumnMappingTypeLWM2MBOOTSTRAPSERVERSECRETKEY     ColumnMappingType = "LWM2M_BOOTSTRAP_SERVER_SECRET_KEY"
	ColumnMappingTypeLWM2MBOOTSTRAPSERVERSECURITYMODE  ColumnMappingType = "LWM2M_BOOTSTRAP_SERVER_SECURITY_MODE"
	ColumnMappingTypeLWM2MCLIENTCERT                   ColumnMappingType = "LWM2M_CLIENT_CERT"
	ColumnMappingTypeLWM2MCLIENTENDPOINT               ColumnMappingType = "LWM2M_CLIENT_ENDPOINT"
	ColumnMappingTypeLWM2MCLIENTIDENTITY               ColumnMappingType = "LWM2M_CLIENT_IDENTITY"
	ColumnMappingTypeLWM2MCLIENTKEY                    ColumnMappingType = "LWM2M_CLIENT_KEY"
	ColumnMappingTypeLWM2MCLIENTSECURITYCONFIGMODE     ColumnMappingType = "LWM2M_CLIENT_SECURITY_CONFIG_MODE"
	ColumnMappingTypeLWM2MSERVERCLIENTPUBLICKEYORID    ColumnMappingType = "LWM2M_SERVER_CLIENT_PUBLIC_KEY_OR_ID"
	ColumnMappingTypeLWM2MSERVERCLIENTSECRETKEY        ColumnMappingType = "LWM2M_SERVER_CLIENT_SECRET_KEY"
	ColumnMappingTypeLWM2MSERVERSECURITYMODE           ColumnMappingType = "LWM2M_SERVER_SECURITY_MODE"
	ColumnMappingTypeMQTTCLIENTID                      ColumnMappingType = "MQTT_CLIENT_ID"
	ColumnMappingTypeMQTTPASSWORD                      ColumnMappingType = "MQTT_PASSWORD"
	ColumnMappingTypeMQTTUSERNAME                      ColumnMappingType = "MQTT_USER_NAME"
	ColumnMappingTypeNAME                              ColumnMappingType = "NAME"
	ColumnMappingTypeROUTINGKEY                        ColumnMappingType = "ROUTING_KEY"
	ColumnMappingTypeSECRET                            ColumnMappingType = "SECRET"
	ColumnMappingTypeSERVERATTRIBUTE                   ColumnMappingType = "SERVER_ATTRIBUTE"
	ColumnMappingTypeSHAREDATTRIBUTE                   ColumnMappingType = "SHARED_ATTRIBUTE"
	ColumnMappingTypeSNMPCOMMUNITYSTRING               ColumnMappingType = "SNMP_COMMUNITY_STRING"
	ColumnMappingTypeSNMPHOST                          ColumnMappingType = "SNMP_HOST"
	ColumnMappingTypeSNMPPORT                          ColumnMappingType = "SNMP_PORT"
	ColumnMappingTypeSNMPVERSION                       ColumnMappingType = "SNMP_VERSION"
	ColumnMappingTypeTIMESERIES                        ColumnMappingType = "TIMESERIES"
	ColumnMappingTypeTYPE                              ColumnMappingType = "TYPE"
	ColumnMappingTypeX509                              ColumnMappingType = "X509"
)

// Defines values for ComplexFilterPredicateOperation.
const (
	AND ComplexFilterPredicateOperation = "AND"
	OR  ComplexFilterPredicateOperation = "OR"
)

// Defines values for ComponentDescriptorClusteringMode.
const (
	ComponentDescriptorClusteringModeENABLED        ComponentDescriptorClusteringMode = "ENABLED"
	ComponentDescriptorClusteringModeSINGLETON      ComponentDescriptorClusteringMode = "SINGLETON"
	ComponentDescriptorClusteringModeUSERPREFERENCE ComponentDescriptorClusteringMode = "USER_PREFERENCE"
)

// Defines values for ComponentDescriptorScope.
const (
	ComponentDescriptorScopeTENANT ComponentDescriptorScope = "TENANT"
)

// Defines values for ComponentDescriptorType.
const (
	ACTION         ComponentDescriptorType = "ACTION"
	ENRICHMENT     ComponentDescriptorType = "ENRICHMENT"
	EXTERNAL       ComponentDescriptorType = "EXTERNAL"
	FILTER         ComponentDescriptorType = "FILTER"
	FLOW           ComponentDescriptorType = "FLOW"
	TRANSFORMATION ComponentDescriptorType = "TRANSFORMATION"
)

// Defines values for CustomTimeScheduleType.
const (
	CustomTimeScheduleTypeANYTIME      CustomTimeScheduleType = "ANY_TIME"
	CustomTimeScheduleTypeCUSTOM       CustomTimeScheduleType = "CUSTOM"
	CustomTimeScheduleTypeSPECIFICTIME CustomTimeScheduleType = "SPECIFIC_TIME"
)

// Defines values for CustomerIdEntityType.
const (
	CustomerIdEntityTypeCUSTOMER CustomerIdEntityType = "CUSTOMER"
)

// Defines values for DashboardIdEntityType.
const (
	DashboardIdEntityTypeDASHBOARD DashboardIdEntityType = "DASHBOARD"
)

// Defines values for DeviceActivityNotificationRuleTriggerConfigNotifyOn.
const (
	ACTIVE   DeviceActivityNotificationRuleTriggerConfigNotifyOn = "ACTIVE"
	INACTIVE DeviceActivityNotificationRuleTriggerConfigNotifyOn = "INACTIVE"
)

// Defines values for DeviceActivityNotificationRuleTriggerConfigTriggerType.
const (
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeALARM                             DeviceActivityNotificationRuleTriggerConfigTriggerType = "ALARM"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   DeviceActivityNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      DeviceActivityNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     DeviceActivityNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    DeviceActivityNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          DeviceActivityNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    DeviceActivityNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     DeviceActivityNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      DeviceActivityNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                DeviceActivityNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        DeviceActivityNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT DeviceActivityNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	DeviceActivityNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             DeviceActivityNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for DeviceCredentialsCredentialsType.
const (
	ACCESSTOKEN      DeviceCredentialsCredentialsType = "ACCESS_TOKEN"
	LWM2MCREDENTIALS DeviceCredentialsCredentialsType = "LWM2M_CREDENTIALS"
	MQTTBASIC        DeviceCredentialsCredentialsType = "MQTT_BASIC"
	X509CERTIFICATE  DeviceCredentialsCredentialsType = "X509_CERTIFICATE"
)

// Defines values for DeviceExportDataEntityType.
const (
	DeviceExportDataEntityTypeALARM                DeviceExportDataEntityType = "ALARM"
	DeviceExportDataEntityTypeAPIUSAGESTATE        DeviceExportDataEntityType = "API_USAGE_STATE"
	DeviceExportDataEntityTypeASSET                DeviceExportDataEntityType = "ASSET"
	DeviceExportDataEntityTypeASSETPROFILE         DeviceExportDataEntityType = "ASSET_PROFILE"
	DeviceExportDataEntityTypeCUSTOMER             DeviceExportDataEntityType = "CUSTOMER"
	DeviceExportDataEntityTypeDASHBOARD            DeviceExportDataEntityType = "DASHBOARD"
	DeviceExportDataEntityTypeDEVICE               DeviceExportDataEntityType = "DEVICE"
	DeviceExportDataEntityTypeDEVICEPROFILE        DeviceExportDataEntityType = "DEVICE_PROFILE"
	DeviceExportDataEntityTypeEDGE                 DeviceExportDataEntityType = "EDGE"
	DeviceExportDataEntityTypeENTITYVIEW           DeviceExportDataEntityType = "ENTITY_VIEW"
	DeviceExportDataEntityTypeNOTIFICATION         DeviceExportDataEntityType = "NOTIFICATION"
	DeviceExportDataEntityTypeNOTIFICATIONREQUEST  DeviceExportDataEntityType = "NOTIFICATION_REQUEST"
	DeviceExportDataEntityTypeNOTIFICATIONRULE     DeviceExportDataEntityType = "NOTIFICATION_RULE"
	DeviceExportDataEntityTypeNOTIFICATIONTARGET   DeviceExportDataEntityType = "NOTIFICATION_TARGET"
	DeviceExportDataEntityTypeNOTIFICATIONTEMPLATE DeviceExportDataEntityType = "NOTIFICATION_TEMPLATE"
	DeviceExportDataEntityTypeOTAPACKAGE           DeviceExportDataEntityType = "OTA_PACKAGE"
	DeviceExportDataEntityTypeQUEUE                DeviceExportDataEntityType = "QUEUE"
	DeviceExportDataEntityTypeQUEUESTATS           DeviceExportDataEntityType = "QUEUE_STATS"
	DeviceExportDataEntityTypeRPC                  DeviceExportDataEntityType = "RPC"
	DeviceExportDataEntityTypeRULECHAIN            DeviceExportDataEntityType = "RULE_CHAIN"
	DeviceExportDataEntityTypeRULENODE             DeviceExportDataEntityType = "RULE_NODE"
	DeviceExportDataEntityTypeTBRESOURCE           DeviceExportDataEntityType = "TB_RESOURCE"
	DeviceExportDataEntityTypeTENANT               DeviceExportDataEntityType = "TENANT"
	DeviceExportDataEntityTypeTENANTPROFILE        DeviceExportDataEntityType = "TENANT_PROFILE"
	DeviceExportDataEntityTypeUSER                 DeviceExportDataEntityType = "USER"
	DeviceExportDataEntityTypeWIDGETSBUNDLE        DeviceExportDataEntityType = "WIDGETS_BUNDLE"
	DeviceExportDataEntityTypeWIDGETTYPE           DeviceExportDataEntityType = "WIDGET_TYPE"
)

// Defines values for DeviceIdEntityType.
const (
	DeviceIdEntityTypeDEVICE DeviceIdEntityType = "DEVICE"
)

// Defines values for DeviceProfileProvisionType.
const (
	ALLOWCREATENEWDEVICES      DeviceProfileProvisionType = "ALLOW_CREATE_NEW_DEVICES"
	CHECKPREPROVISIONEDDEVICES DeviceProfileProvisionType = "CHECK_PRE_PROVISIONED_DEVICES"
	DISABLED                   DeviceProfileProvisionType = "DISABLED"
	X509CERTIFICATECHAIN       DeviceProfileProvisionType = "X509_CERTIFICATE_CHAIN"
)

// Defines values for DeviceProfileTransportType.
const (
	DeviceProfileTransportTypeCOAP    DeviceProfileTransportType = "COAP"
	DeviceProfileTransportTypeDEFAULT DeviceProfileTransportType = "DEFAULT"
	DeviceProfileTransportTypeLWM2M   DeviceProfileTransportType = "LWM2M"
	DeviceProfileTransportTypeMQTT    DeviceProfileTransportType = "MQTT"
	DeviceProfileTransportTypeSNMP    DeviceProfileTransportType = "SNMP"
)

// Defines values for DeviceProfileType.
const (
	DeviceProfileTypeDEFAULT DeviceProfileType = "DEFAULT"
)

// Defines values for DeviceProfileIdEntityType.
const (
	DeviceProfileIdEntityTypeDEVICEPROFILE DeviceProfileIdEntityType = "DEVICE_PROFILE"
)

// Defines values for DeviceProfileInfoTransportType.
const (
	DeviceProfileInfoTransportTypeCOAP    DeviceProfileInfoTransportType = "COAP"
	DeviceProfileInfoTransportTypeDEFAULT DeviceProfileInfoTransportType = "DEFAULT"
	DeviceProfileInfoTransportTypeLWM2M   DeviceProfileInfoTransportType = "LWM2M"
	DeviceProfileInfoTransportTypeMQTT    DeviceProfileInfoTransportType = "MQTT"
	DeviceProfileInfoTransportTypeSNMP    DeviceProfileInfoTransportType = "SNMP"
)

// Defines values for DeviceProfileInfoType.
const (
	DeviceProfileInfoTypeDEFAULT DeviceProfileInfoType = "DEFAULT"
)

// Defines values for DeviceSearchQueryFilterDirection.
const (
	DeviceSearchQueryFilterDirectionFROM DeviceSearchQueryFilterDirection = "FROM"
	DeviceSearchQueryFilterDirectionTO   DeviceSearchQueryFilterDirection = "TO"
)

// Defines values for DurationAlarmConditionSpecUnit.
const (
	DAYS         DurationAlarmConditionSpecUnit = "DAYS"
	HOURS        DurationAlarmConditionSpecUnit = "HOURS"
	MICROSECONDS DurationAlarmConditionSpecUnit = "MICROSECONDS"
	MILLISECONDS DurationAlarmConditionSpecUnit = "MILLISECONDS"
	MINUTES      DurationAlarmConditionSpecUnit = "MINUTES"
	NANOSECONDS  DurationAlarmConditionSpecUnit = "NANOSECONDS"
	SECONDS      DurationAlarmConditionSpecUnit = "SECONDS"
)

// Defines values for DynamicValueBooleanSourceType.
const (
	DynamicValueBooleanSourceTypeCURRENTCUSTOMER DynamicValueBooleanSourceType = "CURRENT_CUSTOMER"
	DynamicValueBooleanSourceTypeCURRENTDEVICE   DynamicValueBooleanSourceType = "CURRENT_DEVICE"
	DynamicValueBooleanSourceTypeCURRENTTENANT   DynamicValueBooleanSourceType = "CURRENT_TENANT"
	DynamicValueBooleanSourceTypeCURRENTUSER     DynamicValueBooleanSourceType = "CURRENT_USER"
)

// Defines values for DynamicValueDoubleSourceType.
const (
	DynamicValueDoubleSourceTypeCURRENTCUSTOMER DynamicValueDoubleSourceType = "CURRENT_CUSTOMER"
	DynamicValueDoubleSourceTypeCURRENTDEVICE   DynamicValueDoubleSourceType = "CURRENT_DEVICE"
	DynamicValueDoubleSourceTypeCURRENTTENANT   DynamicValueDoubleSourceType = "CURRENT_TENANT"
	DynamicValueDoubleSourceTypeCURRENTUSER     DynamicValueDoubleSourceType = "CURRENT_USER"
)

// Defines values for DynamicValueIntegerSourceType.
const (
	DynamicValueIntegerSourceTypeCURRENTCUSTOMER DynamicValueIntegerSourceType = "CURRENT_CUSTOMER"
	DynamicValueIntegerSourceTypeCURRENTDEVICE   DynamicValueIntegerSourceType = "CURRENT_DEVICE"
	DynamicValueIntegerSourceTypeCURRENTTENANT   DynamicValueIntegerSourceType = "CURRENT_TENANT"
	DynamicValueIntegerSourceTypeCURRENTUSER     DynamicValueIntegerSourceType = "CURRENT_USER"
)

// Defines values for DynamicValueLongSourceType.
const (
	DynamicValueLongSourceTypeCURRENTCUSTOMER DynamicValueLongSourceType = "CURRENT_CUSTOMER"
	DynamicValueLongSourceTypeCURRENTDEVICE   DynamicValueLongSourceType = "CURRENT_DEVICE"
	DynamicValueLongSourceTypeCURRENTTENANT   DynamicValueLongSourceType = "CURRENT_TENANT"
	DynamicValueLongSourceTypeCURRENTUSER     DynamicValueLongSourceType = "CURRENT_USER"
)

// Defines values for DynamicValueStringSourceType.
const (
	CURRENTCUSTOMER DynamicValueStringSourceType = "CURRENT_CUSTOMER"
	CURRENTDEVICE   DynamicValueStringSourceType = "CURRENT_DEVICE"
	CURRENTTENANT   DynamicValueStringSourceType = "CURRENT_TENANT"
	CURRENTUSER     DynamicValueStringSourceType = "CURRENT_USER"
)

// Defines values for EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType.
const (
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeALARM                             EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "ALARM"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for EdgeConnectionNotificationRuleTriggerConfigNotifyOn.
const (
	CONNECTED    EdgeConnectionNotificationRuleTriggerConfigNotifyOn = "CONNECTED"
	DISCONNECTED EdgeConnectionNotificationRuleTriggerConfigNotifyOn = "DISCONNECTED"
)

// Defines values for EdgeConnectionNotificationRuleTriggerConfigTriggerType.
const (
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeALARM                             EdgeConnectionNotificationRuleTriggerConfigTriggerType = "ALARM"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   EdgeConnectionNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      EdgeConnectionNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     EdgeConnectionNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    EdgeConnectionNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          EdgeConnectionNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    EdgeConnectionNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     EdgeConnectionNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      EdgeConnectionNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                EdgeConnectionNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        EdgeConnectionNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT EdgeConnectionNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	EdgeConnectionNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             EdgeConnectionNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for EdgeEventAction.
const (
	EdgeEventActionADDED                  EdgeEventAction = "ADDED"
	EdgeEventActionADDEDCOMMENT           EdgeEventAction = "ADDED_COMMENT"
	EdgeEventActionALARMACK               EdgeEventAction = "ALARM_ACK"
	EdgeEventActionALARMASSIGNED          EdgeEventAction = "ALARM_ASSIGNED"
	EdgeEventActionALARMCLEAR             EdgeEventAction = "ALARM_CLEAR"
	EdgeEventActionALARMDELETE            EdgeEventAction = "ALARM_DELETE"
	EdgeEventActionALARMUNASSIGNED        EdgeEventAction = "ALARM_UNASSIGNED"
	EdgeEventActionASSIGNEDTOCUSTOMER     EdgeEventAction = "ASSIGNED_TO_CUSTOMER"
	EdgeEventActionASSIGNEDTOEDGE         EdgeEventAction = "ASSIGNED_TO_EDGE"
	EdgeEventActionATTRIBUTESDELETED      EdgeEventAction = "ATTRIBUTES_DELETED"
	EdgeEventActionATTRIBUTESUPDATED      EdgeEventAction = "ATTRIBUTES_UPDATED"
	EdgeEventActionCREDENTIALSREQUEST     EdgeEventAction = "CREDENTIALS_REQUEST"
	EdgeEventActionCREDENTIALSUPDATED     EdgeEventAction = "CREDENTIALS_UPDATED"
	EdgeEventActionDELETED                EdgeEventAction = "DELETED"
	EdgeEventActionDELETEDCOMMENT         EdgeEventAction = "DELETED_COMMENT"
	EdgeEventActionENTITYMERGEREQUEST     EdgeEventAction = "ENTITY_MERGE_REQUEST"
	EdgeEventActionPOSTATTRIBUTES         EdgeEventAction = "POST_ATTRIBUTES"
	EdgeEventActionRELATIONADDORUPDATE    EdgeEventAction = "RELATION_ADD_OR_UPDATE"
	EdgeEventActionRELATIONDELETED        EdgeEventAction = "RELATION_DELETED"
	EdgeEventActionRPCCALL                EdgeEventAction = "RPC_CALL"
	EdgeEventActionTIMESERIESUPDATED      EdgeEventAction = "TIMESERIES_UPDATED"
	EdgeEventActionUNASSIGNEDFROMCUSTOMER EdgeEventAction = "UNASSIGNED_FROM_CUSTOMER"
	EdgeEventActionUNASSIGNEDFROMEDGE     EdgeEventAction = "UNASSIGNED_FROM_EDGE"
	EdgeEventActionUPDATED                EdgeEventAction = "UPDATED"
	EdgeEventActionUPDATEDCOMMENT         EdgeEventAction = "UPDATED_COMMENT"
)

// Defines values for EdgeEventType.
const (
	EdgeEventTypeADMINSETTINGS        EdgeEventType = "ADMIN_SETTINGS"
	EdgeEventTypeALARM                EdgeEventType = "ALARM"
	EdgeEventTypeALARMCOMMENT         EdgeEventType = "ALARM_COMMENT"
	EdgeEventTypeASSET                EdgeEventType = "ASSET"
	EdgeEventTypeASSETPROFILE         EdgeEventType = "ASSET_PROFILE"
	EdgeEventTypeCUSTOMER             EdgeEventType = "CUSTOMER"
	EdgeEventTypeDASHBOARD            EdgeEventType = "DASHBOARD"
	EdgeEventTypeDEVICE               EdgeEventType = "DEVICE"
	EdgeEventTypeDEVICEPROFILE        EdgeEventType = "DEVICE_PROFILE"
	EdgeEventTypeEDGE                 EdgeEventType = "EDGE"
	EdgeEventTypeENTITYVIEW           EdgeEventType = "ENTITY_VIEW"
	EdgeEventTypeNOTIFICATIONRULE     EdgeEventType = "NOTIFICATION_RULE"
	EdgeEventTypeNOTIFICATIONTARGET   EdgeEventType = "NOTIFICATION_TARGET"
	EdgeEventTypeNOTIFICATIONTEMPLATE EdgeEventType = "NOTIFICATION_TEMPLATE"
	EdgeEventTypeOAUTH2               EdgeEventType = "OAUTH2"
	EdgeEventTypeOTAPACKAGE           EdgeEventType = "OTA_PACKAGE"
	EdgeEventTypeQUEUE                EdgeEventType = "QUEUE"
	EdgeEventTypeRELATION             EdgeEventType = "RELATION"
	EdgeEventTypeRULECHAIN            EdgeEventType = "RULE_CHAIN"
	EdgeEventTypeRULECHAINMETADATA    EdgeEventType = "RULE_CHAIN_METADATA"
	EdgeEventTypeTBRESOURCE           EdgeEventType = "TB_RESOURCE"
	EdgeEventTypeTENANT               EdgeEventType = "TENANT"
	EdgeEventTypeTENANTPROFILE        EdgeEventType = "TENANT_PROFILE"
	EdgeEventTypeUSER                 EdgeEventType = "USER"
	EdgeEventTypeWIDGETSBUNDLE        EdgeEventType = "WIDGETS_BUNDLE"
	EdgeEventTypeWIDGETTYPE           EdgeEventType = "WIDGET_TYPE"
)

// Defines values for EdgeIdEntityType.
const (
	EdgeIdEntityTypeEDGE EdgeIdEntityType = "EDGE"
)

// Defines values for EdgeSearchQueryFilterDirection.
const (
	EdgeSearchQueryFilterDirectionFROM EdgeSearchQueryFilterDirection = "FROM"
	EdgeSearchQueryFilterDirectionTO   EdgeSearchQueryFilterDirection = "TO"
)

// Defines values for EntitiesLimitNotificationRuleTriggerConfigEntityTypes.
const (
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesALARM                EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "ALARM"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesAPIUSAGESTATE        EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "API_USAGE_STATE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesASSET                EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "ASSET"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesASSETPROFILE         EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "ASSET_PROFILE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesCUSTOMER             EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "CUSTOMER"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesDASHBOARD            EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "DASHBOARD"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesDEVICE               EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "DEVICE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesDEVICEPROFILE        EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "DEVICE_PROFILE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesEDGE                 EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "EDGE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesENTITYVIEW           EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "ENTITY_VIEW"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesNOTIFICATION         EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesNOTIFICATIONREQUEST  EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_REQUEST"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesNOTIFICATIONRULE     EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_RULE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesNOTIFICATIONTARGET   EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_TARGET"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesNOTIFICATIONTEMPLATE EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_TEMPLATE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesOTAPACKAGE           EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "OTA_PACKAGE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesQUEUE                EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "QUEUE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesQUEUESTATS           EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "QUEUE_STATS"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesRPC                  EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "RPC"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesRULECHAIN            EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "RULE_CHAIN"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesRULENODE             EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "RULE_NODE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesTBRESOURCE           EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "TB_RESOURCE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesTENANT               EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "TENANT"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesTENANTPROFILE        EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "TENANT_PROFILE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesUSER                 EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "USER"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesWIDGETSBUNDLE        EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "WIDGETS_BUNDLE"
	EntitiesLimitNotificationRuleTriggerConfigEntityTypesWIDGETTYPE           EntitiesLimitNotificationRuleTriggerConfigEntityTypes = "WIDGET_TYPE"
)

// Defines values for EntitiesLimitNotificationRuleTriggerConfigTriggerType.
const (
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeALARM                             EntitiesLimitNotificationRuleTriggerConfigTriggerType = "ALARM"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   EntitiesLimitNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      EntitiesLimitNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     EntitiesLimitNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    EntitiesLimitNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          EntitiesLimitNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    EntitiesLimitNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     EntitiesLimitNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      EntitiesLimitNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                EntitiesLimitNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        EntitiesLimitNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT EntitiesLimitNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	EntitiesLimitNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             EntitiesLimitNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for EntityActionNotificationRuleTriggerConfigEntityTypes.
const (
	EntityActionNotificationRuleTriggerConfigEntityTypesALARM                EntityActionNotificationRuleTriggerConfigEntityTypes = "ALARM"
	EntityActionNotificationRuleTriggerConfigEntityTypesAPIUSAGESTATE        EntityActionNotificationRuleTriggerConfigEntityTypes = "API_USAGE_STATE"
	EntityActionNotificationRuleTriggerConfigEntityTypesASSET                EntityActionNotificationRuleTriggerConfigEntityTypes = "ASSET"
	EntityActionNotificationRuleTriggerConfigEntityTypesASSETPROFILE         EntityActionNotificationRuleTriggerConfigEntityTypes = "ASSET_PROFILE"
	EntityActionNotificationRuleTriggerConfigEntityTypesCUSTOMER             EntityActionNotificationRuleTriggerConfigEntityTypes = "CUSTOMER"
	EntityActionNotificationRuleTriggerConfigEntityTypesDASHBOARD            EntityActionNotificationRuleTriggerConfigEntityTypes = "DASHBOARD"
	EntityActionNotificationRuleTriggerConfigEntityTypesDEVICE               EntityActionNotificationRuleTriggerConfigEntityTypes = "DEVICE"
	EntityActionNotificationRuleTriggerConfigEntityTypesDEVICEPROFILE        EntityActionNotificationRuleTriggerConfigEntityTypes = "DEVICE_PROFILE"
	EntityActionNotificationRuleTriggerConfigEntityTypesEDGE                 EntityActionNotificationRuleTriggerConfigEntityTypes = "EDGE"
	EntityActionNotificationRuleTriggerConfigEntityTypesENTITYVIEW           EntityActionNotificationRuleTriggerConfigEntityTypes = "ENTITY_VIEW"
	EntityActionNotificationRuleTriggerConfigEntityTypesNOTIFICATION         EntityActionNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION"
	EntityActionNotificationRuleTriggerConfigEntityTypesNOTIFICATIONREQUEST  EntityActionNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_REQUEST"
	EntityActionNotificationRuleTriggerConfigEntityTypesNOTIFICATIONRULE     EntityActionNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_RULE"
	EntityActionNotificationRuleTriggerConfigEntityTypesNOTIFICATIONTARGET   EntityActionNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_TARGET"
	EntityActionNotificationRuleTriggerConfigEntityTypesNOTIFICATIONTEMPLATE EntityActionNotificationRuleTriggerConfigEntityTypes = "NOTIFICATION_TEMPLATE"
	EntityActionNotificationRuleTriggerConfigEntityTypesOTAPACKAGE           EntityActionNotificationRuleTriggerConfigEntityTypes = "OTA_PACKAGE"
	EntityActionNotificationRuleTriggerConfigEntityTypesQUEUE                EntityActionNotificationRuleTriggerConfigEntityTypes = "QUEUE"
	EntityActionNotificationRuleTriggerConfigEntityTypesQUEUESTATS           EntityActionNotificationRuleTriggerConfigEntityTypes = "QUEUE_STATS"
	EntityActionNotificationRuleTriggerConfigEntityTypesRPC                  EntityActionNotificationRuleTriggerConfigEntityTypes = "RPC"
	EntityActionNotificationRuleTriggerConfigEntityTypesRULECHAIN            EntityActionNotificationRuleTriggerConfigEntityTypes = "RULE_CHAIN"
	EntityActionNotificationRuleTriggerConfigEntityTypesRULENODE             EntityActionNotificationRuleTriggerConfigEntityTypes = "RULE_NODE"
	EntityActionNotificationRuleTriggerConfigEntityTypesTBRESOURCE           EntityActionNotificationRuleTriggerConfigEntityTypes = "TB_RESOURCE"
	EntityActionNotificationRuleTriggerConfigEntityTypesTENANT               EntityActionNotificationRuleTriggerConfigEntityTypes = "TENANT"
	EntityActionNotificationRuleTriggerConfigEntityTypesTENANTPROFILE        EntityActionNotificationRuleTriggerConfigEntityTypes = "TENANT_PROFILE"
	EntityActionNotificationRuleTriggerConfigEntityTypesUSER                 EntityActionNotificationRuleTriggerConfigEntityTypes = "USER"
	EntityActionNotificationRuleTriggerConfigEntityTypesWIDGETSBUNDLE        EntityActionNotificationRuleTriggerConfigEntityTypes = "WIDGETS_BUNDLE"
	EntityActionNotificationRuleTriggerConfigEntityTypesWIDGETTYPE           EntityActionNotificationRuleTriggerConfigEntityTypes = "WIDGET_TYPE"
)

// Defines values for EntityActionNotificationRuleTriggerConfigTriggerType.
const (
	EntityActionNotificationRuleTriggerConfigTriggerTypeALARM                             EntityActionNotificationRuleTriggerConfigTriggerType = "ALARM"
	EntityActionNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   EntityActionNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	EntityActionNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      EntityActionNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	EntityActionNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     EntityActionNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	EntityActionNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    EntityActionNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	EntityActionNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          EntityActionNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	EntityActionNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    EntityActionNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	EntityActionNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     EntityActionNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	EntityActionNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      EntityActionNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	EntityActionNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                EntityActionNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	EntityActionNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        EntityActionNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	EntityActionNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT EntityActionNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	EntityActionNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             EntityActionNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for EntityDataSortOrderDirection.
const (
	ASC  EntityDataSortOrderDirection = "ASC"
	DESC EntityDataSortOrderDirection = "DESC"
)

// Defines values for EntityExportDataObjectEntityType.
const (
	EntityExportDataObjectEntityTypeALARM                EntityExportDataObjectEntityType = "ALARM"
	EntityExportDataObjectEntityTypeAPIUSAGESTATE        EntityExportDataObjectEntityType = "API_USAGE_STATE"
	EntityExportDataObjectEntityTypeASSET                EntityExportDataObjectEntityType = "ASSET"
	EntityExportDataObjectEntityTypeASSETPROFILE         EntityExportDataObjectEntityType = "ASSET_PROFILE"
	EntityExportDataObjectEntityTypeCUSTOMER             EntityExportDataObjectEntityType = "CUSTOMER"
	EntityExportDataObjectEntityTypeDASHBOARD            EntityExportDataObjectEntityType = "DASHBOARD"
	EntityExportDataObjectEntityTypeDEVICE               EntityExportDataObjectEntityType = "DEVICE"
	EntityExportDataObjectEntityTypeDEVICEPROFILE        EntityExportDataObjectEntityType = "DEVICE_PROFILE"
	EntityExportDataObjectEntityTypeEDGE                 EntityExportDataObjectEntityType = "EDGE"
	EntityExportDataObjectEntityTypeENTITYVIEW           EntityExportDataObjectEntityType = "ENTITY_VIEW"
	EntityExportDataObjectEntityTypeNOTIFICATION         EntityExportDataObjectEntityType = "NOTIFICATION"
	EntityExportDataObjectEntityTypeNOTIFICATIONREQUEST  EntityExportDataObjectEntityType = "NOTIFICATION_REQUEST"
	EntityExportDataObjectEntityTypeNOTIFICATIONRULE     EntityExportDataObjectEntityType = "NOTIFICATION_RULE"
	EntityExportDataObjectEntityTypeNOTIFICATIONTARGET   EntityExportDataObjectEntityType = "NOTIFICATION_TARGET"
	EntityExportDataObjectEntityTypeNOTIFICATIONTEMPLATE EntityExportDataObjectEntityType = "NOTIFICATION_TEMPLATE"
	EntityExportDataObjectEntityTypeOTAPACKAGE           EntityExportDataObjectEntityType = "OTA_PACKAGE"
	EntityExportDataObjectEntityTypeQUEUE                EntityExportDataObjectEntityType = "QUEUE"
	EntityExportDataObjectEntityTypeQUEUESTATS           EntityExportDataObjectEntityType = "QUEUE_STATS"
	EntityExportDataObjectEntityTypeRPC                  EntityExportDataObjectEntityType = "RPC"
	EntityExportDataObjectEntityTypeRULECHAIN            EntityExportDataObjectEntityType = "RULE_CHAIN"
	EntityExportDataObjectEntityTypeRULENODE             EntityExportDataObjectEntityType = "RULE_NODE"
	EntityExportDataObjectEntityTypeTBRESOURCE           EntityExportDataObjectEntityType = "TB_RESOURCE"
	EntityExportDataObjectEntityTypeTENANT               EntityExportDataObjectEntityType = "TENANT"
	EntityExportDataObjectEntityTypeTENANTPROFILE        EntityExportDataObjectEntityType = "TENANT_PROFILE"
	EntityExportDataObjectEntityTypeUSER                 EntityExportDataObjectEntityType = "USER"
	EntityExportDataObjectEntityTypeWIDGETSBUNDLE        EntityExportDataObjectEntityType = "WIDGETS_BUNDLE"
	EntityExportDataObjectEntityTypeWIDGETTYPE           EntityExportDataObjectEntityType = "WIDGET_TYPE"
)

// Defines values for EntityIdEntityType.
const (
	EntityIdEntityTypeALARM                EntityIdEntityType = "ALARM"
	EntityIdEntityTypeAPIUSAGESTATE        EntityIdEntityType = "API_USAGE_STATE"
	EntityIdEntityTypeASSET                EntityIdEntityType = "ASSET"
	EntityIdEntityTypeASSETPROFILE         EntityIdEntityType = "ASSET_PROFILE"
	EntityIdEntityTypeCUSTOMER             EntityIdEntityType = "CUSTOMER"
	EntityIdEntityTypeDASHBOARD            EntityIdEntityType = "DASHBOARD"
	EntityIdEntityTypeDEVICE               EntityIdEntityType = "DEVICE"
	EntityIdEntityTypeDEVICEPROFILE        EntityIdEntityType = "DEVICE_PROFILE"
	EntityIdEntityTypeEDGE                 EntityIdEntityType = "EDGE"
	EntityIdEntityTypeENTITYVIEW           EntityIdEntityType = "ENTITY_VIEW"
	EntityIdEntityTypeNOTIFICATION         EntityIdEntityType = "NOTIFICATION"
	EntityIdEntityTypeNOTIFICATIONREQUEST  EntityIdEntityType = "NOTIFICATION_REQUEST"
	EntityIdEntityTypeNOTIFICATIONRULE     EntityIdEntityType = "NOTIFICATION_RULE"
	EntityIdEntityTypeNOTIFICATIONTARGET   EntityIdEntityType = "NOTIFICATION_TARGET"
	EntityIdEntityTypeNOTIFICATIONTEMPLATE EntityIdEntityType = "NOTIFICATION_TEMPLATE"
	EntityIdEntityTypeOTAPACKAGE           EntityIdEntityType = "OTA_PACKAGE"
	EntityIdEntityTypeQUEUE                EntityIdEntityType = "QUEUE"
	EntityIdEntityTypeQUEUESTATS           EntityIdEntityType = "QUEUE_STATS"
	EntityIdEntityTypeRPC                  EntityIdEntityType = "RPC"
	EntityIdEntityTypeRULECHAIN            EntityIdEntityType = "RULE_CHAIN"
	EntityIdEntityTypeRULENODE             EntityIdEntityType = "RULE_NODE"
	EntityIdEntityTypeTBRESOURCE           EntityIdEntityType = "TB_RESOURCE"
	EntityIdEntityTypeTENANT               EntityIdEntityType = "TENANT"
	EntityIdEntityTypeTENANTPROFILE        EntityIdEntityType = "TENANT_PROFILE"
	EntityIdEntityTypeUSER                 EntityIdEntityType = "USER"
	EntityIdEntityTypeWIDGETSBUNDLE        EntityIdEntityType = "WIDGETS_BUNDLE"
	EntityIdEntityTypeWIDGETTYPE           EntityIdEntityType = "WIDGET_TYPE"
)

// Defines values for EntityKeyType.
const (
	ALARMFIELD      EntityKeyType = "ALARM_FIELD"
	ATTRIBUTE       EntityKeyType = "ATTRIBUTE"
	CLIENTATTRIBUTE EntityKeyType = "CLIENT_ATTRIBUTE"
	ENTITYFIELD     EntityKeyType = "ENTITY_FIELD"
	SERVERATTRIBUTE EntityKeyType = "SERVER_ATTRIBUTE"
	SHAREDATTRIBUTE EntityKeyType = "SHARED_ATTRIBUTE"
	TIMESERIES      EntityKeyType = "TIME_SERIES"
)

// Defines values for EntityListFilterEntityType.
const (
	EntityListFilterEntityTypeALARM                EntityListFilterEntityType = "ALARM"
	EntityListFilterEntityTypeAPIUSAGESTATE        EntityListFilterEntityType = "API_USAGE_STATE"
	EntityListFilterEntityTypeASSET                EntityListFilterEntityType = "ASSET"
	EntityListFilterEntityTypeASSETPROFILE         EntityListFilterEntityType = "ASSET_PROFILE"
	EntityListFilterEntityTypeCUSTOMER             EntityListFilterEntityType = "CUSTOMER"
	EntityListFilterEntityTypeDASHBOARD            EntityListFilterEntityType = "DASHBOARD"
	EntityListFilterEntityTypeDEVICE               EntityListFilterEntityType = "DEVICE"
	EntityListFilterEntityTypeDEVICEPROFILE        EntityListFilterEntityType = "DEVICE_PROFILE"
	EntityListFilterEntityTypeEDGE                 EntityListFilterEntityType = "EDGE"
	EntityListFilterEntityTypeENTITYVIEW           EntityListFilterEntityType = "ENTITY_VIEW"
	EntityListFilterEntityTypeNOTIFICATION         EntityListFilterEntityType = "NOTIFICATION"
	EntityListFilterEntityTypeNOTIFICATIONREQUEST  EntityListFilterEntityType = "NOTIFICATION_REQUEST"
	EntityListFilterEntityTypeNOTIFICATIONRULE     EntityListFilterEntityType = "NOTIFICATION_RULE"
	EntityListFilterEntityTypeNOTIFICATIONTARGET   EntityListFilterEntityType = "NOTIFICATION_TARGET"
	EntityListFilterEntityTypeNOTIFICATIONTEMPLATE EntityListFilterEntityType = "NOTIFICATION_TEMPLATE"
	EntityListFilterEntityTypeOTAPACKAGE           EntityListFilterEntityType = "OTA_PACKAGE"
	EntityListFilterEntityTypeQUEUE                EntityListFilterEntityType = "QUEUE"
	EntityListFilterEntityTypeQUEUESTATS           EntityListFilterEntityType = "QUEUE_STATS"
	EntityListFilterEntityTypeRPC                  EntityListFilterEntityType = "RPC"
	EntityListFilterEntityTypeRULECHAIN            EntityListFilterEntityType = "RULE_CHAIN"
	EntityListFilterEntityTypeRULENODE             EntityListFilterEntityType = "RULE_NODE"
	EntityListFilterEntityTypeTBRESOURCE           EntityListFilterEntityType = "TB_RESOURCE"
	EntityListFilterEntityTypeTENANT               EntityListFilterEntityType = "TENANT"
	EntityListFilterEntityTypeTENANTPROFILE        EntityListFilterEntityType = "TENANT_PROFILE"
	EntityListFilterEntityTypeUSER                 EntityListFilterEntityType = "USER"
	EntityListFilterEntityTypeWIDGETSBUNDLE        EntityListFilterEntityType = "WIDGETS_BUNDLE"
	EntityListFilterEntityTypeWIDGETTYPE           EntityListFilterEntityType = "WIDGET_TYPE"
)

// Defines values for EntityNameFilterEntityType.
const (
	EntityNameFilterEntityTypeALARM                EntityNameFilterEntityType = "ALARM"
	EntityNameFilterEntityTypeAPIUSAGESTATE        EntityNameFilterEntityType = "API_USAGE_STATE"
	EntityNameFilterEntityTypeASSET                EntityNameFilterEntityType = "ASSET"
	EntityNameFilterEntityTypeASSETPROFILE         EntityNameFilterEntityType = "ASSET_PROFILE"
	EntityNameFilterEntityTypeCUSTOMER             EntityNameFilterEntityType = "CUSTOMER"
	EntityNameFilterEntityTypeDASHBOARD            EntityNameFilterEntityType = "DASHBOARD"
	EntityNameFilterEntityTypeDEVICE               EntityNameFilterEntityType = "DEVICE"
	EntityNameFilterEntityTypeDEVICEPROFILE        EntityNameFilterEntityType = "DEVICE_PROFILE"
	EntityNameFilterEntityTypeEDGE                 EntityNameFilterEntityType = "EDGE"
	EntityNameFilterEntityTypeENTITYVIEW           EntityNameFilterEntityType = "ENTITY_VIEW"
	EntityNameFilterEntityTypeNOTIFICATION         EntityNameFilterEntityType = "NOTIFICATION"
	EntityNameFilterEntityTypeNOTIFICATIONREQUEST  EntityNameFilterEntityType = "NOTIFICATION_REQUEST"
	EntityNameFilterEntityTypeNOTIFICATIONRULE     EntityNameFilterEntityType = "NOTIFICATION_RULE"
	EntityNameFilterEntityTypeNOTIFICATIONTARGET   EntityNameFilterEntityType = "NOTIFICATION_TARGET"
	EntityNameFilterEntityTypeNOTIFICATIONTEMPLATE EntityNameFilterEntityType = "NOTIFICATION_TEMPLATE"
	EntityNameFilterEntityTypeOTAPACKAGE           EntityNameFilterEntityType = "OTA_PACKAGE"
	EntityNameFilterEntityTypeQUEUE                EntityNameFilterEntityType = "QUEUE"
	EntityNameFilterEntityTypeQUEUESTATS           EntityNameFilterEntityType = "QUEUE_STATS"
	EntityNameFilterEntityTypeRPC                  EntityNameFilterEntityType = "RPC"
	EntityNameFilterEntityTypeRULECHAIN            EntityNameFilterEntityType = "RULE_CHAIN"
	EntityNameFilterEntityTypeRULENODE             EntityNameFilterEntityType = "RULE_NODE"
	EntityNameFilterEntityTypeTBRESOURCE           EntityNameFilterEntityType = "TB_RESOURCE"
	EntityNameFilterEntityTypeTENANT               EntityNameFilterEntityType = "TENANT"
	EntityNameFilterEntityTypeTENANTPROFILE        EntityNameFilterEntityType = "TENANT_PROFILE"
	EntityNameFilterEntityTypeUSER                 EntityNameFilterEntityType = "USER"
	EntityNameFilterEntityTypeWIDGETSBUNDLE        EntityNameFilterEntityType = "WIDGETS_BUNDLE"
	EntityNameFilterEntityTypeWIDGETTYPE           EntityNameFilterEntityType = "WIDGET_TYPE"
)

// Defines values for EntityRelationTypeGroup.
const (
	EntityRelationTypeGroupCOMMON                  EntityRelationTypeGroup = "COMMON"
	EntityRelationTypeGroupDASHBOARD               EntityRelationTypeGroup = "DASHBOARD"
	EntityRelationTypeGroupEDGE                    EntityRelationTypeGroup = "EDGE"
	EntityRelationTypeGroupEDGEAUTOASSIGNRULECHAIN EntityRelationTypeGroup = "EDGE_AUTO_ASSIGN_RULE_CHAIN"
	EntityRelationTypeGroupRULECHAIN               EntityRelationTypeGroup = "RULE_CHAIN"
	EntityRelationTypeGroupRULENODE                EntityRelationTypeGroup = "RULE_NODE"
)

// Defines values for EntityRelationInfoTypeGroup.
const (
	EntityRelationInfoTypeGroupCOMMON                  EntityRelationInfoTypeGroup = "COMMON"
	EntityRelationInfoTypeGroupDASHBOARD               EntityRelationInfoTypeGroup = "DASHBOARD"
	EntityRelationInfoTypeGroupEDGE                    EntityRelationInfoTypeGroup = "EDGE"
	EntityRelationInfoTypeGroupEDGEAUTOASSIGNRULECHAIN EntityRelationInfoTypeGroup = "EDGE_AUTO_ASSIGN_RULE_CHAIN"
	EntityRelationInfoTypeGroupRULECHAIN               EntityRelationInfoTypeGroup = "RULE_CHAIN"
	EntityRelationInfoTypeGroupRULENODE                EntityRelationInfoTypeGroup = "RULE_NODE"
)

// Defines values for EntitySubtypeEntityType.
const (
	EntitySubtypeEntityTypeALARM                EntitySubtypeEntityType = "ALARM"
	EntitySubtypeEntityTypeAPIUSAGESTATE        EntitySubtypeEntityType = "API_USAGE_STATE"
	EntitySubtypeEntityTypeASSET                EntitySubtypeEntityType = "ASSET"
	EntitySubtypeEntityTypeASSETPROFILE         EntitySubtypeEntityType = "ASSET_PROFILE"
	EntitySubtypeEntityTypeCUSTOMER             EntitySubtypeEntityType = "CUSTOMER"
	EntitySubtypeEntityTypeDASHBOARD            EntitySubtypeEntityType = "DASHBOARD"
	EntitySubtypeEntityTypeDEVICE               EntitySubtypeEntityType = "DEVICE"
	EntitySubtypeEntityTypeDEVICEPROFILE        EntitySubtypeEntityType = "DEVICE_PROFILE"
	EntitySubtypeEntityTypeEDGE                 EntitySubtypeEntityType = "EDGE"
	EntitySubtypeEntityTypeENTITYVIEW           EntitySubtypeEntityType = "ENTITY_VIEW"
	EntitySubtypeEntityTypeNOTIFICATION         EntitySubtypeEntityType = "NOTIFICATION"
	EntitySubtypeEntityTypeNOTIFICATIONREQUEST  EntitySubtypeEntityType = "NOTIFICATION_REQUEST"
	EntitySubtypeEntityTypeNOTIFICATIONRULE     EntitySubtypeEntityType = "NOTIFICATION_RULE"
	EntitySubtypeEntityTypeNOTIFICATIONTARGET   EntitySubtypeEntityType = "NOTIFICATION_TARGET"
	EntitySubtypeEntityTypeNOTIFICATIONTEMPLATE EntitySubtypeEntityType = "NOTIFICATION_TEMPLATE"
	EntitySubtypeEntityTypeOTAPACKAGE           EntitySubtypeEntityType = "OTA_PACKAGE"
	EntitySubtypeEntityTypeQUEUE                EntitySubtypeEntityType = "QUEUE"
	EntitySubtypeEntityTypeQUEUESTATS           EntitySubtypeEntityType = "QUEUE_STATS"
	EntitySubtypeEntityTypeRPC                  EntitySubtypeEntityType = "RPC"
	EntitySubtypeEntityTypeRULECHAIN            EntitySubtypeEntityType = "RULE_CHAIN"
	EntitySubtypeEntityTypeRULENODE             EntitySubtypeEntityType = "RULE_NODE"
	EntitySubtypeEntityTypeTBRESOURCE           EntitySubtypeEntityType = "TB_RESOURCE"
	EntitySubtypeEntityTypeTENANT               EntitySubtypeEntityType = "TENANT"
	EntitySubtypeEntityTypeTENANTPROFILE        EntitySubtypeEntityType = "TENANT_PROFILE"
	EntitySubtypeEntityTypeUSER                 EntitySubtypeEntityType = "USER"
	EntitySubtypeEntityTypeWIDGETSBUNDLE        EntitySubtypeEntityType = "WIDGETS_BUNDLE"
	EntitySubtypeEntityTypeWIDGETTYPE           EntitySubtypeEntityType = "WIDGET_TYPE"
)

// Defines values for EntityTypeFilterEntityType.
const (
	EntityTypeFilterEntityTypeALARM                EntityTypeFilterEntityType = "ALARM"
	EntityTypeFilterEntityTypeAPIUSAGESTATE        EntityTypeFilterEntityType = "API_USAGE_STATE"
	EntityTypeFilterEntityTypeASSET                EntityTypeFilterEntityType = "ASSET"
	EntityTypeFilterEntityTypeASSETPROFILE         EntityTypeFilterEntityType = "ASSET_PROFILE"
	EntityTypeFilterEntityTypeCUSTOMER             EntityTypeFilterEntityType = "CUSTOMER"
	EntityTypeFilterEntityTypeDASHBOARD            EntityTypeFilterEntityType = "DASHBOARD"
	EntityTypeFilterEntityTypeDEVICE               EntityTypeFilterEntityType = "DEVICE"
	EntityTypeFilterEntityTypeDEVICEPROFILE        EntityTypeFilterEntityType = "DEVICE_PROFILE"
	EntityTypeFilterEntityTypeEDGE                 EntityTypeFilterEntityType = "EDGE"
	EntityTypeFilterEntityTypeENTITYVIEW           EntityTypeFilterEntityType = "ENTITY_VIEW"
	EntityTypeFilterEntityTypeNOTIFICATION         EntityTypeFilterEntityType = "NOTIFICATION"
	EntityTypeFilterEntityTypeNOTIFICATIONREQUEST  EntityTypeFilterEntityType = "NOTIFICATION_REQUEST"
	EntityTypeFilterEntityTypeNOTIFICATIONRULE     EntityTypeFilterEntityType = "NOTIFICATION_RULE"
	EntityTypeFilterEntityTypeNOTIFICATIONTARGET   EntityTypeFilterEntityType = "NOTIFICATION_TARGET"
	EntityTypeFilterEntityTypeNOTIFICATIONTEMPLATE EntityTypeFilterEntityType = "NOTIFICATION_TEMPLATE"
	EntityTypeFilterEntityTypeOTAPACKAGE           EntityTypeFilterEntityType = "OTA_PACKAGE"
	EntityTypeFilterEntityTypeQUEUE                EntityTypeFilterEntityType = "QUEUE"
	EntityTypeFilterEntityTypeQUEUESTATS           EntityTypeFilterEntityType = "QUEUE_STATS"
	EntityTypeFilterEntityTypeRPC                  EntityTypeFilterEntityType = "RPC"
	EntityTypeFilterEntityTypeRULECHAIN            EntityTypeFilterEntityType = "RULE_CHAIN"
	EntityTypeFilterEntityTypeRULENODE             EntityTypeFilterEntityType = "RULE_NODE"
	EntityTypeFilterEntityTypeTBRESOURCE           EntityTypeFilterEntityType = "TB_RESOURCE"
	EntityTypeFilterEntityTypeTENANT               EntityTypeFilterEntityType = "TENANT"
	EntityTypeFilterEntityTypeTENANTPROFILE        EntityTypeFilterEntityType = "TENANT_PROFILE"
	EntityTypeFilterEntityTypeUSER                 EntityTypeFilterEntityType = "USER"
	EntityTypeFilterEntityTypeWIDGETSBUNDLE        EntityTypeFilterEntityType = "WIDGETS_BUNDLE"
	EntityTypeFilterEntityTypeWIDGETTYPE           EntityTypeFilterEntityType = "WIDGET_TYPE"
)

// Defines values for EntityTypeLoadResultEntityType.
const (
	EntityTypeLoadResultEntityTypeALARM                EntityTypeLoadResultEntityType = "ALARM"
	EntityTypeLoadResultEntityTypeAPIUSAGESTATE        EntityTypeLoadResultEntityType = "API_USAGE_STATE"
	EntityTypeLoadResultEntityTypeASSET                EntityTypeLoadResultEntityType = "ASSET"
	EntityTypeLoadResultEntityTypeASSETPROFILE         EntityTypeLoadResultEntityType = "ASSET_PROFILE"
	EntityTypeLoadResultEntityTypeCUSTOMER             EntityTypeLoadResultEntityType = "CUSTOMER"
	EntityTypeLoadResultEntityTypeDASHBOARD            EntityTypeLoadResultEntityType = "DASHBOARD"
	EntityTypeLoadResultEntityTypeDEVICE               EntityTypeLoadResultEntityType = "DEVICE"
	EntityTypeLoadResultEntityTypeDEVICEPROFILE        EntityTypeLoadResultEntityType = "DEVICE_PROFILE"
	EntityTypeLoadResultEntityTypeEDGE                 EntityTypeLoadResultEntityType = "EDGE"
	EntityTypeLoadResultEntityTypeENTITYVIEW           EntityTypeLoadResultEntityType = "ENTITY_VIEW"
	EntityTypeLoadResultEntityTypeNOTIFICATION         EntityTypeLoadResultEntityType = "NOTIFICATION"
	EntityTypeLoadResultEntityTypeNOTIFICATIONREQUEST  EntityTypeLoadResultEntityType = "NOTIFICATION_REQUEST"
	EntityTypeLoadResultEntityTypeNOTIFICATIONRULE     EntityTypeLoadResultEntityType = "NOTIFICATION_RULE"
	EntityTypeLoadResultEntityTypeNOTIFICATIONTARGET   EntityTypeLoadResultEntityType = "NOTIFICATION_TARGET"
	EntityTypeLoadResultEntityTypeNOTIFICATIONTEMPLATE EntityTypeLoadResultEntityType = "NOTIFICATION_TEMPLATE"
	EntityTypeLoadResultEntityTypeOTAPACKAGE           EntityTypeLoadResultEntityType = "OTA_PACKAGE"
	EntityTypeLoadResultEntityTypeQUEUE                EntityTypeLoadResultEntityType = "QUEUE"
	EntityTypeLoadResultEntityTypeQUEUESTATS           EntityTypeLoadResultEntityType = "QUEUE_STATS"
	EntityTypeLoadResultEntityTypeRPC                  EntityTypeLoadResultEntityType = "RPC"
	EntityTypeLoadResultEntityTypeRULECHAIN            EntityTypeLoadResultEntityType = "RULE_CHAIN"
	EntityTypeLoadResultEntityTypeRULENODE             EntityTypeLoadResultEntityType = "RULE_NODE"
	EntityTypeLoadResultEntityTypeTBRESOURCE           EntityTypeLoadResultEntityType = "TB_RESOURCE"
	EntityTypeLoadResultEntityTypeTENANT               EntityTypeLoadResultEntityType = "TENANT"
	EntityTypeLoadResultEntityTypeTENANTPROFILE        EntityTypeLoadResultEntityType = "TENANT_PROFILE"
	EntityTypeLoadResultEntityTypeUSER                 EntityTypeLoadResultEntityType = "USER"
	EntityTypeLoadResultEntityTypeWIDGETSBUNDLE        EntityTypeLoadResultEntityType = "WIDGETS_BUNDLE"
	EntityTypeLoadResultEntityTypeWIDGETTYPE           EntityTypeLoadResultEntityType = "WIDGET_TYPE"
)

// Defines values for EntityTypeVersionLoadRequestType.
const (
	EntityTypeVersionLoadRequestTypeENTITYTYPE   EntityTypeVersionLoadRequestType = "ENTITY_TYPE"
	EntityTypeVersionLoadRequestTypeSINGLEENTITY EntityTypeVersionLoadRequestType = "SINGLE_ENTITY"
)

// Defines values for EntityViewIdEntityType.
const (
	EntityViewIdEntityTypeENTITYVIEW EntityViewIdEntityType = "ENTITY_VIEW"
)

// Defines values for EntityViewSearchQueryFilterDirection.
const (
	EntityViewSearchQueryFilterDirectionFROM EntityViewSearchQueryFilterDirection = "FROM"
	EntityViewSearchQueryFilterDirectionTO   EntityViewSearchQueryFilterDirection = "TO"
)

// Defines values for ErrorEventFilterEventType.
const (
	ErrorEventFilterEventTypeDEBUGRULECHAIN ErrorEventFilterEventType = "DEBUG_RULE_CHAIN"
	ErrorEventFilterEventTypeDEBUGRULENODE  ErrorEventFilterEventType = "DEBUG_RULE_NODE"
	ErrorEventFilterEventTypeERROR          ErrorEventFilterEventType = "ERROR"
	ErrorEventFilterEventTypeLCEVENT        ErrorEventFilterEventType = "LC_EVENT"
	ErrorEventFilterEventTypeSTATS          ErrorEventFilterEventType = "STATS"
)

// Defines values for EscalatedNotificationRuleRecipientsConfigTriggerType.
const (
	EscalatedNotificationRuleRecipientsConfigTriggerTypeALARM                             EscalatedNotificationRuleRecipientsConfigTriggerType = "ALARM"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeALARMASSIGNMENT                   EscalatedNotificationRuleRecipientsConfigTriggerType = "ALARM_ASSIGNMENT"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeALARMCOMMENT                      EscalatedNotificationRuleRecipientsConfigTriggerType = "ALARM_COMMENT"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeAPIUSAGELIMIT                     EscalatedNotificationRuleRecipientsConfigTriggerType = "API_USAGE_LIMIT"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeDEVICEACTIVITY                    EscalatedNotificationRuleRecipientsConfigTriggerType = "DEVICE_ACTIVITY"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeEDGECOMMUNICATIONFAILURE          EscalatedNotificationRuleRecipientsConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeEDGECONNECTION                    EscalatedNotificationRuleRecipientsConfigTriggerType = "EDGE_CONNECTION"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeENTITIESLIMIT                     EscalatedNotificationRuleRecipientsConfigTriggerType = "ENTITIES_LIMIT"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeENTITYACTION                      EscalatedNotificationRuleRecipientsConfigTriggerType = "ENTITY_ACTION"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeNEWPLATFORMVERSION                EscalatedNotificationRuleRecipientsConfigTriggerType = "NEW_PLATFORM_VERSION"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeRATELIMITS                        EscalatedNotificationRuleRecipientsConfigTriggerType = "RATE_LIMITS"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT EscalatedNotificationRuleRecipientsConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	EscalatedNotificationRuleRecipientsConfigTriggerTypeTASKPROCESSINGFAILURE             EscalatedNotificationRuleRecipientsConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for EventFilterEventType.
const (
	EventFilterEventTypeDEBUGRULECHAIN EventFilterEventType = "DEBUG_RULE_CHAIN"
	EventFilterEventTypeDEBUGRULENODE  EventFilterEventType = "DEBUG_RULE_NODE"
	EventFilterEventTypeERROR          EventFilterEventType = "ERROR"
	EventFilterEventTypeLCEVENT        EventFilterEventType = "LC_EVENT"
	EventFilterEventTypeSTATS          EventFilterEventType = "STATS"
)

// Defines values for JwtPairScope.
const (
	JwtPairScopeCUSTOMERUSER         JwtPairScope = "CUSTOMER_USER"
	JwtPairScopePREVERIFICATIONTOKEN JwtPairScope = "PRE_VERIFICATION_TOKEN"
	JwtPairScopeREFRESHTOKEN         JwtPairScope = "REFRESH_TOKEN"
	JwtPairScopeSYSADMIN             JwtPairScope = "SYS_ADMIN"
	JwtPairScopeTENANTADMIN          JwtPairScope = "TENANT_ADMIN"
)

// Defines values for KeyFilterValueType.
const (
	KeyFilterValueTypeBOOLEAN  KeyFilterValueType = "BOOLEAN"
	KeyFilterValueTypeDATETIME KeyFilterValueType = "DATE_TIME"
	KeyFilterValueTypeNUMERIC  KeyFilterValueType = "NUMERIC"
	KeyFilterValueTypeSTRING   KeyFilterValueType = "STRING"
)

// Defines values for LifeCycleEventFilterEventType.
const (
	LifeCycleEventFilterEventTypeDEBUGRULECHAIN LifeCycleEventFilterEventType = "DEBUG_RULE_CHAIN"
	LifeCycleEventFilterEventTypeDEBUGRULENODE  LifeCycleEventFilterEventType = "DEBUG_RULE_NODE"
	LifeCycleEventFilterEventTypeERROR          LifeCycleEventFilterEventType = "ERROR"
	LifeCycleEventFilterEventTypeLCEVENT        LifeCycleEventFilterEventType = "LC_EVENT"
	LifeCycleEventFilterEventTypeSTATS          LifeCycleEventFilterEventType = "STATS"
)

// Defines values for LifeCycleEventFilterStatus.
const (
	Failure LifeCycleEventFilterStatus = "Failure"
	Success LifeCycleEventFilterStatus = "Success"
)

// Defines values for Lwm2mDeviceTransportConfigurationPowerMode.
const (
	Lwm2mDeviceTransportConfigurationPowerModeDRX  Lwm2mDeviceTransportConfigurationPowerMode = "DRX"
	Lwm2mDeviceTransportConfigurationPowerModeEDRX Lwm2mDeviceTransportConfigurationPowerMode = "E_DRX"
	Lwm2mDeviceTransportConfigurationPowerModePSM  Lwm2mDeviceTransportConfigurationPowerMode = "PSM"
)

// Defines values for NotificationDeliveryMethod.
const (
	NotificationDeliveryMethodEMAIL          NotificationDeliveryMethod = "EMAIL"
	NotificationDeliveryMethodMICROSOFTTEAMS NotificationDeliveryMethod = "MICROSOFT_TEAMS"
	NotificationDeliveryMethodMOBILEAPP      NotificationDeliveryMethod = "MOBILE_APP"
	NotificationDeliveryMethodSLACK          NotificationDeliveryMethod = "SLACK"
	NotificationDeliveryMethodSMS            NotificationDeliveryMethod = "SMS"
	NotificationDeliveryMethodWEB            NotificationDeliveryMethod = "WEB"
)

// Defines values for NotificationStatus.
const (
	NotificationStatusREAD NotificationStatus = "READ"
	NotificationStatusSENT NotificationStatus = "SENT"
)

// Defines values for NotificationType.
const (
	NotificationTypeALARM                             NotificationType = "ALARM"
	NotificationTypeALARMASSIGNMENT                   NotificationType = "ALARM_ASSIGNMENT"
	NotificationTypeALARMCOMMENT                      NotificationType = "ALARM_COMMENT"
	NotificationTypeAPIUSAGELIMIT                     NotificationType = "API_USAGE_LIMIT"
	NotificationTypeDEVICEACTIVITY                    NotificationType = "DEVICE_ACTIVITY"
	NotificationTypeEDGECOMMUNICATIONFAILURE          NotificationType = "EDGE_COMMUNICATION_FAILURE"
	NotificationTypeEDGECONNECTION                    NotificationType = "EDGE_CONNECTION"
	NotificationTypeENTITIESLIMIT                     NotificationType = "ENTITIES_LIMIT"
	NotificationTypeENTITYACTION                      NotificationType = "ENTITY_ACTION"
	NotificationTypeGENERAL                           NotificationType = "GENERAL"
	NotificationTypeNEWPLATFORMVERSION                NotificationType = "NEW_PLATFORM_VERSION"
	NotificationTypeRATELIMITS                        NotificationType = "RATE_LIMITS"
	NotificationTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationTypeRULENODE                          NotificationType = "RULE_NODE"
	NotificationTypeTASKPROCESSINGFAILURE             NotificationType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationIdEntityType.
const (
	NotificationIdEntityTypeNOTIFICATION NotificationIdEntityType = "NOTIFICATION"
)

// Defines values for NotificationRequestStatus.
const (
	NotificationRequestStatusPROCESSING NotificationRequestStatus = "PROCESSING"
	NotificationRequestStatusSCHEDULED  NotificationRequestStatus = "SCHEDULED"
	NotificationRequestStatusSENT       NotificationRequestStatus = "SENT"
)

// Defines values for NotificationRequestIdEntityType.
const (
	NotificationRequestIdEntityTypeNOTIFICATIONREQUEST NotificationRequestIdEntityType = "NOTIFICATION_REQUEST"
)

// Defines values for NotificationRequestInfoDeliveryMethods.
const (
	NotificationRequestInfoDeliveryMethodsEMAIL          NotificationRequestInfoDeliveryMethods = "EMAIL"
	NotificationRequestInfoDeliveryMethodsMICROSOFTTEAMS NotificationRequestInfoDeliveryMethods = "MICROSOFT_TEAMS"
	NotificationRequestInfoDeliveryMethodsMOBILEAPP      NotificationRequestInfoDeliveryMethods = "MOBILE_APP"
	NotificationRequestInfoDeliveryMethodsSLACK          NotificationRequestInfoDeliveryMethods = "SLACK"
	NotificationRequestInfoDeliveryMethodsSMS            NotificationRequestInfoDeliveryMethods = "SMS"
	NotificationRequestInfoDeliveryMethodsWEB            NotificationRequestInfoDeliveryMethods = "WEB"
)

// Defines values for NotificationRequestInfoStatus.
const (
	NotificationRequestInfoStatusPROCESSING NotificationRequestInfoStatus = "PROCESSING"
	NotificationRequestInfoStatusSCHEDULED  NotificationRequestInfoStatus = "SCHEDULED"
	NotificationRequestInfoStatusSENT       NotificationRequestInfoStatus = "SENT"
)

// Defines values for NotificationRuleTriggerType.
const (
	NotificationRuleTriggerTypeALARM                             NotificationRuleTriggerType = "ALARM"
	NotificationRuleTriggerTypeALARMASSIGNMENT                   NotificationRuleTriggerType = "ALARM_ASSIGNMENT"
	NotificationRuleTriggerTypeALARMCOMMENT                      NotificationRuleTriggerType = "ALARM_COMMENT"
	NotificationRuleTriggerTypeAPIUSAGELIMIT                     NotificationRuleTriggerType = "API_USAGE_LIMIT"
	NotificationRuleTriggerTypeDEVICEACTIVITY                    NotificationRuleTriggerType = "DEVICE_ACTIVITY"
	NotificationRuleTriggerTypeEDGECOMMUNICATIONFAILURE          NotificationRuleTriggerType = "EDGE_COMMUNICATION_FAILURE"
	NotificationRuleTriggerTypeEDGECONNECTION                    NotificationRuleTriggerType = "EDGE_CONNECTION"
	NotificationRuleTriggerTypeENTITIESLIMIT                     NotificationRuleTriggerType = "ENTITIES_LIMIT"
	NotificationRuleTriggerTypeENTITYACTION                      NotificationRuleTriggerType = "ENTITY_ACTION"
	NotificationRuleTriggerTypeNEWPLATFORMVERSION                NotificationRuleTriggerType = "NEW_PLATFORM_VERSION"
	NotificationRuleTriggerTypeRATELIMITS                        NotificationRuleTriggerType = "RATE_LIMITS"
	NotificationRuleTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationRuleTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationRuleTriggerTypeTASKPROCESSINGFAILURE             NotificationRuleTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationRuleIdEntityType.
const (
	NotificationRuleIdEntityTypeNOTIFICATIONRULE NotificationRuleIdEntityType = "NOTIFICATION_RULE"
)

// Defines values for NotificationRuleInfoDeliveryMethods.
const (
	NotificationRuleInfoDeliveryMethodsEMAIL          NotificationRuleInfoDeliveryMethods = "EMAIL"
	NotificationRuleInfoDeliveryMethodsMICROSOFTTEAMS NotificationRuleInfoDeliveryMethods = "MICROSOFT_TEAMS"
	NotificationRuleInfoDeliveryMethodsMOBILEAPP      NotificationRuleInfoDeliveryMethods = "MOBILE_APP"
	NotificationRuleInfoDeliveryMethodsSLACK          NotificationRuleInfoDeliveryMethods = "SLACK"
	NotificationRuleInfoDeliveryMethodsSMS            NotificationRuleInfoDeliveryMethods = "SMS"
	NotificationRuleInfoDeliveryMethodsWEB            NotificationRuleInfoDeliveryMethods = "WEB"
)

// Defines values for NotificationRuleInfoTriggerType.
const (
	NotificationRuleInfoTriggerTypeALARM                             NotificationRuleInfoTriggerType = "ALARM"
	NotificationRuleInfoTriggerTypeALARMASSIGNMENT                   NotificationRuleInfoTriggerType = "ALARM_ASSIGNMENT"
	NotificationRuleInfoTriggerTypeALARMCOMMENT                      NotificationRuleInfoTriggerType = "ALARM_COMMENT"
	NotificationRuleInfoTriggerTypeAPIUSAGELIMIT                     NotificationRuleInfoTriggerType = "API_USAGE_LIMIT"
	NotificationRuleInfoTriggerTypeDEVICEACTIVITY                    NotificationRuleInfoTriggerType = "DEVICE_ACTIVITY"
	NotificationRuleInfoTriggerTypeEDGECOMMUNICATIONFAILURE          NotificationRuleInfoTriggerType = "EDGE_COMMUNICATION_FAILURE"
	NotificationRuleInfoTriggerTypeEDGECONNECTION                    NotificationRuleInfoTriggerType = "EDGE_CONNECTION"
	NotificationRuleInfoTriggerTypeENTITIESLIMIT                     NotificationRuleInfoTriggerType = "ENTITIES_LIMIT"
	NotificationRuleInfoTriggerTypeENTITYACTION                      NotificationRuleInfoTriggerType = "ENTITY_ACTION"
	NotificationRuleInfoTriggerTypeNEWPLATFORMVERSION                NotificationRuleInfoTriggerType = "NEW_PLATFORM_VERSION"
	NotificationRuleInfoTriggerTypeRATELIMITS                        NotificationRuleInfoTriggerType = "RATE_LIMITS"
	NotificationRuleInfoTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationRuleInfoTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationRuleInfoTriggerTypeTASKPROCESSINGFAILURE             NotificationRuleInfoTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationRuleRecipientsConfigTriggerType.
const (
	NotificationRuleRecipientsConfigTriggerTypeALARM                             NotificationRuleRecipientsConfigTriggerType = "ALARM"
	NotificationRuleRecipientsConfigTriggerTypeALARMASSIGNMENT                   NotificationRuleRecipientsConfigTriggerType = "ALARM_ASSIGNMENT"
	NotificationRuleRecipientsConfigTriggerTypeALARMCOMMENT                      NotificationRuleRecipientsConfigTriggerType = "ALARM_COMMENT"
	NotificationRuleRecipientsConfigTriggerTypeAPIUSAGELIMIT                     NotificationRuleRecipientsConfigTriggerType = "API_USAGE_LIMIT"
	NotificationRuleRecipientsConfigTriggerTypeDEVICEACTIVITY                    NotificationRuleRecipientsConfigTriggerType = "DEVICE_ACTIVITY"
	NotificationRuleRecipientsConfigTriggerTypeEDGECOMMUNICATIONFAILURE          NotificationRuleRecipientsConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	NotificationRuleRecipientsConfigTriggerTypeEDGECONNECTION                    NotificationRuleRecipientsConfigTriggerType = "EDGE_CONNECTION"
	NotificationRuleRecipientsConfigTriggerTypeENTITIESLIMIT                     NotificationRuleRecipientsConfigTriggerType = "ENTITIES_LIMIT"
	NotificationRuleRecipientsConfigTriggerTypeENTITYACTION                      NotificationRuleRecipientsConfigTriggerType = "ENTITY_ACTION"
	NotificationRuleRecipientsConfigTriggerTypeNEWPLATFORMVERSION                NotificationRuleRecipientsConfigTriggerType = "NEW_PLATFORM_VERSION"
	NotificationRuleRecipientsConfigTriggerTypeRATELIMITS                        NotificationRuleRecipientsConfigTriggerType = "RATE_LIMITS"
	NotificationRuleRecipientsConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationRuleRecipientsConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationRuleRecipientsConfigTriggerTypeTASKPROCESSINGFAILURE             NotificationRuleRecipientsConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationRuleTriggerConfigTriggerType.
const (
	NotificationRuleTriggerConfigTriggerTypeALARM                             NotificationRuleTriggerConfigTriggerType = "ALARM"
	NotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   NotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	NotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      NotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	NotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     NotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	NotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    NotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	NotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          NotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	NotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    NotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	NotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     NotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	NotificationRuleTriggerConfigTriggerTypeENTITYACTION                      NotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	NotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                NotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	NotificationRuleTriggerConfigTriggerTypeRATELIMITS                        NotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	NotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             NotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationTargetIdEntityType.
const (
	NotificationTargetIdEntityTypeNOTIFICATIONTARGET NotificationTargetIdEntityType = "NOTIFICATION_TARGET"
)

// Defines values for NotificationTemplateNotificationType.
const (
	NotificationTemplateNotificationTypeALARM                             NotificationTemplateNotificationType = "ALARM"
	NotificationTemplateNotificationTypeALARMASSIGNMENT                   NotificationTemplateNotificationType = "ALARM_ASSIGNMENT"
	NotificationTemplateNotificationTypeALARMCOMMENT                      NotificationTemplateNotificationType = "ALARM_COMMENT"
	NotificationTemplateNotificationTypeAPIUSAGELIMIT                     NotificationTemplateNotificationType = "API_USAGE_LIMIT"
	NotificationTemplateNotificationTypeDEVICEACTIVITY                    NotificationTemplateNotificationType = "DEVICE_ACTIVITY"
	NotificationTemplateNotificationTypeEDGECOMMUNICATIONFAILURE          NotificationTemplateNotificationType = "EDGE_COMMUNICATION_FAILURE"
	NotificationTemplateNotificationTypeEDGECONNECTION                    NotificationTemplateNotificationType = "EDGE_CONNECTION"
	NotificationTemplateNotificationTypeENTITIESLIMIT                     NotificationTemplateNotificationType = "ENTITIES_LIMIT"
	NotificationTemplateNotificationTypeENTITYACTION                      NotificationTemplateNotificationType = "ENTITY_ACTION"
	NotificationTemplateNotificationTypeGENERAL                           NotificationTemplateNotificationType = "GENERAL"
	NotificationTemplateNotificationTypeNEWPLATFORMVERSION                NotificationTemplateNotificationType = "NEW_PLATFORM_VERSION"
	NotificationTemplateNotificationTypeRATELIMITS                        NotificationTemplateNotificationType = "RATE_LIMITS"
	NotificationTemplateNotificationTypeRULEENGINECOMPONENTLIFECYCLEEVENT NotificationTemplateNotificationType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	NotificationTemplateNotificationTypeRULENODE                          NotificationTemplateNotificationType = "RULE_NODE"
	NotificationTemplateNotificationTypeTASKPROCESSINGFAILURE             NotificationTemplateNotificationType = "TASK_PROCESSING_FAILURE"
)

// Defines values for NotificationTemplateIdEntityType.
const (
	NotificationTemplateIdEntityTypeNOTIFICATIONTEMPLATE NotificationTemplateIdEntityType = "NOTIFICATION_TEMPLATE"
)

// Defines values for NumericFilterPredicateOperation.
const (
	NumericFilterPredicateOperationEQUAL          NumericFilterPredicateOperation = "EQUAL"
	NumericFilterPredicateOperationGREATER        NumericFilterPredicateOperation = "GREATER"
	NumericFilterPredicateOperationGREATEROREQUAL NumericFilterPredicateOperation = "GREATER_OR_EQUAL"
	NumericFilterPredicateOperationLESS           NumericFilterPredicateOperation = "LESS"
	NumericFilterPredicateOperationLESSOREQUAL    NumericFilterPredicateOperation = "LESS_OR_EQUAL"
	NumericFilterPredicateOperationNOTEQUAL       NumericFilterPredicateOperation = "NOT_EQUAL"
)

// Defines values for OAuth2BasicMapperConfigTenantNameStrategy.
const (
	OAuth2BasicMapperConfigTenantNameStrategyCUSTOM OAuth2BasicMapperConfigTenantNameStrategy = "CUSTOM"
	OAuth2BasicMapperConfigTenantNameStrategyDOMAIN OAuth2BasicMapperConfigTenantNameStrategy = "DOMAIN"
	OAuth2BasicMapperConfigTenantNameStrategyEMAIL  OAuth2BasicMapperConfigTenantNameStrategy = "EMAIL"
)

// Defines values for OAuth2DomainInfoScheme.
const (
	HTTP  OAuth2DomainInfoScheme = "HTTP"
	HTTPS OAuth2DomainInfoScheme = "HTTPS"
	MIXED OAuth2DomainInfoScheme = "MIXED"
)

// Defines values for OAuth2MapperConfigType.
const (
	OAuth2MapperConfigTypeAPPLE  OAuth2MapperConfigType = "APPLE"
	OAuth2MapperConfigTypeBASIC  OAuth2MapperConfigType = "BASIC"
	OAuth2MapperConfigTypeCUSTOM OAuth2MapperConfigType = "CUSTOM"
	OAuth2MapperConfigTypeGITHUB OAuth2MapperConfigType = "GITHUB"
)

// Defines values for OAuth2RegistrationInfoPlatforms.
const (
	ANDROID OAuth2RegistrationInfoPlatforms = "ANDROID"
	IOS     OAuth2RegistrationInfoPlatforms = "IOS"
	WEB     OAuth2RegistrationInfoPlatforms = "WEB"
)

// Defines values for OtaPackageIdEntityType.
const (
	OtaPackageIdEntityTypeOTAPACKAGE OtaPackageIdEntityType = "OTA_PACKAGE"
)

// Defines values for OtaPackageInfoChecksumAlgorithm.
const (
	OtaPackageInfoChecksumAlgorithmCRC32      OtaPackageInfoChecksumAlgorithm = "CRC32"
	OtaPackageInfoChecksumAlgorithmMD5        OtaPackageInfoChecksumAlgorithm = "MD5"
	OtaPackageInfoChecksumAlgorithmMURMUR3128 OtaPackageInfoChecksumAlgorithm = "MURMUR3_128"
	OtaPackageInfoChecksumAlgorithmMURMUR332  OtaPackageInfoChecksumAlgorithm = "MURMUR3_32"
	OtaPackageInfoChecksumAlgorithmSHA256     OtaPackageInfoChecksumAlgorithm = "SHA256"
	OtaPackageInfoChecksumAlgorithmSHA384     OtaPackageInfoChecksumAlgorithm = "SHA384"
	OtaPackageInfoChecksumAlgorithmSHA512     OtaPackageInfoChecksumAlgorithm = "SHA512"
)

// Defines values for OtaPackageInfoType.
const (
	OtaPackageInfoTypeFIRMWARE OtaPackageInfoType = "FIRMWARE"
	OtaPackageInfoTypeSOFTWARE OtaPackageInfoType = "SOFTWARE"
)

// Defines values for OtherConfigurationPowerMode.
const (
	OtherConfigurationPowerModeDRX  OtherConfigurationPowerMode = "DRX"
	OtherConfigurationPowerModeEDRX OtherConfigurationPowerMode = "E_DRX"
	OtherConfigurationPowerModePSM  OtherConfigurationPowerMode = "PSM"
)

// Defines values for PowerSavingConfigurationPowerMode.
const (
	PowerSavingConfigurationPowerModeDRX  PowerSavingConfigurationPowerMode = "DRX"
	PowerSavingConfigurationPowerModeEDRX PowerSavingConfigurationPowerMode = "E_DRX"
	PowerSavingConfigurationPowerModePSM  PowerSavingConfigurationPowerMode = "PSM"
)

// Defines values for ProcessingStrategyType.
const (
	RETRYALL                   ProcessingStrategyType = "RETRY_ALL"
	RETRYFAILED                ProcessingStrategyType = "RETRY_FAILED"
	RETRYFAILEDANDTIMEDOUT     ProcessingStrategyType = "RETRY_FAILED_AND_TIMED_OUT"
	RETRYTIMEDOUT              ProcessingStrategyType = "RETRY_TIMED_OUT"
	SKIPALLFAILURES            ProcessingStrategyType = "SKIP_ALL_FAILURES"
	SKIPALLFAILURESANDTIMEDOUT ProcessingStrategyType = "SKIP_ALL_FAILURES_AND_TIMED_OUT"
)

// Defines values for QRCodeConfigBadgePosition.
const (
	LEFT  QRCodeConfigBadgePosition = "LEFT"
	RIGHT QRCodeConfigBadgePosition = "RIGHT"
)

// Defines values for QueueIdEntityType.
const (
	QueueIdEntityTypeQUEUE QueueIdEntityType = "QUEUE"
)

// Defines values for QueueStatsIdEntityType.
const (
	QueueStatsIdEntityTypeQUEUESTATS QueueStatsIdEntityType = "QUEUE_STATS"
)

// Defines values for RateLimitsNotificationRuleTriggerConfigApis.
const (
	CASSANDRAQUERIES                  RateLimitsNotificationRuleTriggerConfigApis = "CASSANDRA_QUERIES"
	EDGEEVENTS                        RateLimitsNotificationRuleTriggerConfigApis = "EDGE_EVENTS"
	EDGEEVENTSPEREDGE                 RateLimitsNotificationRuleTriggerConfigApis = "EDGE_EVENTS_PER_EDGE"
	EDGEUPLINKMESSAGES                RateLimitsNotificationRuleTriggerConfigApis = "EDGE_UPLINK_MESSAGES"
	EDGEUPLINKMESSAGESPEREDGE         RateLimitsNotificationRuleTriggerConfigApis = "EDGE_UPLINK_MESSAGES_PER_EDGE"
	EMAILS                            RateLimitsNotificationRuleTriggerConfigApis = "EMAILS"
	ENTITYEXPORT                      RateLimitsNotificationRuleTriggerConfigApis = "ENTITY_EXPORT"
	ENTITYIMPORT                      RateLimitsNotificationRuleTriggerConfigApis = "ENTITY_IMPORT"
	NOTIFICATIONREQUESTS              RateLimitsNotificationRuleTriggerConfigApis = "NOTIFICATION_REQUESTS"
	NOTIFICATIONREQUESTSPERRULE       RateLimitsNotificationRuleTriggerConfigApis = "NOTIFICATION_REQUESTS_PER_RULE"
	PASSWORDRESET                     RateLimitsNotificationRuleTriggerConfigApis = "PASSWORD_RESET"
	RESTREQUESTSPERCUSTOMER           RateLimitsNotificationRuleTriggerConfigApis = "REST_REQUESTS_PER_CUSTOMER"
	RESTREQUESTSPERTENANT             RateLimitsNotificationRuleTriggerConfigApis = "REST_REQUESTS_PER_TENANT"
	TRANSPORTMESSAGESPERDEVICE        RateLimitsNotificationRuleTriggerConfigApis = "TRANSPORT_MESSAGES_PER_DEVICE"
	TRANSPORTMESSAGESPERGATEWAY       RateLimitsNotificationRuleTriggerConfigApis = "TRANSPORT_MESSAGES_PER_GATEWAY"
	TRANSPORTMESSAGESPERGATEWAYDEVICE RateLimitsNotificationRuleTriggerConfigApis = "TRANSPORT_MESSAGES_PER_GATEWAY_DEVICE"
	TRANSPORTMESSAGESPERTENANT        RateLimitsNotificationRuleTriggerConfigApis = "TRANSPORT_MESSAGES_PER_TENANT"
	TWOFAVERIFICATIONCODECHECK        RateLimitsNotificationRuleTriggerConfigApis = "TWO_FA_VERIFICATION_CODE_CHECK"
	TWOFAVERIFICATIONCODESEND         RateLimitsNotificationRuleTriggerConfigApis = "TWO_FA_VERIFICATION_CODE_SEND"
	WSUPDATESPERSESSION               RateLimitsNotificationRuleTriggerConfigApis = "WS_UPDATES_PER_SESSION"
)

// Defines values for RateLimitsNotificationRuleTriggerConfigTriggerType.
const (
	RateLimitsNotificationRuleTriggerConfigTriggerTypeALARM                             RateLimitsNotificationRuleTriggerConfigTriggerType = "ALARM"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   RateLimitsNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      RateLimitsNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     RateLimitsNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    RateLimitsNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          RateLimitsNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    RateLimitsNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     RateLimitsNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      RateLimitsNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                RateLimitsNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        RateLimitsNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT RateLimitsNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	RateLimitsNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             RateLimitsNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for RelationEntityTypeFilterEntityTypes.
const (
	RelationEntityTypeFilterEntityTypesALARM                RelationEntityTypeFilterEntityTypes = "ALARM"
	RelationEntityTypeFilterEntityTypesAPIUSAGESTATE        RelationEntityTypeFilterEntityTypes = "API_USAGE_STATE"
	RelationEntityTypeFilterEntityTypesASSET                RelationEntityTypeFilterEntityTypes = "ASSET"
	RelationEntityTypeFilterEntityTypesASSETPROFILE         RelationEntityTypeFilterEntityTypes = "ASSET_PROFILE"
	RelationEntityTypeFilterEntityTypesCUSTOMER             RelationEntityTypeFilterEntityTypes = "CUSTOMER"
	RelationEntityTypeFilterEntityTypesDASHBOARD            RelationEntityTypeFilterEntityTypes = "DASHBOARD"
	RelationEntityTypeFilterEntityTypesDEVICE               RelationEntityTypeFilterEntityTypes = "DEVICE"
	RelationEntityTypeFilterEntityTypesDEVICEPROFILE        RelationEntityTypeFilterEntityTypes = "DEVICE_PROFILE"
	RelationEntityTypeFilterEntityTypesEDGE                 RelationEntityTypeFilterEntityTypes = "EDGE"
	RelationEntityTypeFilterEntityTypesENTITYVIEW           RelationEntityTypeFilterEntityTypes = "ENTITY_VIEW"
	RelationEntityTypeFilterEntityTypesNOTIFICATION         RelationEntityTypeFilterEntityTypes = "NOTIFICATION"
	RelationEntityTypeFilterEntityTypesNOTIFICATIONREQUEST  RelationEntityTypeFilterEntityTypes = "NOTIFICATION_REQUEST"
	RelationEntityTypeFilterEntityTypesNOTIFICATIONRULE     RelationEntityTypeFilterEntityTypes = "NOTIFICATION_RULE"
	RelationEntityTypeFilterEntityTypesNOTIFICATIONTARGET   RelationEntityTypeFilterEntityTypes = "NOTIFICATION_TARGET"
	RelationEntityTypeFilterEntityTypesNOTIFICATIONTEMPLATE RelationEntityTypeFilterEntityTypes = "NOTIFICATION_TEMPLATE"
	RelationEntityTypeFilterEntityTypesOTAPACKAGE           RelationEntityTypeFilterEntityTypes = "OTA_PACKAGE"
	RelationEntityTypeFilterEntityTypesQUEUE                RelationEntityTypeFilterEntityTypes = "QUEUE"
	RelationEntityTypeFilterEntityTypesQUEUESTATS           RelationEntityTypeFilterEntityTypes = "QUEUE_STATS"
	RelationEntityTypeFilterEntityTypesRPC                  RelationEntityTypeFilterEntityTypes = "RPC"
	RelationEntityTypeFilterEntityTypesRULECHAIN            RelationEntityTypeFilterEntityTypes = "RULE_CHAIN"
	RelationEntityTypeFilterEntityTypesRULENODE             RelationEntityTypeFilterEntityTypes = "RULE_NODE"
	RelationEntityTypeFilterEntityTypesTBRESOURCE           RelationEntityTypeFilterEntityTypes = "TB_RESOURCE"
	RelationEntityTypeFilterEntityTypesTENANT               RelationEntityTypeFilterEntityTypes = "TENANT"
	RelationEntityTypeFilterEntityTypesTENANTPROFILE        RelationEntityTypeFilterEntityTypes = "TENANT_PROFILE"
	RelationEntityTypeFilterEntityTypesUSER                 RelationEntityTypeFilterEntityTypes = "USER"
	RelationEntityTypeFilterEntityTypesWIDGETSBUNDLE        RelationEntityTypeFilterEntityTypes = "WIDGETS_BUNDLE"
	RelationEntityTypeFilterEntityTypesWIDGETTYPE           RelationEntityTypeFilterEntityTypes = "WIDGET_TYPE"
)

// Defines values for RelationsQueryFilterDirection.
const (
	RelationsQueryFilterDirectionFROM RelationsQueryFilterDirection = "FROM"
	RelationsQueryFilterDirectionTO   RelationsQueryFilterDirection = "TO"
)

// Defines values for RelationsQueryFilterMultiRootEntitiesType.
const (
	RelationsQueryFilterMultiRootEntitiesTypeALARM                RelationsQueryFilterMultiRootEntitiesType = "ALARM"
	RelationsQueryFilterMultiRootEntitiesTypeAPIUSAGESTATE        RelationsQueryFilterMultiRootEntitiesType = "API_USAGE_STATE"
	RelationsQueryFilterMultiRootEntitiesTypeASSET                RelationsQueryFilterMultiRootEntitiesType = "ASSET"
	RelationsQueryFilterMultiRootEntitiesTypeASSETPROFILE         RelationsQueryFilterMultiRootEntitiesType = "ASSET_PROFILE"
	RelationsQueryFilterMultiRootEntitiesTypeCUSTOMER             RelationsQueryFilterMultiRootEntitiesType = "CUSTOMER"
	RelationsQueryFilterMultiRootEntitiesTypeDASHBOARD            RelationsQueryFilterMultiRootEntitiesType = "DASHBOARD"
	RelationsQueryFilterMultiRootEntitiesTypeDEVICE               RelationsQueryFilterMultiRootEntitiesType = "DEVICE"
	RelationsQueryFilterMultiRootEntitiesTypeDEVICEPROFILE        RelationsQueryFilterMultiRootEntitiesType = "DEVICE_PROFILE"
	RelationsQueryFilterMultiRootEntitiesTypeEDGE                 RelationsQueryFilterMultiRootEntitiesType = "EDGE"
	RelationsQueryFilterMultiRootEntitiesTypeENTITYVIEW           RelationsQueryFilterMultiRootEntitiesType = "ENTITY_VIEW"
	RelationsQueryFilterMultiRootEntitiesTypeNOTIFICATION         RelationsQueryFilterMultiRootEntitiesType = "NOTIFICATION"
	RelationsQueryFilterMultiRootEntitiesTypeNOTIFICATIONREQUEST  RelationsQueryFilterMultiRootEntitiesType = "NOTIFICATION_REQUEST"
	RelationsQueryFilterMultiRootEntitiesTypeNOTIFICATIONRULE     RelationsQueryFilterMultiRootEntitiesType = "NOTIFICATION_RULE"
	RelationsQueryFilterMultiRootEntitiesTypeNOTIFICATIONTARGET   RelationsQueryFilterMultiRootEntitiesType = "NOTIFICATION_TARGET"
	RelationsQueryFilterMultiRootEntitiesTypeNOTIFICATIONTEMPLATE RelationsQueryFilterMultiRootEntitiesType = "NOTIFICATION_TEMPLATE"
	RelationsQueryFilterMultiRootEntitiesTypeOTAPACKAGE           RelationsQueryFilterMultiRootEntitiesType = "OTA_PACKAGE"
	RelationsQueryFilterMultiRootEntitiesTypeQUEUE                RelationsQueryFilterMultiRootEntitiesType = "QUEUE"
	RelationsQueryFilterMultiRootEntitiesTypeQUEUESTATS           RelationsQueryFilterMultiRootEntitiesType = "QUEUE_STATS"
	RelationsQueryFilterMultiRootEntitiesTypeRPC                  RelationsQueryFilterMultiRootEntitiesType = "RPC"
	RelationsQueryFilterMultiRootEntitiesTypeRULECHAIN            RelationsQueryFilterMultiRootEntitiesType = "RULE_CHAIN"
	RelationsQueryFilterMultiRootEntitiesTypeRULENODE             RelationsQueryFilterMultiRootEntitiesType = "RULE_NODE"
	RelationsQueryFilterMultiRootEntitiesTypeTBRESOURCE           RelationsQueryFilterMultiRootEntitiesType = "TB_RESOURCE"
	RelationsQueryFilterMultiRootEntitiesTypeTENANT               RelationsQueryFilterMultiRootEntitiesType = "TENANT"
	RelationsQueryFilterMultiRootEntitiesTypeTENANTPROFILE        RelationsQueryFilterMultiRootEntitiesType = "TENANT_PROFILE"
	RelationsQueryFilterMultiRootEntitiesTypeUSER                 RelationsQueryFilterMultiRootEntitiesType = "USER"
	RelationsQueryFilterMultiRootEntitiesTypeWIDGETSBUNDLE        RelationsQueryFilterMultiRootEntitiesType = "WIDGETS_BUNDLE"
	RelationsQueryFilterMultiRootEntitiesTypeWIDGETTYPE           RelationsQueryFilterMultiRootEntitiesType = "WIDGET_TYPE"
)

// Defines values for RelationsSearchParametersDirection.
const (
	RelationsSearchParametersDirectionFROM RelationsSearchParametersDirection = "FROM"
	RelationsSearchParametersDirectionTO   RelationsSearchParametersDirection = "TO"
)

// Defines values for RelationsSearchParametersRelationTypeGroup.
const (
	RelationsSearchParametersRelationTypeGroupCOMMON                  RelationsSearchParametersRelationTypeGroup = "COMMON"
	RelationsSearchParametersRelationTypeGroupDASHBOARD               RelationsSearchParametersRelationTypeGroup = "DASHBOARD"
	RelationsSearchParametersRelationTypeGroupEDGE                    RelationsSearchParametersRelationTypeGroup = "EDGE"
	RelationsSearchParametersRelationTypeGroupEDGEAUTOASSIGNRULECHAIN RelationsSearchParametersRelationTypeGroup = "EDGE_AUTO_ASSIGN_RULE_CHAIN"
	RelationsSearchParametersRelationTypeGroupRULECHAIN               RelationsSearchParametersRelationTypeGroup = "RULE_CHAIN"
	RelationsSearchParametersRelationTypeGroupRULENODE                RelationsSearchParametersRelationTypeGroup = "RULE_NODE"
)

// Defines values for RelationsSearchParametersRootType.
const (
	RelationsSearchParametersRootTypeALARM                RelationsSearchParametersRootType = "ALARM"
	RelationsSearchParametersRootTypeAPIUSAGESTATE        RelationsSearchParametersRootType = "API_USAGE_STATE"
	RelationsSearchParametersRootTypeASSET                RelationsSearchParametersRootType = "ASSET"
	RelationsSearchParametersRootTypeASSETPROFILE         RelationsSearchParametersRootType = "ASSET_PROFILE"
	RelationsSearchParametersRootTypeCUSTOMER             RelationsSearchParametersRootType = "CUSTOMER"
	RelationsSearchParametersRootTypeDASHBOARD            RelationsSearchParametersRootType = "DASHBOARD"
	RelationsSearchParametersRootTypeDEVICE               RelationsSearchParametersRootType = "DEVICE"
	RelationsSearchParametersRootTypeDEVICEPROFILE        RelationsSearchParametersRootType = "DEVICE_PROFILE"
	RelationsSearchParametersRootTypeEDGE                 RelationsSearchParametersRootType = "EDGE"
	RelationsSearchParametersRootTypeENTITYVIEW           RelationsSearchParametersRootType = "ENTITY_VIEW"
	RelationsSearchParametersRootTypeNOTIFICATION         RelationsSearchParametersRootType = "NOTIFICATION"
	RelationsSearchParametersRootTypeNOTIFICATIONREQUEST  RelationsSearchParametersRootType = "NOTIFICATION_REQUEST"
	RelationsSearchParametersRootTypeNOTIFICATIONRULE     RelationsSearchParametersRootType = "NOTIFICATION_RULE"
	RelationsSearchParametersRootTypeNOTIFICATIONTARGET   RelationsSearchParametersRootType = "NOTIFICATION_TARGET"
	RelationsSearchParametersRootTypeNOTIFICATIONTEMPLATE RelationsSearchParametersRootType = "NOTIFICATION_TEMPLATE"
	RelationsSearchParametersRootTypeOTAPACKAGE           RelationsSearchParametersRootType = "OTA_PACKAGE"
	RelationsSearchParametersRootTypeQUEUE                RelationsSearchParametersRootType = "QUEUE"
	RelationsSearchParametersRootTypeQUEUESTATS           RelationsSearchParametersRootType = "QUEUE_STATS"
	RelationsSearchParametersRootTypeRPC                  RelationsSearchParametersRootType = "RPC"
	RelationsSearchParametersRootTypeRULECHAIN            RelationsSearchParametersRootType = "RULE_CHAIN"
	RelationsSearchParametersRootTypeRULENODE             RelationsSearchParametersRootType = "RULE_NODE"
	RelationsSearchParametersRootTypeTBRESOURCE           RelationsSearchParametersRootType = "TB_RESOURCE"
	RelationsSearchParametersRootTypeTENANT               RelationsSearchParametersRootType = "TENANT"
	RelationsSearchParametersRootTypeTENANTPROFILE        RelationsSearchParametersRootType = "TENANT_PROFILE"
	RelationsSearchParametersRootTypeUSER                 RelationsSearchParametersRootType = "USER"
	RelationsSearchParametersRootTypeWIDGETSBUNDLE        RelationsSearchParametersRootType = "WIDGETS_BUNDLE"
	RelationsSearchParametersRootTypeWIDGETTYPE           RelationsSearchParametersRootType = "WIDGET_TYPE"
)

// Defines values for RepositorySettingsAuthMethod.
const (
	PRIVATEKEY       RepositorySettingsAuthMethod = "PRIVATE_KEY"
	USERNAMEPASSWORD RepositorySettingsAuthMethod = "USERNAME_PASSWORD"
)

// Defines values for RpcStatus.
const (
	RpcStatusDELETED    RpcStatus = "DELETED"
	RpcStatusDELIVERED  RpcStatus = "DELIVERED"
	RpcStatusEXPIRED    RpcStatus = "EXPIRED"
	RpcStatusFAILED     RpcStatus = "FAILED"
	RpcStatusQUEUED     RpcStatus = "QUEUED"
	RpcStatusSENT       RpcStatus = "SENT"
	RpcStatusSUCCESSFUL RpcStatus = "SUCCESSFUL"
	RpcStatusTIMEOUT    RpcStatus = "TIMEOUT"
)

// Defines values for RpcIdEntityType.
const (
	RpcIdEntityTypeRPC RpcIdEntityType = "RPC"
)

// Defines values for RuleChainType.
const (
	RuleChainTypeCORE RuleChainType = "CORE"
	RuleChainTypeEDGE RuleChainType = "EDGE"
)

// Defines values for RuleChainDebugEventFilterEventType.
const (
	RuleChainDebugEventFilterEventTypeDEBUGRULECHAIN RuleChainDebugEventFilterEventType = "DEBUG_RULE_CHAIN"
	RuleChainDebugEventFilterEventTypeDEBUGRULENODE  RuleChainDebugEventFilterEventType = "DEBUG_RULE_NODE"
	RuleChainDebugEventFilterEventTypeERROR          RuleChainDebugEventFilterEventType = "ERROR"
	RuleChainDebugEventFilterEventTypeLCEVENT        RuleChainDebugEventFilterEventType = "LC_EVENT"
	RuleChainDebugEventFilterEventTypeSTATS          RuleChainDebugEventFilterEventType = "STATS"
)

// Defines values for RuleChainExportDataEntityType.
const (
	RuleChainExportDataEntityTypeALARM                RuleChainExportDataEntityType = "ALARM"
	RuleChainExportDataEntityTypeAPIUSAGESTATE        RuleChainExportDataEntityType = "API_USAGE_STATE"
	RuleChainExportDataEntityTypeASSET                RuleChainExportDataEntityType = "ASSET"
	RuleChainExportDataEntityTypeASSETPROFILE         RuleChainExportDataEntityType = "ASSET_PROFILE"
	RuleChainExportDataEntityTypeCUSTOMER             RuleChainExportDataEntityType = "CUSTOMER"
	RuleChainExportDataEntityTypeDASHBOARD            RuleChainExportDataEntityType = "DASHBOARD"
	RuleChainExportDataEntityTypeDEVICE               RuleChainExportDataEntityType = "DEVICE"
	RuleChainExportDataEntityTypeDEVICEPROFILE        RuleChainExportDataEntityType = "DEVICE_PROFILE"
	RuleChainExportDataEntityTypeEDGE                 RuleChainExportDataEntityType = "EDGE"
	RuleChainExportDataEntityTypeENTITYVIEW           RuleChainExportDataEntityType = "ENTITY_VIEW"
	RuleChainExportDataEntityTypeNOTIFICATION         RuleChainExportDataEntityType = "NOTIFICATION"
	RuleChainExportDataEntityTypeNOTIFICATIONREQUEST  RuleChainExportDataEntityType = "NOTIFICATION_REQUEST"
	RuleChainExportDataEntityTypeNOTIFICATIONRULE     RuleChainExportDataEntityType = "NOTIFICATION_RULE"
	RuleChainExportDataEntityTypeNOTIFICATIONTARGET   RuleChainExportDataEntityType = "NOTIFICATION_TARGET"
	RuleChainExportDataEntityTypeNOTIFICATIONTEMPLATE RuleChainExportDataEntityType = "NOTIFICATION_TEMPLATE"
	RuleChainExportDataEntityTypeOTAPACKAGE           RuleChainExportDataEntityType = "OTA_PACKAGE"
	RuleChainExportDataEntityTypeQUEUE                RuleChainExportDataEntityType = "QUEUE"
	RuleChainExportDataEntityTypeQUEUESTATS           RuleChainExportDataEntityType = "QUEUE_STATS"
	RuleChainExportDataEntityTypeRPC                  RuleChainExportDataEntityType = "RPC"
	RuleChainExportDataEntityTypeRULECHAIN            RuleChainExportDataEntityType = "RULE_CHAIN"
	RuleChainExportDataEntityTypeRULENODE             RuleChainExportDataEntityType = "RULE_NODE"
	RuleChainExportDataEntityTypeTBRESOURCE           RuleChainExportDataEntityType = "TB_RESOURCE"
	RuleChainExportDataEntityTypeTENANT               RuleChainExportDataEntityType = "TENANT"
	RuleChainExportDataEntityTypeTENANTPROFILE        RuleChainExportDataEntityType = "TENANT_PROFILE"
	RuleChainExportDataEntityTypeUSER                 RuleChainExportDataEntityType = "USER"
	RuleChainExportDataEntityTypeWIDGETSBUNDLE        RuleChainExportDataEntityType = "WIDGETS_BUNDLE"
	RuleChainExportDataEntityTypeWIDGETTYPE           RuleChainExportDataEntityType = "WIDGET_TYPE"
)

// Defines values for RuleChainIdEntityType.
const (
	RuleChainIdEntityTypeRULECHAIN RuleChainIdEntityType = "RULE_CHAIN"
)

// Defines values for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents.
const (
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsACTIVATED   RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "ACTIVATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsCREATED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "CREATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsDEACTIVATED RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "DEACTIVATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsDELETED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "DELETED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsFAILED      RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "FAILED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsSTARTED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "STARTED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsSTOPPED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "STOPPED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsSUSPENDED   RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "SUSPENDED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEventsUPDATED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents = "UPDATED"
)

// Defines values for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents.
const (
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsACTIVATED   RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "ACTIVATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsCREATED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "CREATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsDEACTIVATED RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "DEACTIVATED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsDELETED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "DELETED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsFAILED      RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "FAILED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsSTARTED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "STARTED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsSTOPPED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "STOPPED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsSUSPENDED   RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "SUSPENDED"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEventsUPDATED     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents = "UPDATED"
)

// Defines values for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType.
const (
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeALARM                             RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "ALARM"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeALARMASSIGNMENT                   RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "ALARM_ASSIGNMENT"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeALARMCOMMENT                      RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "ALARM_COMMENT"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeAPIUSAGELIMIT                     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "API_USAGE_LIMIT"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeDEVICEACTIVITY                    RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "DEVICE_ACTIVITY"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeEDGECOMMUNICATIONFAILURE          RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "EDGE_COMMUNICATION_FAILURE"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeEDGECONNECTION                    RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "EDGE_CONNECTION"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeENTITIESLIMIT                     RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "ENTITIES_LIMIT"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeENTITYACTION                      RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "ENTITY_ACTION"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeNEWPLATFORMVERSION                RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "NEW_PLATFORM_VERSION"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeRATELIMITS                        RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "RATE_LIMITS"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeRULEENGINECOMPONENTLIFECYCLEEVENT RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "RULE_ENGINE_COMPONENT_LIFECYCLE_EVENT"
	RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerTypeTASKPROCESSINGFAILURE             RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType = "TASK_PROCESSING_FAILURE"
)

// Defines values for RuleNodeDebugEventFilterEntityType.
const (
	DEVICE RuleNodeDebugEventFilterEntityType = "DEVICE"
)

// Defines values for RuleNodeDebugEventFilterEventType.
const (
	RuleNodeDebugEventFilterEventTypeDEBUGRULECHAIN RuleNodeDebugEventFilterEventType = "DEBUG_RULE_CHAIN"
	RuleNodeDebugEventFilterEventTypeDEBUGRULENODE  RuleNodeDebugEventFilterEventType = "DEBUG_RULE_NODE"
	RuleNodeDebugEventFilterEventTypeERROR          RuleNodeDebugEventFilterEventType = "ERROR"
	RuleNodeDebugEventFilterEventTypeLCEVENT        RuleNodeDebugEventFilterEventType = "LC_EVENT"
	RuleNodeDebugEventFilterEventTypeSTATS          RuleNodeDebugEventFilterEventType = "STATS"
)

// Defines values for RuleNodeDebugEventFilterMsgDirectionType.
const (
	RuleNodeDebugEventFilterMsgDirectionTypeIN  RuleNodeDebugEventFilterMsgDirectionType = "IN"
	RuleNodeDebugEventFilterMsgDirectionTypeOUT RuleNodeDebugEventFilterMsgDirectionType = "OUT"
)

// Defines values for RuleNodeIdEntityType.
const (
	RULENODE RuleNodeIdEntityType = "RULE_NODE"
)

// Defines values for SaveOtaPackageInfoRequestChecksumAlgorithm.
const (
	SaveOtaPackageInfoRequestChecksumAlgorithmCRC32      SaveOtaPackageInfoRequestChecksumAlgorithm = "CRC32"
	SaveOtaPackageInfoRequestChecksumAlgorithmMD5        SaveOtaPackageInfoRequestChecksumAlgorithm = "MD5"
	SaveOtaPackageInfoRequestChecksumAlgorithmMURMUR3128 SaveOtaPackageInfoRequestChecksumAlgorithm = "MURMUR3_128"
	SaveOtaPackageInfoRequestChecksumAlgorithmMURMUR332  SaveOtaPackageInfoRequestChecksumAlgorithm = "MURMUR3_32"
	SaveOtaPackageInfoRequestChecksumAlgorithmSHA256     SaveOtaPackageInfoRequestChecksumAlgorithm = "SHA256"
	SaveOtaPackageInfoRequestChecksumAlgorithmSHA384     SaveOtaPackageInfoRequestChecksumAlgorithm = "SHA384"
	SaveOtaPackageInfoRequestChecksumAlgorithmSHA512     SaveOtaPackageInfoRequestChecksumAlgorithm = "SHA512"
)

// Defines values for SaveOtaPackageInfoRequestType.
const (
	SaveOtaPackageInfoRequestTypeFIRMWARE SaveOtaPackageInfoRequestType = "FIRMWARE"
	SaveOtaPackageInfoRequestTypeSOFTWARE SaveOtaPackageInfoRequestType = "SOFTWARE"
)

// Defines values for SingleEntityVersionLoadRequestType.
const (
	SingleEntityVersionLoadRequestTypeENTITYTYPE   SingleEntityVersionLoadRequestType = "ENTITY_TYPE"
	SingleEntityVersionLoadRequestTypeSINGLEENTITY SingleEntityVersionLoadRequestType = "SINGLE_ENTITY"
)

// Defines values for SlackConversationType.
const (
	SlackConversationTypeDIRECT         SlackConversationType = "DIRECT"
	SlackConversationTypePRIVATECHANNEL SlackConversationType = "PRIVATE_CHANNEL"
	SlackConversationTypePUBLICCHANNEL  SlackConversationType = "PUBLIC_CHANNEL"
)

// Defines values for SlackNotificationTargetConfigConversationType.
const (
	SlackNotificationTargetConfigConversationTypeDIRECT         SlackNotificationTargetConfigConversationType = "DIRECT"
	SlackNotificationTargetConfigConversationTypePRIVATECHANNEL SlackNotificationTargetConfigConversationType = "PRIVATE_CHANNEL"
	SlackNotificationTargetConfigConversationTypePUBLICCHANNEL  SlackNotificationTargetConfigConversationType = "PUBLIC_CHANNEL"
)

// Defines values for SmppSmsProviderConfigurationBindType.
const (
	RX  SmppSmsProviderConfigurationBindType = "RX"
	TRX SmppSmsProviderConfigurationBindType = "TRX"
	TX  SmppSmsProviderConfigurationBindType = "TX"
)

// Defines values for SmppSmsProviderConfigurationProtocolVersion.
const (
	N3334 SmppSmsProviderConfigurationProtocolVersion = "3.3, 3.4"
)

// Defines values for SnmpCommunicationConfigSpec.
const (
	CLIENTATTRIBUTESQUERYING SnmpCommunicationConfigSpec = "CLIENT_ATTRIBUTES_QUERYING"
	SHAREDATTRIBUTESSETTING  SnmpCommunicationConfigSpec = "SHARED_ATTRIBUTES_SETTING"
	TELEMETRYQUERYING        SnmpCommunicationConfigSpec = "TELEMETRY_QUERYING"
	TODEVICERPCREQUEST       SnmpCommunicationConfigSpec = "TO_DEVICE_RPC_REQUEST"
	TOSERVERRPCREQUEST       SnmpCommunicationConfigSpec = "TO_SERVER_RPC_REQUEST"
)

// Defines values for SnmpDeviceTransportConfigurationAuthenticationProtocol.
const (
	MD5    SnmpDeviceTransportConfigurationAuthenticationProtocol = "MD5"
	SHA1   SnmpDeviceTransportConfigurationAuthenticationProtocol = "SHA_1"
	SHA224 SnmpDeviceTransportConfigurationAuthenticationProtocol = "SHA_224"
	SHA256 SnmpDeviceTransportConfigurationAuthenticationProtocol = "SHA_256"
	SHA384 SnmpDeviceTransportConfigurationAuthenticationProtocol = "SHA_384"
	SHA512 SnmpDeviceTransportConfigurationAuthenticationProtocol = "SHA_512"
)

// Defines values for SnmpDeviceTransportConfigurationPrivacyProtocol.
const (
	AES128 SnmpDeviceTransportConfigurationPrivacyProtocol = "AES_128"
	AES192 SnmpDeviceTransportConfigurationPrivacyProtocol = "AES_192"
	AES256 SnmpDeviceTransportConfigurationPrivacyProtocol = "AES_256"
	DES    SnmpDeviceTransportConfigurationPrivacyProtocol = "DES"
)

// Defines values for SnmpDeviceTransportConfigurationProtocolVersion.
const (
	V1  SnmpDeviceTransportConfigurationProtocolVersion = "V1"
	V2C SnmpDeviceTransportConfigurationProtocolVersion = "V2C"
	V3  SnmpDeviceTransportConfigurationProtocolVersion = "V3"
)

// Defines values for SpecificTimeScheduleType.
const (
	SpecificTimeScheduleTypeANYTIME      SpecificTimeScheduleType = "ANY_TIME"
	SpecificTimeScheduleTypeCUSTOM       SpecificTimeScheduleType = "CUSTOM"
	SpecificTimeScheduleTypeSPECIFICTIME SpecificTimeScheduleType = "SPECIFIC_TIME"
)

// Defines values for StatisticsEventFilterEventType.
const (
	StatisticsEventFilterEventTypeDEBUGRULECHAIN StatisticsEventFilterEventType = "DEBUG_RULE_CHAIN"
	StatisticsEventFilterEventTypeDEBUGRULENODE  StatisticsEventFilterEventType = "DEBUG_RULE_NODE"
	StatisticsEventFilterEventTypeERROR          StatisticsEventFilterEventType = "ERROR"
	StatisticsEventFilterEventTypeLCEVENT        StatisticsEventFilterEventType = "LC_EVENT"
	StatisticsEventFilterEventTypeSTATS          StatisticsEventFilterEventType = "STATS"
)

// Defines values for StringFilterPredicateOperation.
const (
	StringFilterPredicateOperationCONTAINS    StringFilterPredicateOperation = "CONTAINS"
	StringFilterPredicateOperationENDSWITH    StringFilterPredicateOperation = "ENDS_WITH"
	StringFilterPredicateOperationEQUAL       StringFilterPredicateOperation = "EQUAL"
	StringFilterPredicateOperationIN          StringFilterPredicateOperation = "IN"
	StringFilterPredicateOperationNOTCONTAINS StringFilterPredicateOperation = "NOT_CONTAINS"
	StringFilterPredicateOperationNOTEQUAL    StringFilterPredicateOperation = "NOT_EQUAL"
	StringFilterPredicateOperationNOTIN       StringFilterPredicateOperation = "NOT_IN"
	StringFilterPredicateOperationSTARTSWITH  StringFilterPredicateOperation = "STARTS_WITH"
)

// Defines values for SubmitStrategyType.
const (
	BATCH                  SubmitStrategyType = "BATCH"
	BURST                  SubmitStrategyType = "BURST"
	SEQUENTIAL             SubmitStrategyType = "SEQUENTIAL"
	SEQUENTIALBYORIGINATOR SubmitStrategyType = "SEQUENTIAL_BY_ORIGINATOR"
	SEQUENTIALBYTENANT     SubmitStrategyType = "SEQUENTIAL_BY_TENANT"
)

// Defines values for TbResourceResourceType.
const (
	TbResourceResourceTypeIMAGE      TbResourceResourceType = "IMAGE"
	TbResourceResourceTypeJKS        TbResourceResourceType = "JKS"
	TbResourceResourceTypeJSMODULE   TbResourceResourceType = "JS_MODULE"
	TbResourceResourceTypeLWM2MMODEL TbResourceResourceType = "LWM2M_MODEL"
	TbResourceResourceTypePKCS12     TbResourceResourceType = "PKCS_12"
)

// Defines values for TbResourceIdEntityType.
const (
	TBRESOURCE TbResourceIdEntityType = "TB_RESOURCE"
)

// Defines values for TbResourceInfoResourceType.
const (
	TbResourceInfoResourceTypeIMAGE      TbResourceInfoResourceType = "IMAGE"
	TbResourceInfoResourceTypeJKS        TbResourceInfoResourceType = "JKS"
	TbResourceInfoResourceTypeJSMODULE   TbResourceInfoResourceType = "JS_MODULE"
	TbResourceInfoResourceTypeLWM2MMODEL TbResourceInfoResourceType = "LWM2M_MODEL"
	TbResourceInfoResourceTypePKCS12     TbResourceInfoResourceType = "PKCS_12"
)

// Defines values for TenantIdEntityType.
const (
	TENANT TenantIdEntityType = "TENANT"
)

// Defines values for TenantProfileIdEntityType.
const (
	TENANTPROFILE TenantProfileIdEntityType = "TENANT_PROFILE"
)

// Defines values for TwoFaProviderInfoType.
const (
	TwoFaProviderInfoTypeBACKUPCODE TwoFaProviderInfoType = "BACKUP_CODE"
	TwoFaProviderInfoTypeEMAIL      TwoFaProviderInfoType = "EMAIL"
	TwoFaProviderInfoTypeSMS        TwoFaProviderInfoType = "SMS"
	TwoFaProviderInfoTypeTOTP       TwoFaProviderInfoType = "TOTP"
)

// Defines values for UserAuthority.
const (
	UserAuthorityCUSTOMERUSER         UserAuthority = "CUSTOMER_USER"
	UserAuthorityPREVERIFICATIONTOKEN UserAuthority = "PRE_VERIFICATION_TOKEN"
	UserAuthorityREFRESHTOKEN         UserAuthority = "REFRESH_TOKEN"
	UserAuthoritySYSADMIN             UserAuthority = "SYS_ADMIN"
	UserAuthorityTENANTADMIN          UserAuthority = "TENANT_ADMIN"
)

// Defines values for UserIdEntityType.
const (
	USER UserIdEntityType = "USER"
)

// Defines values for VersionLoadRequestType.
const (
	ENTITYTYPE   VersionLoadRequestType = "ENTITY_TYPE"
	SINGLEENTITY VersionLoadRequestType = "SINGLE_ENTITY"
)

// Defines values for WidgetTypeExportDataEntityType.
const (
	WidgetTypeExportDataEntityTypeALARM                WidgetTypeExportDataEntityType = "ALARM"
	WidgetTypeExportDataEntityTypeAPIUSAGESTATE        WidgetTypeExportDataEntityType = "API_USAGE_STATE"
	WidgetTypeExportDataEntityTypeASSET                WidgetTypeExportDataEntityType = "ASSET"
	WidgetTypeExportDataEntityTypeASSETPROFILE         WidgetTypeExportDataEntityType = "ASSET_PROFILE"
	WidgetTypeExportDataEntityTypeCUSTOMER             WidgetTypeExportDataEntityType = "CUSTOMER"
	WidgetTypeExportDataEntityTypeDASHBOARD            WidgetTypeExportDataEntityType = "DASHBOARD"
	WidgetTypeExportDataEntityTypeDEVICE               WidgetTypeExportDataEntityType = "DEVICE"
	WidgetTypeExportDataEntityTypeDEVICEPROFILE        WidgetTypeExportDataEntityType = "DEVICE_PROFILE"
	WidgetTypeExportDataEntityTypeEDGE                 WidgetTypeExportDataEntityType = "EDGE"
	WidgetTypeExportDataEntityTypeENTITYVIEW           WidgetTypeExportDataEntityType = "ENTITY_VIEW"
	WidgetTypeExportDataEntityTypeNOTIFICATION         WidgetTypeExportDataEntityType = "NOTIFICATION"
	WidgetTypeExportDataEntityTypeNOTIFICATIONREQUEST  WidgetTypeExportDataEntityType = "NOTIFICATION_REQUEST"
	WidgetTypeExportDataEntityTypeNOTIFICATIONRULE     WidgetTypeExportDataEntityType = "NOTIFICATION_RULE"
	WidgetTypeExportDataEntityTypeNOTIFICATIONTARGET   WidgetTypeExportDataEntityType = "NOTIFICATION_TARGET"
	WidgetTypeExportDataEntityTypeNOTIFICATIONTEMPLATE WidgetTypeExportDataEntityType = "NOTIFICATION_TEMPLATE"
	WidgetTypeExportDataEntityTypeOTAPACKAGE           WidgetTypeExportDataEntityType = "OTA_PACKAGE"
	WidgetTypeExportDataEntityTypeQUEUE                WidgetTypeExportDataEntityType = "QUEUE"
	WidgetTypeExportDataEntityTypeQUEUESTATS           WidgetTypeExportDataEntityType = "QUEUE_STATS"
	WidgetTypeExportDataEntityTypeRPC                  WidgetTypeExportDataEntityType = "RPC"
	WidgetTypeExportDataEntityTypeRULECHAIN            WidgetTypeExportDataEntityType = "RULE_CHAIN"
	WidgetTypeExportDataEntityTypeRULENODE             WidgetTypeExportDataEntityType = "RULE_NODE"
	WidgetTypeExportDataEntityTypeTBRESOURCE           WidgetTypeExportDataEntityType = "TB_RESOURCE"
	WidgetTypeExportDataEntityTypeTENANT               WidgetTypeExportDataEntityType = "TENANT"
	WidgetTypeExportDataEntityTypeTENANTPROFILE        WidgetTypeExportDataEntityType = "TENANT_PROFILE"
	WidgetTypeExportDataEntityTypeUSER                 WidgetTypeExportDataEntityType = "USER"
	WidgetTypeExportDataEntityTypeWIDGETSBUNDLE        WidgetTypeExportDataEntityType = "WIDGETS_BUNDLE"
	WidgetTypeExportDataEntityTypeWIDGETTYPE           WidgetTypeExportDataEntityType = "WIDGET_TYPE"
)

// Defines values for WidgetTypeIdEntityType.
const (
	WIDGETTYPE WidgetTypeIdEntityType = "WIDGET_TYPE"
)

// Defines values for WidgetsBundleExportDataEntityType.
const (
	WidgetsBundleExportDataEntityTypeALARM                WidgetsBundleExportDataEntityType = "ALARM"
	WidgetsBundleExportDataEntityTypeAPIUSAGESTATE        WidgetsBundleExportDataEntityType = "API_USAGE_STATE"
	WidgetsBundleExportDataEntityTypeASSET                WidgetsBundleExportDataEntityType = "ASSET"
	WidgetsBundleExportDataEntityTypeASSETPROFILE         WidgetsBundleExportDataEntityType = "ASSET_PROFILE"
	WidgetsBundleExportDataEntityTypeCUSTOMER             WidgetsBundleExportDataEntityType = "CUSTOMER"
	WidgetsBundleExportDataEntityTypeDASHBOARD            WidgetsBundleExportDataEntityType = "DASHBOARD"
	WidgetsBundleExportDataEntityTypeDEVICE               WidgetsBundleExportDataEntityType = "DEVICE"
	WidgetsBundleExportDataEntityTypeDEVICEPROFILE        WidgetsBundleExportDataEntityType = "DEVICE_PROFILE"
	WidgetsBundleExportDataEntityTypeEDGE                 WidgetsBundleExportDataEntityType = "EDGE"
	WidgetsBundleExportDataEntityTypeENTITYVIEW           WidgetsBundleExportDataEntityType = "ENTITY_VIEW"
	WidgetsBundleExportDataEntityTypeNOTIFICATION         WidgetsBundleExportDataEntityType = "NOTIFICATION"
	WidgetsBundleExportDataEntityTypeNOTIFICATIONREQUEST  WidgetsBundleExportDataEntityType = "NOTIFICATION_REQUEST"
	WidgetsBundleExportDataEntityTypeNOTIFICATIONRULE     WidgetsBundleExportDataEntityType = "NOTIFICATION_RULE"
	WidgetsBundleExportDataEntityTypeNOTIFICATIONTARGET   WidgetsBundleExportDataEntityType = "NOTIFICATION_TARGET"
	WidgetsBundleExportDataEntityTypeNOTIFICATIONTEMPLATE WidgetsBundleExportDataEntityType = "NOTIFICATION_TEMPLATE"
	WidgetsBundleExportDataEntityTypeOTAPACKAGE           WidgetsBundleExportDataEntityType = "OTA_PACKAGE"
	WidgetsBundleExportDataEntityTypeQUEUE                WidgetsBundleExportDataEntityType = "QUEUE"
	WidgetsBundleExportDataEntityTypeQUEUESTATS           WidgetsBundleExportDataEntityType = "QUEUE_STATS"
	WidgetsBundleExportDataEntityTypeRPC                  WidgetsBundleExportDataEntityType = "RPC"
	WidgetsBundleExportDataEntityTypeRULECHAIN            WidgetsBundleExportDataEntityType = "RULE_CHAIN"
	WidgetsBundleExportDataEntityTypeRULENODE             WidgetsBundleExportDataEntityType = "RULE_NODE"
	WidgetsBundleExportDataEntityTypeTBRESOURCE           WidgetsBundleExportDataEntityType = "TB_RESOURCE"
	WidgetsBundleExportDataEntityTypeTENANT               WidgetsBundleExportDataEntityType = "TENANT"
	WidgetsBundleExportDataEntityTypeTENANTPROFILE        WidgetsBundleExportDataEntityType = "TENANT_PROFILE"
	WidgetsBundleExportDataEntityTypeUSER                 WidgetsBundleExportDataEntityType = "USER"
	WidgetsBundleExportDataEntityTypeWIDGETSBUNDLE        WidgetsBundleExportDataEntityType = "WIDGETS_BUNDLE"
	WidgetsBundleExportDataEntityTypeWIDGETTYPE           WidgetsBundleExportDataEntityType = "WIDGET_TYPE"
)

// Defines values for WidgetsBundleIdEntityType.
const (
	WIDGETSBUNDLE WidgetsBundleIdEntityType = "WIDGETS_BUNDLE"
)

// Defines values for CheckTwoFaVerificationCodeParamsProviderType.
const (
	CheckTwoFaVerificationCodeParamsProviderTypeBACKUPCODE CheckTwoFaVerificationCodeParamsProviderType = "BACKUP_CODE"
	CheckTwoFaVerificationCodeParamsProviderTypeEMAIL      CheckTwoFaVerificationCodeParamsProviderType = "EMAIL"
	CheckTwoFaVerificationCodeParamsProviderTypeSMS        CheckTwoFaVerificationCodeParamsProviderType = "SMS"
	CheckTwoFaVerificationCodeParamsProviderTypeTOTP       CheckTwoFaVerificationCodeParamsProviderType = "TOTP"
)

// Defines values for RequestTwoFaVerificationCodeParamsProviderType.
const (
	BACKUPCODE RequestTwoFaVerificationCodeParamsProviderType = "BACKUP_CODE"
	EMAIL      RequestTwoFaVerificationCodeParamsProviderType = "EMAIL"
	SMS        RequestTwoFaVerificationCodeParamsProviderType = "SMS"
	TOTP       RequestTwoFaVerificationCodeParamsProviderType = "TOTP"
)

// Defines values for CompareEntityDataToVersionParamsEntityType.
const (
	CompareEntityDataToVersionParamsEntityTypeALARM                CompareEntityDataToVersionParamsEntityType = "ALARM"
	CompareEntityDataToVersionParamsEntityTypeAPIUSAGESTATE        CompareEntityDataToVersionParamsEntityType = "API_USAGE_STATE"
	CompareEntityDataToVersionParamsEntityTypeASSET                CompareEntityDataToVersionParamsEntityType = "ASSET"
	CompareEntityDataToVersionParamsEntityTypeASSETPROFILE         CompareEntityDataToVersionParamsEntityType = "ASSET_PROFILE"
	CompareEntityDataToVersionParamsEntityTypeCUSTOMER             CompareEntityDataToVersionParamsEntityType = "CUSTOMER"
	CompareEntityDataToVersionParamsEntityTypeDASHBOARD            CompareEntityDataToVersionParamsEntityType = "DASHBOARD"
	CompareEntityDataToVersionParamsEntityTypeDEVICE               CompareEntityDataToVersionParamsEntityType = "DEVICE"
	CompareEntityDataToVersionParamsEntityTypeDEVICEPROFILE        CompareEntityDataToVersionParamsEntityType = "DEVICE_PROFILE"
	CompareEntityDataToVersionParamsEntityTypeEDGE                 CompareEntityDataToVersionParamsEntityType = "EDGE"
	CompareEntityDataToVersionParamsEntityTypeENTITYVIEW           CompareEntityDataToVersionParamsEntityType = "ENTITY_VIEW"
	CompareEntityDataToVersionParamsEntityTypeNOTIFICATION         CompareEntityDataToVersionParamsEntityType = "NOTIFICATION"
	CompareEntityDataToVersionParamsEntityTypeNOTIFICATIONREQUEST  CompareEntityDataToVersionParamsEntityType = "NOTIFICATION_REQUEST"
	CompareEntityDataToVersionParamsEntityTypeNOTIFICATIONRULE     CompareEntityDataToVersionParamsEntityType = "NOTIFICATION_RULE"
	CompareEntityDataToVersionParamsEntityTypeNOTIFICATIONTARGET   CompareEntityDataToVersionParamsEntityType = "NOTIFICATION_TARGET"
	CompareEntityDataToVersionParamsEntityTypeNOTIFICATIONTEMPLATE CompareEntityDataToVersionParamsEntityType = "NOTIFICATION_TEMPLATE"
	CompareEntityDataToVersionParamsEntityTypeOTAPACKAGE           CompareEntityDataToVersionParamsEntityType = "OTA_PACKAGE"
	CompareEntityDataToVersionParamsEntityTypeQUEUE                CompareEntityDataToVersionParamsEntityType = "QUEUE"
	CompareEntityDataToVersionParamsEntityTypeQUEUESTATS           CompareEntityDataToVersionParamsEntityType = "QUEUE_STATS"
	CompareEntityDataToVersionParamsEntityTypeRPC                  CompareEntityDataToVersionParamsEntityType = "RPC"
	CompareEntityDataToVersionParamsEntityTypeRULECHAIN            CompareEntityDataToVersionParamsEntityType = "RULE_CHAIN"
	CompareEntityDataToVersionParamsEntityTypeRULENODE             CompareEntityDataToVersionParamsEntityType = "RULE_NODE"
	CompareEntityDataToVersionParamsEntityTypeTBRESOURCE           CompareEntityDataToVersionParamsEntityType = "TB_RESOURCE"
	CompareEntityDataToVersionParamsEntityTypeTENANT               CompareEntityDataToVersionParamsEntityType = "TENANT"
	CompareEntityDataToVersionParamsEntityTypeTENANTPROFILE        CompareEntityDataToVersionParamsEntityType = "TENANT_PROFILE"
	CompareEntityDataToVersionParamsEntityTypeUSER                 CompareEntityDataToVersionParamsEntityType = "USER"
	CompareEntityDataToVersionParamsEntityTypeWIDGETSBUNDLE        CompareEntityDataToVersionParamsEntityType = "WIDGETS_BUNDLE"
	CompareEntityDataToVersionParamsEntityTypeWIDGETTYPE           CompareEntityDataToVersionParamsEntityType = "WIDGET_TYPE"
)

// Defines values for ListEntitiesAtVersionParamsEntityType.
const (
	ListEntitiesAtVersionParamsEntityTypeALARM                ListEntitiesAtVersionParamsEntityType = "ALARM"
	ListEntitiesAtVersionParamsEntityTypeAPIUSAGESTATE        ListEntitiesAtVersionParamsEntityType = "API_USAGE_STATE"
	ListEntitiesAtVersionParamsEntityTypeASSET                ListEntitiesAtVersionParamsEntityType = "ASSET"
	ListEntitiesAtVersionParamsEntityTypeASSETPROFILE         ListEntitiesAtVersionParamsEntityType = "ASSET_PROFILE"
	ListEntitiesAtVersionParamsEntityTypeCUSTOMER             ListEntitiesAtVersionParamsEntityType = "CUSTOMER"
	ListEntitiesAtVersionParamsEntityTypeDASHBOARD            ListEntitiesAtVersionParamsEntityType = "DASHBOARD"
	ListEntitiesAtVersionParamsEntityTypeDEVICE               ListEntitiesAtVersionParamsEntityType = "DEVICE"
	ListEntitiesAtVersionParamsEntityTypeDEVICEPROFILE        ListEntitiesAtVersionParamsEntityType = "DEVICE_PROFILE"
	ListEntitiesAtVersionParamsEntityTypeEDGE                 ListEntitiesAtVersionParamsEntityType = "EDGE"
	ListEntitiesAtVersionParamsEntityTypeENTITYVIEW           ListEntitiesAtVersionParamsEntityType = "ENTITY_VIEW"
	ListEntitiesAtVersionParamsEntityTypeNOTIFICATION         ListEntitiesAtVersionParamsEntityType = "NOTIFICATION"
	ListEntitiesAtVersionParamsEntityTypeNOTIFICATIONREQUEST  ListEntitiesAtVersionParamsEntityType = "NOTIFICATION_REQUEST"
	ListEntitiesAtVersionParamsEntityTypeNOTIFICATIONRULE     ListEntitiesAtVersionParamsEntityType = "NOTIFICATION_RULE"
	ListEntitiesAtVersionParamsEntityTypeNOTIFICATIONTARGET   ListEntitiesAtVersionParamsEntityType = "NOTIFICATION_TARGET"
	ListEntitiesAtVersionParamsEntityTypeNOTIFICATIONTEMPLATE ListEntitiesAtVersionParamsEntityType = "NOTIFICATION_TEMPLATE"
	ListEntitiesAtVersionParamsEntityTypeOTAPACKAGE           ListEntitiesAtVersionParamsEntityType = "OTA_PACKAGE"
	ListEntitiesAtVersionParamsEntityTypeQUEUE                ListEntitiesAtVersionParamsEntityType = "QUEUE"
	ListEntitiesAtVersionParamsEntityTypeQUEUESTATS           ListEntitiesAtVersionParamsEntityType = "QUEUE_STATS"
	ListEntitiesAtVersionParamsEntityTypeRPC                  ListEntitiesAtVersionParamsEntityType = "RPC"
	ListEntitiesAtVersionParamsEntityTypeRULECHAIN            ListEntitiesAtVersionParamsEntityType = "RULE_CHAIN"
	ListEntitiesAtVersionParamsEntityTypeRULENODE             ListEntitiesAtVersionParamsEntityType = "RULE_NODE"
	ListEntitiesAtVersionParamsEntityTypeTBRESOURCE           ListEntitiesAtVersionParamsEntityType = "TB_RESOURCE"
	ListEntitiesAtVersionParamsEntityTypeTENANT               ListEntitiesAtVersionParamsEntityType = "TENANT"
	ListEntitiesAtVersionParamsEntityTypeTENANTPROFILE        ListEntitiesAtVersionParamsEntityType = "TENANT_PROFILE"
	ListEntitiesAtVersionParamsEntityTypeUSER                 ListEntitiesAtVersionParamsEntityType = "USER"
	ListEntitiesAtVersionParamsEntityTypeWIDGETSBUNDLE        ListEntitiesAtVersionParamsEntityType = "WIDGETS_BUNDLE"
	ListEntitiesAtVersionParamsEntityTypeWIDGETTYPE           ListEntitiesAtVersionParamsEntityType = "WIDGET_TYPE"
)

// Defines values for GetEntityDataInfoParamsEntityType.
const (
	GetEntityDataInfoParamsEntityTypeALARM                GetEntityDataInfoParamsEntityType = "ALARM"
	GetEntityDataInfoParamsEntityTypeAPIUSAGESTATE        GetEntityDataInfoParamsEntityType = "API_USAGE_STATE"
	GetEntityDataInfoParamsEntityTypeASSET                GetEntityDataInfoParamsEntityType = "ASSET"
	GetEntityDataInfoParamsEntityTypeASSETPROFILE         GetEntityDataInfoParamsEntityType = "ASSET_PROFILE"
	GetEntityDataInfoParamsEntityTypeCUSTOMER             GetEntityDataInfoParamsEntityType = "CUSTOMER"
	GetEntityDataInfoParamsEntityTypeDASHBOARD            GetEntityDataInfoParamsEntityType = "DASHBOARD"
	GetEntityDataInfoParamsEntityTypeDEVICE               GetEntityDataInfoParamsEntityType = "DEVICE"
	GetEntityDataInfoParamsEntityTypeDEVICEPROFILE        GetEntityDataInfoParamsEntityType = "DEVICE_PROFILE"
	GetEntityDataInfoParamsEntityTypeEDGE                 GetEntityDataInfoParamsEntityType = "EDGE"
	GetEntityDataInfoParamsEntityTypeENTITYVIEW           GetEntityDataInfoParamsEntityType = "ENTITY_VIEW"
	GetEntityDataInfoParamsEntityTypeNOTIFICATION         GetEntityDataInfoParamsEntityType = "NOTIFICATION"
	GetEntityDataInfoParamsEntityTypeNOTIFICATIONREQUEST  GetEntityDataInfoParamsEntityType = "NOTIFICATION_REQUEST"
	GetEntityDataInfoParamsEntityTypeNOTIFICATIONRULE     GetEntityDataInfoParamsEntityType = "NOTIFICATION_RULE"
	GetEntityDataInfoParamsEntityTypeNOTIFICATIONTARGET   GetEntityDataInfoParamsEntityType = "NOTIFICATION_TARGET"
	GetEntityDataInfoParamsEntityTypeNOTIFICATIONTEMPLATE GetEntityDataInfoParamsEntityType = "NOTIFICATION_TEMPLATE"
	GetEntityDataInfoParamsEntityTypeOTAPACKAGE           GetEntityDataInfoParamsEntityType = "OTA_PACKAGE"
	GetEntityDataInfoParamsEntityTypeQUEUE                GetEntityDataInfoParamsEntityType = "QUEUE"
	GetEntityDataInfoParamsEntityTypeQUEUESTATS           GetEntityDataInfoParamsEntityType = "QUEUE_STATS"
	GetEntityDataInfoParamsEntityTypeRPC                  GetEntityDataInfoParamsEntityType = "RPC"
	GetEntityDataInfoParamsEntityTypeRULECHAIN            GetEntityDataInfoParamsEntityType = "RULE_CHAIN"
	GetEntityDataInfoParamsEntityTypeRULENODE             GetEntityDataInfoParamsEntityType = "RULE_NODE"
	GetEntityDataInfoParamsEntityTypeTBRESOURCE           GetEntityDataInfoParamsEntityType = "TB_RESOURCE"
	GetEntityDataInfoParamsEntityTypeTENANT               GetEntityDataInfoParamsEntityType = "TENANT"
	GetEntityDataInfoParamsEntityTypeTENANTPROFILE        GetEntityDataInfoParamsEntityType = "TENANT_PROFILE"
	GetEntityDataInfoParamsEntityTypeUSER                 GetEntityDataInfoParamsEntityType = "USER"
	GetEntityDataInfoParamsEntityTypeWIDGETSBUNDLE        GetEntityDataInfoParamsEntityType = "WIDGETS_BUNDLE"
	GetEntityDataInfoParamsEntityTypeWIDGETTYPE           GetEntityDataInfoParamsEntityType = "WIDGET_TYPE"
)

// Defines values for ListEntityTypeVersionsParamsEntityType.
const (
	ListEntityTypeVersionsParamsEntityTypeALARM                ListEntityTypeVersionsParamsEntityType = "ALARM"
	ListEntityTypeVersionsParamsEntityTypeAPIUSAGESTATE        ListEntityTypeVersionsParamsEntityType = "API_USAGE_STATE"
	ListEntityTypeVersionsParamsEntityTypeASSET                ListEntityTypeVersionsParamsEntityType = "ASSET"
	ListEntityTypeVersionsParamsEntityTypeASSETPROFILE         ListEntityTypeVersionsParamsEntityType = "ASSET_PROFILE"
	ListEntityTypeVersionsParamsEntityTypeCUSTOMER             ListEntityTypeVersionsParamsEntityType = "CUSTOMER"
	ListEntityTypeVersionsParamsEntityTypeDASHBOARD            ListEntityTypeVersionsParamsEntityType = "DASHBOARD"
	ListEntityTypeVersionsParamsEntityTypeDEVICE               ListEntityTypeVersionsParamsEntityType = "DEVICE"
	ListEntityTypeVersionsParamsEntityTypeDEVICEPROFILE        ListEntityTypeVersionsParamsEntityType = "DEVICE_PROFILE"
	ListEntityTypeVersionsParamsEntityTypeEDGE                 ListEntityTypeVersionsParamsEntityType = "EDGE"
	ListEntityTypeVersionsParamsEntityTypeENTITYVIEW           ListEntityTypeVersionsParamsEntityType = "ENTITY_VIEW"
	ListEntityTypeVersionsParamsEntityTypeNOTIFICATION         ListEntityTypeVersionsParamsEntityType = "NOTIFICATION"
	ListEntityTypeVersionsParamsEntityTypeNOTIFICATIONREQUEST  ListEntityTypeVersionsParamsEntityType = "NOTIFICATION_REQUEST"
	ListEntityTypeVersionsParamsEntityTypeNOTIFICATIONRULE     ListEntityTypeVersionsParamsEntityType = "NOTIFICATION_RULE"
	ListEntityTypeVersionsParamsEntityTypeNOTIFICATIONTARGET   ListEntityTypeVersionsParamsEntityType = "NOTIFICATION_TARGET"
	ListEntityTypeVersionsParamsEntityTypeNOTIFICATIONTEMPLATE ListEntityTypeVersionsParamsEntityType = "NOTIFICATION_TEMPLATE"
	ListEntityTypeVersionsParamsEntityTypeOTAPACKAGE           ListEntityTypeVersionsParamsEntityType = "OTA_PACKAGE"
	ListEntityTypeVersionsParamsEntityTypeQUEUE                ListEntityTypeVersionsParamsEntityType = "QUEUE"
	ListEntityTypeVersionsParamsEntityTypeQUEUESTATS           ListEntityTypeVersionsParamsEntityType = "QUEUE_STATS"
	ListEntityTypeVersionsParamsEntityTypeRPC                  ListEntityTypeVersionsParamsEntityType = "RPC"
	ListEntityTypeVersionsParamsEntityTypeRULECHAIN            ListEntityTypeVersionsParamsEntityType = "RULE_CHAIN"
	ListEntityTypeVersionsParamsEntityTypeRULENODE             ListEntityTypeVersionsParamsEntityType = "RULE_NODE"
	ListEntityTypeVersionsParamsEntityTypeTBRESOURCE           ListEntityTypeVersionsParamsEntityType = "TB_RESOURCE"
	ListEntityTypeVersionsParamsEntityTypeTENANT               ListEntityTypeVersionsParamsEntityType = "TENANT"
	ListEntityTypeVersionsParamsEntityTypeTENANTPROFILE        ListEntityTypeVersionsParamsEntityType = "TENANT_PROFILE"
	ListEntityTypeVersionsParamsEntityTypeUSER                 ListEntityTypeVersionsParamsEntityType = "USER"
	ListEntityTypeVersionsParamsEntityTypeWIDGETSBUNDLE        ListEntityTypeVersionsParamsEntityType = "WIDGETS_BUNDLE"
	ListEntityTypeVersionsParamsEntityTypeWIDGETTYPE           ListEntityTypeVersionsParamsEntityType = "WIDGET_TYPE"
)

// Defines values for ListEntityVersionsParamsEntityType.
const (
	ListEntityVersionsParamsEntityTypeALARM                ListEntityVersionsParamsEntityType = "ALARM"
	ListEntityVersionsParamsEntityTypeAPIUSAGESTATE        ListEntityVersionsParamsEntityType = "API_USAGE_STATE"
	ListEntityVersionsParamsEntityTypeASSET                ListEntityVersionsParamsEntityType = "ASSET"
	ListEntityVersionsParamsEntityTypeASSETPROFILE         ListEntityVersionsParamsEntityType = "ASSET_PROFILE"
	ListEntityVersionsParamsEntityTypeCUSTOMER             ListEntityVersionsParamsEntityType = "CUSTOMER"
	ListEntityVersionsParamsEntityTypeDASHBOARD            ListEntityVersionsParamsEntityType = "DASHBOARD"
	ListEntityVersionsParamsEntityTypeDEVICE               ListEntityVersionsParamsEntityType = "DEVICE"
	ListEntityVersionsParamsEntityTypeDEVICEPROFILE        ListEntityVersionsParamsEntityType = "DEVICE_PROFILE"
	ListEntityVersionsParamsEntityTypeEDGE                 ListEntityVersionsParamsEntityType = "EDGE"
	ListEntityVersionsParamsEntityTypeENTITYVIEW           ListEntityVersionsParamsEntityType = "ENTITY_VIEW"
	ListEntityVersionsParamsEntityTypeNOTIFICATION         ListEntityVersionsParamsEntityType = "NOTIFICATION"
	ListEntityVersionsParamsEntityTypeNOTIFICATIONREQUEST  ListEntityVersionsParamsEntityType = "NOTIFICATION_REQUEST"
	ListEntityVersionsParamsEntityTypeNOTIFICATIONRULE     ListEntityVersionsParamsEntityType = "NOTIFICATION_RULE"
	ListEntityVersionsParamsEntityTypeNOTIFICATIONTARGET   ListEntityVersionsParamsEntityType = "NOTIFICATION_TARGET"
	ListEntityVersionsParamsEntityTypeNOTIFICATIONTEMPLATE ListEntityVersionsParamsEntityType = "NOTIFICATION_TEMPLATE"
	ListEntityVersionsParamsEntityTypeOTAPACKAGE           ListEntityVersionsParamsEntityType = "OTA_PACKAGE"
	ListEntityVersionsParamsEntityTypeQUEUE                ListEntityVersionsParamsEntityType = "QUEUE"
	ListEntityVersionsParamsEntityTypeQUEUESTATS           ListEntityVersionsParamsEntityType = "QUEUE_STATS"
	ListEntityVersionsParamsEntityTypeRPC                  ListEntityVersionsParamsEntityType = "RPC"
	ListEntityVersionsParamsEntityTypeRULECHAIN            ListEntityVersionsParamsEntityType = "RULE_CHAIN"
	ListEntityVersionsParamsEntityTypeRULENODE             ListEntityVersionsParamsEntityType = "RULE_NODE"
	ListEntityVersionsParamsEntityTypeTBRESOURCE           ListEntityVersionsParamsEntityType = "TB_RESOURCE"
	ListEntityVersionsParamsEntityTypeTENANT               ListEntityVersionsParamsEntityType = "TENANT"
	ListEntityVersionsParamsEntityTypeTENANTPROFILE        ListEntityVersionsParamsEntityType = "TENANT_PROFILE"
	ListEntityVersionsParamsEntityTypeUSER                 ListEntityVersionsParamsEntityType = "USER"
	ListEntityVersionsParamsEntityTypeWIDGETSBUNDLE        ListEntityVersionsParamsEntityType = "WIDGETS_BUNDLE"
	ListEntityVersionsParamsEntityTypeWIDGETTYPE           ListEntityVersionsParamsEntityType = "WIDGET_TYPE"
)

// Defines values for ListSlackConversationsParamsType.
const (
	DIRECT         ListSlackConversationsParamsType = "DIRECT"
	PRIVATECHANNEL ListSlackConversationsParamsType = "PRIVATE_CHANNEL"
	PUBLICCHANNEL  ListSlackConversationsParamsType = "PUBLIC_CHANNEL"
)

// Defines values for TestScriptParamsScriptLang.
const (
	JS   TestScriptParamsScriptLang = "JS"
	TBEL TestScriptParamsScriptLang = "TBEL"
)

// AccountTwoFaSettings defines model for AccountTwoFaSettings.
type AccountTwoFaSettings struct {
	Configs *map[string]AccountTwoFaSettings_Configs_AdditionalProperties `json:"configs,omitempty"`
}

// AccountTwoFaSettings_Configs_AdditionalProperties defines model for AccountTwoFaSettings.configs.AdditionalProperties.
type AccountTwoFaSettings_Configs_AdditionalProperties struct {
	union json.RawMessage
}

// ActivateUserRequest Activate user request.
type ActivateUserRequest struct {
	// ActivateToken The activate token to verify
	ActivateToken *string `json:"activateToken,omitempty"`

	// Password The new password to set
	Password *string `json:"password,omitempty"`
}

// AdminSettings A JSON value representing the Mail Settings.
type AdminSettings struct {
	// CreatedTime Timestamp of the settings creation, in milliseconds
	CreatedTime *int64           `json:"createdTime,omitempty"`
	Id          *AdminSettingsId `json:"id,omitempty"`

	// JsonValue A value representing the any type (object or primitive)
	JsonValue *JsonNode `json:"jsonValue,omitempty"`

	// Key The Administration Settings key, (e.g. 'general' or 'mail')
	Key      *string   `json:"key,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// AdminSettingsId defines model for AdminSettingsId.
type AdminSettingsId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// Alarm defines model for Alarm.
type Alarm struct {
	// AckTs Timestamp of the alarm acknowledgement, in milliseconds
	AckTs *int64 `json:"ackTs,omitempty"`

	// Acknowledged Acknowledged
	Acknowledged bool `json:"acknowledged"`

	// AssignTs Timestamp of the alarm assignment, in milliseconds
	AssignTs   *int64  `json:"assignTs,omitempty"`
	AssigneeId *UserId `json:"assigneeId,omitempty"`

	// ClearTs Timestamp of the alarm clearing, in milliseconds
	ClearTs *int64 `json:"clearTs,omitempty"`

	// Cleared Cleared
	Cleared bool `json:"cleared"`

	// CreatedTime Timestamp of the alarm creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// Details A value representing the any type (object or primitive)
	Details *JsonNode `json:"details,omitempty"`

	// EndTs Timestamp of the alarm end time(last time update), in milliseconds
	EndTs *int64   `json:"endTs,omitempty"`
	Id    *AlarmId `json:"id,omitempty"`

	// Name representing type of the Alarm
	Name       *string  `json:"name,omitempty"`
	Originator EntityId `json:"originator"`

	// Propagate Propagation flag to specify if alarm should be propagated to parent entities of alarm originator
	Propagate *bool `json:"propagate,omitempty"`

	// PropagateRelationTypes JSON array of relation types that should be used for propagation. By default, 'propagateRelationTypes' array is empty which means that the alarm will be propagated based on any relation type to parent entities. This parameter should be used only in case when 'propagate' parameter is set to true, otherwise, 'propagateRelationTypes' array will be ignored.
	PropagateRelationTypes *[]string `json:"propagateRelationTypes,omitempty"`

	// PropagateToOwner Propagation flag to specify if alarm should be propagated to the owner (tenant or customer) of alarm originator
	PropagateToOwner *bool `json:"propagateToOwner,omitempty"`

	// PropagateToTenant Propagation flag to specify if alarm should be propagated to the tenant entity
	PropagateToTenant *bool `json:"propagateToTenant,omitempty"`

	// Severity Alarm severity
	Severity AlarmSeverity `json:"severity"`

	// StartTs Timestamp of the alarm start time, in milliseconds
	StartTs *int64 `json:"startTs,omitempty"`

	// Status status of the Alarm
	Status   *AlarmStatus `json:"status,omitempty"`
	TenantId *TenantId    `json:"tenantId,omitempty"`

	// Type representing type of the Alarm
	Type string `json:"type"`
}

// AlarmSeverity Alarm severity
type AlarmSeverity string

// AlarmStatus status of the Alarm
type AlarmStatus string

// AlarmAssignee defines model for AlarmAssignee.
type AlarmAssignee struct {
	Email     *string `json:"email,omitempty"`
	FirstName *string `json:"firstName,omitempty"`
	Id        *UserId `json:"id,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
}

// AlarmAssignmentNotificationRuleTriggerConfig defines model for AlarmAssignmentNotificationRuleTriggerConfig.
type AlarmAssignmentNotificationRuleTriggerConfig struct {
	AlarmSeverities *[]AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities `json:"alarmSeverities,omitempty"`
	AlarmStatuses   *[]AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses   `json:"alarmStatuses,omitempty"`
	AlarmTypes      *[]string                                                      `json:"alarmTypes,omitempty"`
	NotifyOn        *[]AlarmAssignmentNotificationRuleTriggerConfigNotifyOn        `json:"notifyOn,omitempty"`
	TriggerType     *AlarmAssignmentNotificationRuleTriggerConfigTriggerType       `json:"triggerType,omitempty"`
}

// AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities defines model for AlarmAssignmentNotificationRuleTriggerConfig.AlarmSeverities.
type AlarmAssignmentNotificationRuleTriggerConfigAlarmSeverities string

// AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses defines model for AlarmAssignmentNotificationRuleTriggerConfig.AlarmStatuses.
type AlarmAssignmentNotificationRuleTriggerConfigAlarmStatuses string

// AlarmAssignmentNotificationRuleTriggerConfigNotifyOn defines model for AlarmAssignmentNotificationRuleTriggerConfig.NotifyOn.
type AlarmAssignmentNotificationRuleTriggerConfigNotifyOn string

// AlarmAssignmentNotificationRuleTriggerConfigTriggerType defines model for AlarmAssignmentNotificationRuleTriggerConfig.TriggerType.
type AlarmAssignmentNotificationRuleTriggerConfigTriggerType string

// AlarmCommentId defines model for AlarmCommentId.
type AlarmCommentId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// AlarmCommentInfo defines model for AlarmCommentInfo.
type AlarmCommentInfo struct {
	AlarmId *AlarmId `json:"alarmId,omitempty"`

	// Comment A value representing the any type (object or primitive)
	Comment *JsonNode `json:"comment,omitempty"`

	// CreatedTime Timestamp of the alarm comment creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Email User email address
	Email *string `json:"email,omitempty"`

	// FirstName User first name
	FirstName *string         `json:"firstName,omitempty"`
	Id        *AlarmCommentId `json:"id,omitempty"`

	// LastName User last name
	LastName *string `json:"lastName,omitempty"`

	// Name representing comment text
	Name *string `json:"name,omitempty"`

	// Type Defines origination of comment. System type means comment was created by TB. OTHER type means comment was created by user.
	Type   *AlarmCommentInfoType `json:"type,omitempty"`
	UserId *UserId               `json:"userId,omitempty"`
}

// AlarmCommentInfoType Defines origination of comment. System type means comment was created by TB. OTHER type means comment was created by user.
type AlarmCommentInfoType string

// AlarmCommentNotificationRuleTriggerConfig defines model for AlarmCommentNotificationRuleTriggerConfig.
type AlarmCommentNotificationRuleTriggerConfig struct {
	AlarmSeverities       *[]AlarmCommentNotificationRuleTriggerConfigAlarmSeverities `json:"alarmSeverities,omitempty"`
	AlarmStatuses         *[]AlarmCommentNotificationRuleTriggerConfigAlarmStatuses   `json:"alarmStatuses,omitempty"`
	AlarmTypes            *[]string                                                   `json:"alarmTypes,omitempty"`
	NotifyOnCommentUpdate *bool                                                       `json:"notifyOnCommentUpdate,omitempty"`
	OnlyUserComments      *bool                                                       `json:"onlyUserComments,omitempty"`
	TriggerType           *AlarmCommentNotificationRuleTriggerConfigTriggerType       `json:"triggerType,omitempty"`
}

// AlarmCommentNotificationRuleTriggerConfigAlarmSeverities defines model for AlarmCommentNotificationRuleTriggerConfig.AlarmSeverities.
type AlarmCommentNotificationRuleTriggerConfigAlarmSeverities string

// AlarmCommentNotificationRuleTriggerConfigAlarmStatuses defines model for AlarmCommentNotificationRuleTriggerConfig.AlarmStatuses.
type AlarmCommentNotificationRuleTriggerConfigAlarmStatuses string

// AlarmCommentNotificationRuleTriggerConfigTriggerType defines model for AlarmCommentNotificationRuleTriggerConfig.TriggerType.
type AlarmCommentNotificationRuleTriggerConfigTriggerType string

// AlarmCondition defines model for AlarmCondition.
type AlarmCondition struct {
	// Condition JSON array of alarm condition filters
	Condition *[]AlarmConditionFilter `json:"condition,omitempty"`

	// Spec JSON object representing alarm condition type
	Spec *AlarmCondition_Spec `json:"spec,omitempty"`
}

// AlarmCondition_Spec JSON object representing alarm condition type
type AlarmCondition_Spec struct {
	union json.RawMessage
}

// AlarmConditionFilter defines model for AlarmConditionFilter.
type AlarmConditionFilter struct {
	Key *AlarmConditionFilterKey `json:"key,omitempty"`

	// Predicate JSON object representing filter condition
	Predicate *AlarmConditionFilter_Predicate `json:"predicate,omitempty"`

	// Value Value used in Constant comparison. For other types, such as TIME_SERIES or ATTRIBUTE, the predicate condition is used
	Value *interface{} `json:"value,omitempty"`

	// ValueType String representation of the type of the value
	ValueType *AlarmConditionFilterValueType `json:"valueType,omitempty"`
}

// AlarmConditionFilter_Predicate JSON object representing filter condition
type AlarmConditionFilter_Predicate struct {
	union json.RawMessage
}

// AlarmConditionFilterValueType String representation of the type of the value
type AlarmConditionFilterValueType string

// AlarmConditionFilterKey defines model for AlarmConditionFilterKey.
type AlarmConditionFilterKey struct {
	// Key String value representing the key
	Key *string `json:"key,omitempty"`

	// Type The key type
	Type *AlarmConditionFilterKeyType `json:"type,omitempty"`
}

// AlarmConditionFilterKeyType The key type
type AlarmConditionFilterKeyType string

// AlarmConditionSpec defines model for AlarmConditionSpec.
type AlarmConditionSpec struct {
	Type string `json:"type"`
}

// AlarmCountQuery A JSON value representing the alarm count query.
type AlarmCountQuery struct {
	AssigneeId             *UserId                        `json:"assigneeId,omitempty"`
	EndTs                  *int64                         `json:"endTs,omitempty"`
	EntityFilter           *AlarmCountQuery_EntityFilter  `json:"entityFilter,omitempty"`
	KeyFilters             *[]KeyFilter                   `json:"keyFilters,omitempty"`
	SearchPropagatedAlarms *bool                          `json:"searchPropagatedAlarms,omitempty"`
	SeverityList           *[]AlarmCountQuerySeverityList `json:"severityList,omitempty"`
	StartTs                *int64                         `json:"startTs,omitempty"`
	StatusList             *[]AlarmCountQueryStatusList   `json:"statusList,omitempty"`
	TimeWindow             *int64                         `json:"timeWindow,omitempty"`
	TypeList               *[]string                      `json:"typeList,omitempty"`
}

// AlarmCountQuery_EntityFilter defines model for AlarmCountQuery.EntityFilter.
type AlarmCountQuery_EntityFilter struct {
	union json.RawMessage
}

// AlarmCountQuerySeverityList defines model for AlarmCountQuery.SeverityList.
type AlarmCountQuerySeverityList string

// AlarmCountQueryStatusList defines model for AlarmCountQuery.StatusList.
type AlarmCountQueryStatusList string

// AlarmData defines model for AlarmData.
type AlarmData struct {
	// AckTs Timestamp of the alarm acknowledgement, in milliseconds
	AckTs *int64 `json:"ackTs,omitempty"`

	// Acknowledged Acknowledged
	Acknowledged bool `json:"acknowledged"`

	// AssignTs Timestamp of the alarm assignment, in milliseconds
	AssignTs   *int64         `json:"assignTs,omitempty"`
	Assignee   *AlarmAssignee `json:"assignee,omitempty"`
	AssigneeId *UserId        `json:"assigneeId,omitempty"`

	// ClearTs Timestamp of the alarm clearing, in milliseconds
	ClearTs *int64 `json:"clearTs,omitempty"`

	// Cleared Cleared
	Cleared bool `json:"cleared"`

	// CreatedTime Timestamp of the alarm creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// Details A value representing the any type (object or primitive)
	Details *JsonNode `json:"details,omitempty"`

	// EndTs Timestamp of the alarm end time(last time update), in milliseconds
	EndTs    *int64                         `json:"endTs,omitempty"`
	EntityId *EntityId                      `json:"entityId,omitempty"`
	Id       *AlarmId                       `json:"id,omitempty"`
	Latest   *map[string]map[string]TsValue `json:"latest,omitempty"`

	// Name representing type of the Alarm
	Name       *string  `json:"name,omitempty"`
	Originator EntityId `json:"originator"`

	// OriginatorLabel Alarm originator label
	OriginatorLabel *string `json:"originatorLabel,omitempty"`

	// OriginatorName Alarm originator name
	OriginatorName *string `json:"originatorName,omitempty"`

	// Propagate Propagation flag to specify if alarm should be propagated to parent entities of alarm originator
	Propagate *bool `json:"propagate,omitempty"`

	// PropagateRelationTypes JSON array of relation types that should be used for propagation. By default, 'propagateRelationTypes' array is empty which means that the alarm will be propagated based on any relation type to parent entities. This parameter should be used only in case when 'propagate' parameter is set to true, otherwise, 'propagateRelationTypes' array will be ignored.
	PropagateRelationTypes *[]string `json:"propagateRelationTypes,omitempty"`

	// PropagateToOwner Propagation flag to specify if alarm should be propagated to the owner (tenant or customer) of alarm originator
	PropagateToOwner *bool `json:"propagateToOwner,omitempty"`

	// PropagateToTenant Propagation flag to specify if alarm should be propagated to the tenant entity
	PropagateToTenant *bool `json:"propagateToTenant,omitempty"`

	// Severity Alarm severity
	Severity AlarmDataSeverity `json:"severity"`

	// StartTs Timestamp of the alarm start time, in milliseconds
	StartTs *int64 `json:"startTs,omitempty"`

	// Status status of the Alarm
	Status   *AlarmDataStatus `json:"status,omitempty"`
	TenantId *TenantId        `json:"tenantId,omitempty"`

	// Type representing type of the Alarm
	Type string `json:"type"`
}

// AlarmDataSeverity Alarm severity
type AlarmDataSeverity string

// AlarmDataStatus status of the Alarm
type AlarmDataStatus string

// AlarmDataPageLink defines model for AlarmDataPageLink.
type AlarmDataPageLink struct {
	AssigneeId             *UserId                          `json:"assigneeId,omitempty"`
	Dynamic                *bool                            `json:"dynamic,omitempty"`
	EndTs                  *int64                           `json:"endTs,omitempty"`
	Page                   *int32                           `json:"page,omitempty"`
	PageSize               *int32                           `json:"pageSize,omitempty"`
	SearchPropagatedAlarms *bool                            `json:"searchPropagatedAlarms,omitempty"`
	SeverityList           *[]AlarmDataPageLinkSeverityList `json:"severityList,omitempty"`
	SortOrder              *EntityDataSortOrder             `json:"sortOrder,omitempty"`
	StartTs                *int64                           `json:"startTs,omitempty"`
	StatusList             *[]AlarmDataPageLinkStatusList   `json:"statusList,omitempty"`
	TextSearch             *string                          `json:"textSearch,omitempty"`
	TimeWindow             *int64                           `json:"timeWindow,omitempty"`
	TypeList               *[]string                        `json:"typeList,omitempty"`
}

// AlarmDataPageLinkSeverityList defines model for AlarmDataPageLink.SeverityList.
type AlarmDataPageLinkSeverityList string

// AlarmDataPageLinkStatusList defines model for AlarmDataPageLink.StatusList.
type AlarmDataPageLinkStatusList string

// AlarmDataQuery A JSON value representing the alarm data query. See API call notes above for more details.
type AlarmDataQuery struct {
	AlarmFields  *[]EntityKey                 `json:"alarmFields,omitempty"`
	EntityFields *[]EntityKey                 `json:"entityFields,omitempty"`
	EntityFilter *AlarmDataQuery_EntityFilter `json:"entityFilter,omitempty"`
	KeyFilters   *[]KeyFilter                 `json:"keyFilters,omitempty"`
	LatestValues *[]EntityKey                 `json:"latestValues,omitempty"`
	PageLink     *AlarmDataPageLink           `json:"pageLink,omitempty"`
}

// AlarmDataQuery_EntityFilter defines model for AlarmDataQuery.EntityFilter.
type AlarmDataQuery_EntityFilter struct {
	union json.RawMessage
}

// AlarmId defines model for AlarmId.
type AlarmId struct {
	// EntityType string
	EntityType AlarmIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// AlarmIdEntityType string
type AlarmIdEntityType string

// AlarmInfo defines model for AlarmInfo.
type AlarmInfo struct {
	// AckTs Timestamp of the alarm acknowledgement, in milliseconds
	AckTs *int64 `json:"ackTs,omitempty"`

	// Acknowledged Acknowledged
	Acknowledged bool `json:"acknowledged"`

	// AssignTs Timestamp of the alarm assignment, in milliseconds
	AssignTs   *int64         `json:"assignTs,omitempty"`
	Assignee   *AlarmAssignee `json:"assignee,omitempty"`
	AssigneeId *UserId        `json:"assigneeId,omitempty"`

	// ClearTs Timestamp of the alarm clearing, in milliseconds
	ClearTs *int64 `json:"clearTs,omitempty"`

	// Cleared Cleared
	Cleared bool `json:"cleared"`

	// CreatedTime Timestamp of the alarm creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// Details A value representing the any type (object or primitive)
	Details *JsonNode `json:"details,omitempty"`

	// EndTs Timestamp of the alarm end time(last time update), in milliseconds
	EndTs *int64   `json:"endTs,omitempty"`
	Id    *AlarmId `json:"id,omitempty"`

	// Name representing type of the Alarm
	Name       *string  `json:"name,omitempty"`
	Originator EntityId `json:"originator"`

	// OriginatorLabel Alarm originator label
	OriginatorLabel *string `json:"originatorLabel,omitempty"`

	// OriginatorName Alarm originator name
	OriginatorName *string `json:"originatorName,omitempty"`

	// Propagate Propagation flag to specify if alarm should be propagated to parent entities of alarm originator
	Propagate *bool `json:"propagate,omitempty"`

	// PropagateRelationTypes JSON array of relation types that should be used for propagation. By default, 'propagateRelationTypes' array is empty which means that the alarm will be propagated based on any relation type to parent entities. This parameter should be used only in case when 'propagate' parameter is set to true, otherwise, 'propagateRelationTypes' array will be ignored.
	PropagateRelationTypes *[]string `json:"propagateRelationTypes,omitempty"`

	// PropagateToOwner Propagation flag to specify if alarm should be propagated to the owner (tenant or customer) of alarm originator
	PropagateToOwner *bool `json:"propagateToOwner,omitempty"`

	// PropagateToTenant Propagation flag to specify if alarm should be propagated to the tenant entity
	PropagateToTenant *bool `json:"propagateToTenant,omitempty"`

	// Severity Alarm severity
	Severity AlarmInfoSeverity `json:"severity"`

	// StartTs Timestamp of the alarm start time, in milliseconds
	StartTs *int64 `json:"startTs,omitempty"`

	// Status status of the Alarm
	Status   *AlarmInfoStatus `json:"status,omitempty"`
	TenantId *TenantId        `json:"tenantId,omitempty"`

	// Type representing type of the Alarm
	Type string `json:"type"`
}

// AlarmInfoSeverity Alarm severity
type AlarmInfoSeverity string

// AlarmInfoStatus status of the Alarm
type AlarmInfoStatus string

// AlarmNotificationRuleTriggerConfig defines model for AlarmNotificationRuleTriggerConfig.
type AlarmNotificationRuleTriggerConfig struct {
	AlarmSeverities *[]AlarmNotificationRuleTriggerConfigAlarmSeverities `json:"alarmSeverities,omitempty"`
	AlarmTypes      *[]string                                            `json:"alarmTypes,omitempty"`
	ClearRule       *ClearRule                                           `json:"clearRule,omitempty"`
	NotifyOn        *[]AlarmNotificationRuleTriggerConfigNotifyOn        `json:"notifyOn,omitempty"`
	TriggerType     *AlarmNotificationRuleTriggerConfigTriggerType       `json:"triggerType,omitempty"`
}

// AlarmNotificationRuleTriggerConfigAlarmSeverities defines model for AlarmNotificationRuleTriggerConfig.AlarmSeverities.
type AlarmNotificationRuleTriggerConfigAlarmSeverities string

// AlarmNotificationRuleTriggerConfigNotifyOn defines model for AlarmNotificationRuleTriggerConfig.NotifyOn.
type AlarmNotificationRuleTriggerConfigNotifyOn string

// AlarmNotificationRuleTriggerConfigTriggerType defines model for AlarmNotificationRuleTriggerConfig.TriggerType.
type AlarmNotificationRuleTriggerConfigTriggerType string

// AlarmRule defines model for AlarmRule.
type AlarmRule struct {
	// AlarmDetails String value representing the additional details for an alarm rule
	AlarmDetails *string         `json:"alarmDetails,omitempty"`
	Condition    *AlarmCondition `json:"condition,omitempty"`
	DashboardId  *DashboardId    `json:"dashboardId,omitempty"`

	// Schedule JSON object representing time interval during which the rule is active
	Schedule *AlarmRule_Schedule `json:"schedule,omitempty"`
}

// AlarmRule_Schedule JSON object representing time interval during which the rule is active
type AlarmRule_Schedule struct {
	union json.RawMessage
}

// AlarmSchedule defines model for AlarmSchedule.
type AlarmSchedule struct {
	DynamicValue *DynamicValueString `json:"dynamicValue,omitempty"`
	Type         *AlarmScheduleType  `json:"type,omitempty"`
}

// AlarmScheduleType defines model for AlarmSchedule.Type.
type AlarmScheduleType string

// AllowCreateNewDevicesDeviceProfileProvisionConfiguration defines model for AllowCreateNewDevicesDeviceProfileProvisionConfiguration.
type AllowCreateNewDevicesDeviceProfileProvisionConfiguration = DeviceProfileProvisionConfiguration

// AndroidConfig defines model for AndroidConfig.
type AndroidConfig struct {
	AppPackage             *string `json:"appPackage,omitempty"`
	Enabled                *bool   `json:"enabled,omitempty"`
	Sha256CertFingerprints *string `json:"sha256CertFingerprints,omitempty"`
	StoreLink              *string `json:"storeLink,omitempty"`
}

// AnyTimeSchedule defines model for AnyTimeSchedule.
type AnyTimeSchedule = AlarmSchedule

// ApiUsageLimitNotificationRuleTriggerConfig defines model for ApiUsageLimitNotificationRuleTriggerConfig.
type ApiUsageLimitNotificationRuleTriggerConfig struct {
	ApiFeatures *[]ApiUsageLimitNotificationRuleTriggerConfigApiFeatures `json:"apiFeatures,omitempty"`
	NotifyOn    *[]ApiUsageLimitNotificationRuleTriggerConfigNotifyOn    `json:"notifyOn,omitempty"`
	TriggerType *ApiUsageLimitNotificationRuleTriggerConfigTriggerType   `json:"triggerType,omitempty"`
}

// ApiUsageLimitNotificationRuleTriggerConfigApiFeatures defines model for ApiUsageLimitNotificationRuleTriggerConfig.ApiFeatures.
type ApiUsageLimitNotificationRuleTriggerConfigApiFeatures string

// ApiUsageLimitNotificationRuleTriggerConfigNotifyOn defines model for ApiUsageLimitNotificationRuleTriggerConfig.NotifyOn.
type ApiUsageLimitNotificationRuleTriggerConfigNotifyOn string

// ApiUsageLimitNotificationRuleTriggerConfigTriggerType defines model for ApiUsageLimitNotificationRuleTriggerConfig.TriggerType.
type ApiUsageLimitNotificationRuleTriggerConfigTriggerType string

// ApiUsageStateFilter defines model for ApiUsageStateFilter.
type ApiUsageStateFilter struct {
	CustomerId *CustomerId `json:"customerId,omitempty"`
	Type       string      `json:"type"`
}

// Asset defines model for Asset.
type Asset struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode       `json:"additionalInfo,omitempty"`
	AssetProfileId *AssetProfileId `json:"assetProfileId,omitempty"`

	// CreatedTime Timestamp of the asset creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`
	Id          *AssetId    `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Asset Name in scope of Tenant
	Name     string    `json:"name"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Type Asset type
	Type *string `json:"type,omitempty"`
}

// AssetId defines model for AssetId.
type AssetId struct {
	// EntityType string
	EntityType AssetIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// AssetIdEntityType string
type AssetIdEntityType string

// AssetInfo defines model for AssetInfo.
type AssetInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode       `json:"additionalInfo,omitempty"`
	AssetProfileId *AssetProfileId `json:"assetProfileId,omitempty"`

	// AssetProfileName Name of the corresponding Asset Profile.
	AssetProfileName *string `json:"assetProfileName,omitempty"`

	// CreatedTime Timestamp of the asset creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// CustomerIsPublic Indicates special 'Public' Customer that is auto-generated to use the assets on public dashboards.
	CustomerIsPublic *bool `json:"customerIsPublic,omitempty"`

	// CustomerTitle Title of the Customer that owns the asset.
	CustomerTitle *string  `json:"customerTitle,omitempty"`
	Id            *AssetId `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Asset Name in scope of Tenant
	Name     string    `json:"name"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Type Asset type
	Type *string `json:"type,omitempty"`
}

// AssetProfile A JSON value representing the asset profile.
type AssetProfile struct {
	// CreatedTime Timestamp of the profile creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Default Used to mark the default profile. Default profile is used when the asset profile is not specified during asset creation.
	Default                *bool        `json:"default,omitempty"`
	DefaultDashboardId     *DashboardId `json:"defaultDashboardId,omitempty"`
	DefaultEdgeRuleChainId *RuleChainId `json:"defaultEdgeRuleChainId,omitempty"`

	// DefaultQueueName Rule engine queue name. If present, the specified queue will be used to store all unprocessed messages related to asset, including asset updates, telemetry, attribute updates, etc. Otherwise, the 'Main' queue will be used to store those messages.
	DefaultQueueName   *string      `json:"defaultQueueName,omitempty"`
	DefaultRuleChainId *RuleChainId `json:"defaultRuleChainId,omitempty"`

	// Description Asset Profile description.
	Description *string         `json:"description,omitempty"`
	Id          *AssetProfileId `json:"id,omitempty"`

	// Image Either URL or Base64 data of the icon. Used in the mobile application to visualize set of asset profiles in the grid view.
	Image *string `json:"image,omitempty"`

	// Name Unique Asset Profile Name in scope of Tenant.
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// AssetProfileId defines model for AssetProfileId.
type AssetProfileId struct {
	// EntityType string
	EntityType AssetProfileIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// AssetProfileIdEntityType string
type AssetProfileIdEntityType string

// AssetProfileInfo defines model for AssetProfileInfo.
type AssetProfileInfo struct {
	DefaultDashboardId *DashboardId `json:"defaultDashboardId,omitempty"`
	Id                 *EntityId    `json:"id,omitempty"`

	// Image Either URL or Base64 data of the icon. Used in the mobile application to visualize set of asset profiles in the grid view.
	Image *string `json:"image,omitempty"`

	// Name Entity Name
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// AssetSearchQueryFilter defines model for AssetSearchQueryFilter.
type AssetSearchQueryFilter struct {
	AssetTypes         *[]string                        `json:"assetTypes,omitempty"`
	Direction          *AssetSearchQueryFilterDirection `json:"direction,omitempty"`
	FetchLastLevelOnly *bool                            `json:"fetchLastLevelOnly,omitempty"`
	MaxLevel           *int32                           `json:"maxLevel,omitempty"`
	RelationType       *string                          `json:"relationType,omitempty"`
	RootEntity         *EntityId                        `json:"rootEntity,omitempty"`
	Type               string                           `json:"type"`
}

// AssetSearchQueryFilterDirection defines model for AssetSearchQueryFilter.Direction.
type AssetSearchQueryFilterDirection string

// AssetTypeFilter defines model for AssetTypeFilter.
type AssetTypeFilter struct {
	AssetNameFilter *string `json:"assetNameFilter,omitempty"`
	// Deprecated:
	AssetType  *string   `json:"assetType,omitempty"`
	AssetTypes *[]string `json:"assetTypes,omitempty"`
	Type       string    `json:"type"`
}

// AttributeExportData defines model for AttributeExportData.
type AttributeExportData struct {
	BooleanValue *bool    `json:"booleanValue,omitempty"`
	DoubleValue  *float64 `json:"doubleValue,omitempty"`
	JsonValue    *string  `json:"jsonValue,omitempty"`
	Key          *string  `json:"key,omitempty"`
	LastUpdateTs *int64   `json:"lastUpdateTs,omitempty"`
	LongValue    *int64   `json:"longValue,omitempty"`
	StrValue     *string  `json:"strValue,omitempty"`
}

// AttributesEntityView defines model for AttributesEntityView.
type AttributesEntityView struct {
	// Cs List of client-side attribute keys to expose
	Cs []string `json:"cs"`

	// Sh List of shared attribute keys to expose
	Sh []string `json:"sh"`

	// Ss List of server-side attribute keys to expose
	Ss []string `json:"ss"`
}

// AuditLog defines model for AuditLog.
type AuditLog struct {
	// ActionData A value representing the any type (object or primitive)
	ActionData *JsonNode `json:"actionData,omitempty"`

	// ActionFailureDetails Failure action details info. An empty string in case of action status type 'SUCCESS', otherwise includes stack trace of the caused exception.
	ActionFailureDetails *string `json:"actionFailureDetails,omitempty"`

	// ActionStatus String represented Action status
	ActionStatus *AuditLogActionStatus `json:"actionStatus,omitempty"`

	// ActionType String represented Action type
	ActionType *AuditLogActionType `json:"actionType,omitempty"`

	// CreatedTime Timestamp of the auditLog creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`
	EntityId    *EntityId   `json:"entityId,omitempty"`

	// EntityName Name of the logged entity
	EntityName *string     `json:"entityName,omitempty"`
	Id         *AuditLogId `json:"id,omitempty"`
	TenantId   *TenantId   `json:"tenantId,omitempty"`
	UserId     *UserId     `json:"userId,omitempty"`

	// UserName Unique user name(email) of the user that performed some action on logged entity
	UserName *string `json:"userName,omitempty"`
}

// AuditLogActionStatus String represented Action status
type AuditLogActionStatus string

// AuditLogActionType String represented Action type
type AuditLogActionType string

// AuditLogId defines model for AuditLogId.
type AuditLogId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// AutoCommitSettings defines model for AutoCommitSettings.
type AutoCommitSettings map[string]AutoVersionCreateConfig

// AutoVersionCreateConfig defines model for AutoVersionCreateConfig.
type AutoVersionCreateConfig struct {
	Branch          *string `json:"branch,omitempty"`
	SaveAttributes  *bool   `json:"saveAttributes,omitempty"`
	SaveCredentials *bool   `json:"saveCredentials,omitempty"`
	SaveRelations   *bool   `json:"saveRelations,omitempty"`
}

// AwsSnsSmsProviderConfiguration defines model for AwsSnsSmsProviderConfiguration.
type AwsSnsSmsProviderConfiguration struct {
	// AccessKeyId The AWS SNS Access Key ID.
	AccessKeyId *string `json:"accessKeyId,omitempty"`

	// Region The AWS region.
	Region *string `json:"region,omitempty"`

	// SecretAccessKey The AWS SNS Access Key.
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
	Type            string  `json:"type"`
}

// BackupCodeTwoFaAccountConfig defines model for BackupCodeTwoFaAccountConfig.
type BackupCodeTwoFaAccountConfig struct {
	Codes        *[]string `json:"codes,omitempty"`
	CodesLeft    *int32    `json:"codesLeft,omitempty"`
	ProviderType string    `json:"providerType"`
	UseByDefault *bool     `json:"useByDefault,omitempty"`
}

// BackupCodeTwoFaProviderConfig defines model for BackupCodeTwoFaProviderConfig.
type BackupCodeTwoFaProviderConfig struct {
	CodesQuantity *int32 `json:"codesQuantity,omitempty"`
	ProviderType  string `json:"providerType"`
}

// BooleanFilterPredicate defines model for BooleanFilterPredicate.
type BooleanFilterPredicate struct {
	Operation *BooleanFilterPredicateOperation `json:"operation,omitempty"`
	Type      string                           `json:"type"`
	Value     *FilterPredicateValueBoolean     `json:"value,omitempty"`
}

// BooleanFilterPredicateOperation defines model for BooleanFilterPredicate.Operation.
type BooleanFilterPredicateOperation string

// BranchInfo defines model for BranchInfo.
type BranchInfo struct {
	Default *bool   `json:"default,omitempty"`
	Name    *string `json:"name,omitempty"`
}

// BulkImportRequest defines model for BulkImportRequest.
type BulkImportRequest struct {
	File    *string  `json:"file,omitempty"`
	Mapping *Mapping `json:"mapping,omitempty"`
}

// BulkImportResultAsset defines model for BulkImportResultAsset.
type BulkImportResultAsset struct {
	Created *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"created,omitempty"`
	Errors *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"errors,omitempty"`
	ErrorsList *[]string `json:"errorsList,omitempty"`
	Updated    *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"updated,omitempty"`
}

// BulkImportResultDevice defines model for BulkImportResultDevice.
type BulkImportResultDevice struct {
	Created *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"created,omitempty"`
	Errors *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"errors,omitempty"`
	ErrorsList *[]string `json:"errorsList,omitempty"`
	Updated    *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"updated,omitempty"`
}

// BulkImportResultEdge defines model for BulkImportResultEdge.
type BulkImportResultEdge struct {
	Created *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"created,omitempty"`
	Errors *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"errors,omitempty"`
	ErrorsList *[]string `json:"errorsList,omitempty"`
	Updated    *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"updated,omitempty"`
}

// Button defines model for Button.
type Button struct {
	DashboardId        *openapi_types.UUID `json:"dashboardId,omitempty"`
	DashboardState     *string             `json:"dashboardState,omitempty"`
	Enabled            *bool               `json:"enabled,omitempty"`
	Link               *string             `json:"link,omitempty"`
	LinkType           *ButtonLinkType     `json:"linkType,omitempty"`
	SetEntityIdInState *bool               `json:"setEntityIdInState,omitempty"`
	Text               *string             `json:"text,omitempty"`
}

// ButtonLinkType defines model for Button.LinkType.
type ButtonLinkType string

// CaptchaClientParams defines model for CaptchaClientParams.
type CaptchaClientParams struct {
	CaptchaAction  *string `json:"captchaAction,omitempty"`
	CaptchaSiteKey *string `json:"captchaSiteKey,omitempty"`
	CaptchaVersion *string `json:"captchaVersion,omitempty"`
}

// ChangePasswordRequest Change Password Request
type ChangePasswordRequest struct {
	// CurrentPassword The old password
	CurrentPassword *string `json:"currentPassword,omitempty"`

	// NewPassword The new password
	NewPassword *string `json:"newPassword,omitempty"`
}

// CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration defines model for CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration.
type CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration = DeviceProfileProvisionConfiguration

// ClaimRequest Claiming request which can optionally contain secret key
type ClaimRequest struct {
	SecretKey *string `json:"secretKey,omitempty"`
}

// ClearRule defines model for ClearRule.
type ClearRule struct {
	AlarmStatuses *[]ClearRuleAlarmStatuses `json:"alarmStatuses,omitempty"`
}

// ClearRuleAlarmStatuses defines model for ClearRule.AlarmStatuses.
type ClearRuleAlarmStatuses string

// CoapDeviceProfileTransportConfiguration defines model for CoapDeviceProfileTransportConfiguration.
type CoapDeviceProfileTransportConfiguration struct {
	ClientSettings              *PowerSavingConfiguration    `json:"clientSettings,omitempty"`
	CoapDeviceTypeConfiguration *CoapDeviceTypeConfiguration `json:"coapDeviceTypeConfiguration,omitempty"`
	Type                        string                       `json:"type"`
}

// CoapDeviceTransportConfiguration defines model for CoapDeviceTransportConfiguration.
type CoapDeviceTransportConfiguration struct {
	EdrxCycle                *int64                                     `json:"edrxCycle,omitempty"`
	PagingTransmissionWindow *int64                                     `json:"pagingTransmissionWindow,omitempty"`
	PowerMode                *CoapDeviceTransportConfigurationPowerMode `json:"powerMode,omitempty"`
	PsmActivityTimer         *int64                                     `json:"psmActivityTimer,omitempty"`
	Type                     string                                     `json:"type"`
}

// CoapDeviceTransportConfigurationPowerMode defines model for CoapDeviceTransportConfiguration.PowerMode.
type CoapDeviceTransportConfigurationPowerMode string

// CoapDeviceTypeConfiguration defines model for CoapDeviceTypeConfiguration.
type CoapDeviceTypeConfiguration struct {
	CoapDeviceType string `json:"coapDeviceType"`
}

// ColumnMapping defines model for ColumnMapping.
type ColumnMapping struct {
	Key  *string            `json:"key,omitempty"`
	Type *ColumnMappingType `json:"type,omitempty"`
}

// ColumnMappingType defines model for ColumnMapping.Type.
type ColumnMappingType string

// ComparisonTsValue defines model for ComparisonTsValue.
type ComparisonTsValue struct {
	Current  *TsValue `json:"current,omitempty"`
	Previous *TsValue `json:"previous,omitempty"`
}

// ComplexFilterPredicate defines model for ComplexFilterPredicate.
type ComplexFilterPredicate struct {
	Operation  *ComplexFilterPredicateOperation `json:"operation,omitempty"`
	Predicates *[]KeyFilterPredicate            `json:"predicates,omitempty"`
	Type       string                           `json:"type"`
}

// ComplexFilterPredicateOperation defines model for ComplexFilterPredicate.Operation.
type ComplexFilterPredicateOperation string

// ComponentDescriptor defines model for ComponentDescriptor.
type ComponentDescriptor struct {
	// Actions Rule Node Actions. Deprecated. Always null.
	Actions *string `json:"actions,omitempty"`

	// Clazz Full name of the Java class that implements the Rule Engine Node interface.
	Clazz *string `json:"clazz,omitempty"`

	// ClusteringMode Clustering mode of the RuleNode. This mode represents the ability to start Rule Node in multiple microservices.
	ClusteringMode *ComponentDescriptorClusteringMode `json:"clusteringMode,omitempty"`

	// ConfigurationDescriptor A value representing the any type (object or primitive)
	ConfigurationDescriptor *JsonNode `json:"configurationDescriptor,omitempty"`

	// ConfigurationVersion Rule node configuration version. By default, this value is 0. If the rule node is a versioned node, this value might be greater than 0.
	ConfigurationVersion *int32 `json:"configurationVersion,omitempty"`

	// CreatedTime Timestamp of the descriptor creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// HasQueueName Indicates that the RuleNode supports queue name configuration.
	HasQueueName *bool                  `json:"hasQueueName,omitempty"`
	Id           *ComponentDescriptorId `json:"id,omitempty"`

	// Name Name of the Rule Node. Taken from the @RuleNode annotation.
	Name *string `json:"name,omitempty"`

	// Scope Scope of the Rule Node. Always set to 'TENANT', since no rule chains on the 'SYSTEM' level yet.
	Scope *ComponentDescriptorScope `json:"scope,omitempty"`

	// Type Type of the Rule Node
	Type *ComponentDescriptorType `json:"type,omitempty"`
}

// ComponentDescriptorClusteringMode Clustering mode of the RuleNode. This mode represents the ability to start Rule Node in multiple microservices.
type ComponentDescriptorClusteringMode string

// ComponentDescriptorScope Scope of the Rule Node. Always set to 'TENANT', since no rule chains on the 'SYSTEM' level yet.
type ComponentDescriptorScope string

// ComponentDescriptorType Type of the Rule Node
type ComponentDescriptorType string

// ComponentDescriptorId defines model for ComponentDescriptorId.
type ComponentDescriptorId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// CustomTimeSchedule defines model for CustomTimeSchedule.
type CustomTimeSchedule struct {
	DynamicValue *DynamicValueString       `json:"dynamicValue,omitempty"`
	Items        *[]CustomTimeScheduleItem `json:"items,omitempty"`
	Timezone     *string                   `json:"timezone,omitempty"`
	Type         *CustomTimeScheduleType   `json:"type,omitempty"`
}

// CustomTimeScheduleType defines model for CustomTimeSchedule.Type.
type CustomTimeScheduleType string

// CustomTimeScheduleItem defines model for CustomTimeScheduleItem.
type CustomTimeScheduleItem struct {
	DayOfWeek *int32 `json:"dayOfWeek,omitempty"`
	Enabled   *bool  `json:"enabled,omitempty"`
	EndsOn    *int64 `json:"endsOn,omitempty"`
	StartsOn  *int64 `json:"startsOn,omitempty"`
}

// Customer defines model for Customer.
type Customer struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Address Address Line 1
	Address *string `json:"address,omitempty"`

	// Address2 Address Line 2
	Address2 *string `json:"address2,omitempty"`

	// City City
	City *string `json:"city,omitempty"`

	// Country Country
	Country *string `json:"country,omitempty"`

	// CreatedTime Timestamp of the customer creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Email Email
	Email string      `json:"email"`
	Id    *CustomerId `json:"id,omitempty"`

	// Name Name of the customer. Read-only, duplicated from title for backward compatibility
	Name *string `json:"name,omitempty"`

	// Phone Phone number
	Phone *string `json:"phone,omitempty"`

	// State State
	State    *string   `json:"state,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title Title of the customer
	Title string `json:"title"`

	// Zip Zip code
	Zip *string `json:"zip,omitempty"`
}

// CustomerId defines model for CustomerId.
type CustomerId struct {
	// EntityType string
	EntityType CustomerIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// CustomerIdEntityType string
type CustomerIdEntityType string

// Dashboard defines model for Dashboard.
type Dashboard struct {
	// AssignedCustomers List of assigned customers with their info.
	AssignedCustomers *[]ShortCustomerInfo `json:"assignedCustomers,omitempty"`

	// Configuration A value representing the any type (object or primitive)
	Configuration *JsonNode `json:"configuration,omitempty"`

	// CreatedTime Timestamp of the dashboard creation, in milliseconds
	CreatedTime *int64       `json:"createdTime,omitempty"`
	Id          *DashboardId `json:"id,omitempty"`

	// Image Thumbnail picture for rendering of the dashboards in a grid view on mobile devices.
	Image *string `json:"image,omitempty"`

	// MobileHide Hide dashboard from mobile devices. Useful if the dashboard is not designed for small screens.
	MobileHide *bool `json:"mobileHide,omitempty"`

	// MobileOrder Order on mobile devices. Useful to adjust sorting of the dashboards for mobile applications
	MobileOrder *int32 `json:"mobileOrder,omitempty"`

	// Name Same as title of the dashboard. Read-only field. Update the 'title' to change the 'name' of the dashboard.
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title Title of the dashboard.
	Title string `json:"title"`
}

// DashboardId defines model for DashboardId.
type DashboardId struct {
	// EntityType string
	EntityType DashboardIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// DashboardIdEntityType string
type DashboardIdEntityType string

// DashboardInfo defines model for DashboardInfo.
type DashboardInfo struct {
	// AssignedCustomers List of assigned customers with their info.
	AssignedCustomers *[]ShortCustomerInfo `json:"assignedCustomers,omitempty"`

	// CreatedTime Timestamp of the dashboard creation, in milliseconds
	CreatedTime *int64       `json:"createdTime,omitempty"`
	Id          *DashboardId `json:"id,omitempty"`

	// Image Thumbnail picture for rendering of the dashboards in a grid view on mobile devices.
	Image *string `json:"image,omitempty"`

	// MobileHide Hide dashboard from mobile devices. Useful if the dashboard is not designed for small screens.
	MobileHide *bool `json:"mobileHide,omitempty"`

	// MobileOrder Order on mobile devices. Useful to adjust sorting of the dashboards for mobile applications
	MobileOrder *int32 `json:"mobileOrder,omitempty"`

	// Name Same as title of the dashboard. Read-only field. Update the 'title' to change the 'name' of the dashboard.
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title Title of the dashboard.
	Title string `json:"title"`
}

// DefaultDeviceConfiguration defines model for DefaultDeviceConfiguration.
type DefaultDeviceConfiguration = DeviceConfiguration

// DefaultDeviceProfileConfiguration defines model for DefaultDeviceProfileConfiguration.
type DefaultDeviceProfileConfiguration = DeviceProfileConfiguration

// DefaultDeviceProfileTransportConfiguration defines model for DefaultDeviceProfileTransportConfiguration.
type DefaultDeviceProfileTransportConfiguration = DeviceProfileTransportConfiguration

// DefaultDeviceTransportConfiguration defines model for DefaultDeviceTransportConfiguration.
type DefaultDeviceTransportConfiguration = DeviceTransportConfiguration

// DefaultRuleChainCreateRequest A JSON value representing the request.
type DefaultRuleChainCreateRequest struct {
	// Name Name of the new rule chain
	Name string `json:"name"`
}

// DefaultTenantProfileConfiguration defines model for DefaultTenantProfileConfiguration.
type DefaultTenantProfileConfiguration struct {
	AlarmsTtlDays                                      *int32   `json:"alarmsTtlDays,omitempty"`
	CassandraQueryTenantRateLimitsConfiguration        *string  `json:"cassandraQueryTenantRateLimitsConfiguration,omitempty"`
	CustomerServerRestLimitsConfiguration              *string  `json:"customerServerRestLimitsConfiguration,omitempty"`
	DefaultStorageTtlDays                              *int32   `json:"defaultStorageTtlDays,omitempty"`
	EdgeEventRateLimits                                *string  `json:"edgeEventRateLimits,omitempty"`
	EdgeEventRateLimitsPerEdge                         *string  `json:"edgeEventRateLimitsPerEdge,omitempty"`
	EdgeUplinkMessagesRateLimits                       *string  `json:"edgeUplinkMessagesRateLimits,omitempty"`
	EdgeUplinkMessagesRateLimitsPerEdge                *string  `json:"edgeUplinkMessagesRateLimitsPerEdge,omitempty"`
	MaxAssets                                          *int64   `json:"maxAssets,omitempty"`
	MaxCreatedAlarms                                   *int64   `json:"maxCreatedAlarms,omitempty"`
	MaxCustomers                                       *int64   `json:"maxCustomers,omitempty"`
	MaxDPStorageDays                                   *int64   `json:"maxDPStorageDays,omitempty"`
	MaxDashboards                                      *int64   `json:"maxDashboards,omitempty"`
	MaxDevices                                         *int64   `json:"maxDevices,omitempty"`
	MaxEmails                                          *int64   `json:"maxEmails,omitempty"`
	MaxJSExecutions                                    *int64   `json:"maxJSExecutions,omitempty"`
	MaxOtaPackagesInBytes                              *int64   `json:"maxOtaPackagesInBytes,omitempty"`
	MaxREExecutions                                    *int64   `json:"maxREExecutions,omitempty"`
	MaxResourceSize                                    *int64   `json:"maxResourceSize,omitempty"`
	MaxResourcesInBytes                                *int64   `json:"maxResourcesInBytes,omitempty"`
	MaxRuleChains                                      *int64   `json:"maxRuleChains,omitempty"`
	MaxRuleNodeExecutionsPerMessage                    *int32   `json:"maxRuleNodeExecutionsPerMessage,omitempty"`
	MaxSms                                             *int64   `json:"maxSms,omitempty"`
	MaxTbelExecutions                                  *int64   `json:"maxTbelExecutions,omitempty"`
	MaxTransportDataPoints                             *int64   `json:"maxTransportDataPoints,omitempty"`
	MaxTransportMessages                               *int64   `json:"maxTransportMessages,omitempty"`
	MaxUsers                                           *int64   `json:"maxUsers,omitempty"`
	MaxWsSessionsPerCustomer                           *int32   `json:"maxWsSessionsPerCustomer,omitempty"`
	MaxWsSessionsPerPublicUser                         *int32   `json:"maxWsSessionsPerPublicUser,omitempty"`
	MaxWsSessionsPerRegularUser                        *int32   `json:"maxWsSessionsPerRegularUser,omitempty"`
	MaxWsSessionsPerTenant                             *int32   `json:"maxWsSessionsPerTenant,omitempty"`
	MaxWsSubscriptionsPerCustomer                      *int64   `json:"maxWsSubscriptionsPerCustomer,omitempty"`
	MaxWsSubscriptionsPerPublicUser                    *int64   `json:"maxWsSubscriptionsPerPublicUser,omitempty"`
	MaxWsSubscriptionsPerRegularUser                   *int64   `json:"maxWsSubscriptionsPerRegularUser,omitempty"`
	MaxWsSubscriptionsPerTenant                        *int64   `json:"maxWsSubscriptionsPerTenant,omitempty"`
	QueueStatsTtlDays                                  *int32   `json:"queueStatsTtlDays,omitempty"`
	RpcTtlDays                                         *int32   `json:"rpcTtlDays,omitempty"`
	RuleEngineExceptionsTtlDays                        *int32   `json:"ruleEngineExceptionsTtlDays,omitempty"`
	SmsEnabled                                         *bool    `json:"smsEnabled,omitempty"`
	TenantEntityExportRateLimit                        *string  `json:"tenantEntityExportRateLimit,omitempty"`
	TenantEntityImportRateLimit                        *string  `json:"tenantEntityImportRateLimit,omitempty"`
	TenantNotificationRequestsPerRuleRateLimit         *string  `json:"tenantNotificationRequestsPerRuleRateLimit,omitempty"`
	TenantNotificationRequestsRateLimit                *string  `json:"tenantNotificationRequestsRateLimit,omitempty"`
	TenantServerRestLimitsConfiguration                *string  `json:"tenantServerRestLimitsConfiguration,omitempty"`
	TransportDeviceMsgRateLimit                        *string  `json:"transportDeviceMsgRateLimit,omitempty"`
	TransportDeviceTelemetryDataPointsRateLimit        *string  `json:"transportDeviceTelemetryDataPointsRateLimit,omitempty"`
	TransportDeviceTelemetryMsgRateLimit               *string  `json:"transportDeviceTelemetryMsgRateLimit,omitempty"`
	TransportGatewayDeviceMsgRateLimit                 *string  `json:"transportGatewayDeviceMsgRateLimit,omitempty"`
	TransportGatewayDeviceTelemetryDataPointsRateLimit *string  `json:"transportGatewayDeviceTelemetryDataPointsRateLimit,omitempty"`
	TransportGatewayDeviceTelemetryMsgRateLimit        *string  `json:"transportGatewayDeviceTelemetryMsgRateLimit,omitempty"`
	TransportGatewayMsgRateLimit                       *string  `json:"transportGatewayMsgRateLimit,omitempty"`
	TransportGatewayTelemetryDataPointsRateLimit       *string  `json:"transportGatewayTelemetryDataPointsRateLimit,omitempty"`
	TransportGatewayTelemetryMsgRateLimit              *string  `json:"transportGatewayTelemetryMsgRateLimit,omitempty"`
	TransportTenantMsgRateLimit                        *string  `json:"transportTenantMsgRateLimit,omitempty"`
	TransportTenantTelemetryDataPointsRateLimit        *string  `json:"transportTenantTelemetryDataPointsRateLimit,omitempty"`
	TransportTenantTelemetryMsgRateLimit               *string  `json:"transportTenantTelemetryMsgRateLimit,omitempty"`
	Type                                               string   `json:"type"`
	WarnThreshold                                      *float64 `json:"warnThreshold,omitempty"`
	WsMsgQueueLimitPerSession                          *int32   `json:"wsMsgQueueLimitPerSession,omitempty"`
	WsUpdatesPerSessionRateLimit                       *string  `json:"wsUpdatesPerSessionRateLimit,omitempty"`
}

// DeliveryMethodNotificationTemplate defines model for DeliveryMethodNotificationTemplate.
type DeliveryMethodNotificationTemplate struct {
	Body    string `json:"body"`
	Enabled *bool  `json:"enabled,omitempty"`
	Method  string `json:"method"`
}

// Device defines model for Device.
type Device struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the device creation, in milliseconds
	CreatedTime     *int64          `json:"createdTime,omitempty"`
	CustomerId      *CustomerId     `json:"customerId,omitempty"`
	DeviceData      *DeviceData     `json:"deviceData,omitempty"`
	DeviceProfileId DeviceProfileId `json:"deviceProfileId"`
	FirmwareId      *OtaPackageId   `json:"firmwareId,omitempty"`
	Id              *DeviceId       `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Device Name in scope of Tenant
	Name       string        `json:"name"`
	SoftwareId *OtaPackageId `json:"softwareId,omitempty"`
	TenantId   *TenantId     `json:"tenantId,omitempty"`

	// Type Device Profile Name
	Type *string `json:"type,omitempty"`
}

// DeviceActivityNotificationRuleTriggerConfig defines model for DeviceActivityNotificationRuleTriggerConfig.
type DeviceActivityNotificationRuleTriggerConfig struct {
	DeviceProfiles *[]openapi_types.UUID                                   `json:"deviceProfiles,omitempty"`
	Devices        *[]openapi_types.UUID                                   `json:"devices,omitempty"`
	NotifyOn       *[]DeviceActivityNotificationRuleTriggerConfigNotifyOn  `json:"notifyOn,omitempty"`
	TriggerType    *DeviceActivityNotificationRuleTriggerConfigTriggerType `json:"triggerType,omitempty"`
}

// DeviceActivityNotificationRuleTriggerConfigNotifyOn defines model for DeviceActivityNotificationRuleTriggerConfig.NotifyOn.
type DeviceActivityNotificationRuleTriggerConfigNotifyOn string

// DeviceActivityNotificationRuleTriggerConfigTriggerType defines model for DeviceActivityNotificationRuleTriggerConfig.TriggerType.
type DeviceActivityNotificationRuleTriggerConfigTriggerType string

// DeviceConfiguration defines model for DeviceConfiguration.
type DeviceConfiguration struct {
	Type string `json:"type"`
}

// DeviceCredentials A JSON value representing the device credentials.
type DeviceCredentials struct {
	// CreatedTime Timestamp of the device credentials creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// CredentialsId Unique Credentials Id per platform instance. Used to lookup credentials from the database. By default, new access token for your device. Depends on the type of the credentials.
	CredentialsId string `json:"credentialsId"`

	// CredentialsType Type of the credentials
	CredentialsType *DeviceCredentialsCredentialsType `json:"credentialsType,omitempty"`

	// CredentialsValue Value of the credentials. Null in case of ACCESS_TOKEN credentials type. Base64 value in case of X509_CERTIFICATE. Complex object in case of MQTT_BASIC and LWM2M_CREDENTIALS
	CredentialsValue *string             `json:"credentialsValue,omitempty"`
	DeviceId         DeviceId            `json:"deviceId"`
	Id               DeviceCredentialsId `json:"id"`
}

// DeviceCredentialsCredentialsType Type of the credentials
type DeviceCredentialsCredentialsType string

// DeviceCredentialsId defines model for DeviceCredentialsId.
type DeviceCredentialsId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// DeviceData defines model for DeviceData.
type DeviceData struct {
	// Configuration Device configuration for device profile type. DEFAULT is only supported value for now
	Configuration *DeviceData_Configuration `json:"configuration,omitempty"`

	// TransportConfiguration Device transport configuration used to connect the device
	TransportConfiguration *DeviceData_TransportConfiguration `json:"transportConfiguration,omitempty"`
}

// DeviceData_Configuration Device configuration for device profile type. DEFAULT is only supported value for now
type DeviceData_Configuration struct {
	union json.RawMessage
}

// DeviceData_TransportConfiguration Device transport configuration used to connect the device
type DeviceData_TransportConfiguration struct {
	union json.RawMessage
}

// DeviceExportData defines model for DeviceExportData.
type DeviceExportData struct {
	Attributes *map[string][]AttributeExportData `json:"attributes,omitempty"`

	// Credentials A JSON value representing the device credentials.
	Credentials *DeviceCredentials          `json:"credentials,omitempty"`
	Entity      *Device                     `json:"entity,omitempty"`
	EntityType  *DeviceExportDataEntityType `json:"entityType,omitempty"`
	Relations   *[]EntityRelation           `json:"relations,omitempty"`
}

// DeviceExportDataEntityType defines model for DeviceExportData.EntityType.
type DeviceExportDataEntityType string

// DeviceId defines model for DeviceId.
type DeviceId struct {
	// EntityType string
	EntityType DeviceIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// DeviceIdEntityType string
type DeviceIdEntityType string

// DeviceInfo defines model for DeviceInfo.
type DeviceInfo struct {
	// Active Device active flag.
	Active *bool `json:"active,omitempty"`

	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the device creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// CustomerIsPublic Indicates special 'Public' Customer that is auto-generated to use the devices on public dashboards.
	CustomerIsPublic *bool `json:"customerIsPublic,omitempty"`

	// CustomerTitle Title of the Customer that owns the device.
	CustomerTitle   *string         `json:"customerTitle,omitempty"`
	DeviceData      *DeviceData     `json:"deviceData,omitempty"`
	DeviceProfileId DeviceProfileId `json:"deviceProfileId"`

	// DeviceProfileName Name of the corresponding Device Profile.
	DeviceProfileName *string       `json:"deviceProfileName,omitempty"`
	FirmwareId        *OtaPackageId `json:"firmwareId,omitempty"`
	Id                *DeviceId     `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Device Name in scope of Tenant
	Name       string        `json:"name"`
	SoftwareId *OtaPackageId `json:"softwareId,omitempty"`
	TenantId   *TenantId     `json:"tenantId,omitempty"`

	// Type Device Profile Name
	Type *string `json:"type,omitempty"`
}

// DeviceProfile A JSON value representing the device profile.
type DeviceProfile struct {
	// CreatedTime Timestamp of the profile creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Default Used to mark the default profile. Default profile is used when the device profile is not specified during device creation.
	Default                *bool        `json:"default,omitempty"`
	DefaultDashboardId     *DashboardId `json:"defaultDashboardId,omitempty"`
	DefaultEdgeRuleChainId *RuleChainId `json:"defaultEdgeRuleChainId,omitempty"`

	// DefaultQueueName Rule engine queue name. If present, the specified queue will be used to store all unprocessed messages related to device, including telemetry, attribute updates, etc. Otherwise, the 'Main' queue will be used to store those messages.
	DefaultQueueName   *string      `json:"defaultQueueName,omitempty"`
	DefaultRuleChainId *RuleChainId `json:"defaultRuleChainId,omitempty"`

	// Description Device Profile description.
	Description *string          `json:"description,omitempty"`
	FirmwareId  *OtaPackageId    `json:"firmwareId,omitempty"`
	Id          *DeviceProfileId `json:"id,omitempty"`

	// Image Either URL or Base64 data of the icon. Used in the mobile application to visualize set of device profiles in the grid view.
	Image *string `json:"image,omitempty"`

	// Name Unique Device Profile Name in scope of Tenant.
	Name        *string            `json:"name,omitempty"`
	ProfileData *DeviceProfileData `json:"profileData,omitempty"`

	// ProvisionDeviceKey Unique provisioning key used by 'Device Provisioning' feature.
	ProvisionDeviceKey *string `json:"provisionDeviceKey,omitempty"`

	// ProvisionType Provisioning strategy.
	ProvisionType *DeviceProfileProvisionType `json:"provisionType,omitempty"`
	SoftwareId    *OtaPackageId               `json:"softwareId,omitempty"`
	TenantId      *TenantId                   `json:"tenantId,omitempty"`

	// TransportType Type of the transport used to connect the device. Default transport supports HTTP, CoAP and MQTT.
	TransportType *DeviceProfileTransportType `json:"transportType,omitempty"`

	// Type Type of the profile. Always 'DEFAULT' for now. Reserved for future use.
	Type *DeviceProfileType `json:"type,omitempty"`
}

// DeviceProfileProvisionType Provisioning strategy.
type DeviceProfileProvisionType string

// DeviceProfileTransportType Type of the transport used to connect the device. Default transport supports HTTP, CoAP and MQTT.
type DeviceProfileTransportType string

// DeviceProfileType Type of the profile. Always 'DEFAULT' for now. Reserved for future use.
type DeviceProfileType string

// DeviceProfileAlarm defines model for DeviceProfileAlarm.
type DeviceProfileAlarm struct {
	// AlarmType String value representing type of the alarm
	AlarmType *string    `json:"alarmType,omitempty"`
	ClearRule *AlarmRule `json:"clearRule,omitempty"`

	// CreateRules Complex JSON object representing create alarm rules. The unique create alarm rule can be created for each alarm severity type. There can be 5 create alarm rules configured per a single alarm type. See method implementation notes and AlarmRule model for more details
	CreateRules *map[string]AlarmRule `json:"createRules,omitempty"`

	// Id String value representing the alarm rule id
	Id *string `json:"id,omitempty"`

	// Propagate Propagation flag to specify if alarm should be propagated to parent entities of alarm originator
	Propagate *bool `json:"propagate,omitempty"`

	// PropagateRelationTypes JSON array of relation types that should be used for propagation. By default, 'propagateRelationTypes' array is empty which means that the alarm will be propagated based on any relation type to parent entities. This parameter should be used only in case when 'propagate' parameter is set to true, otherwise, 'propagateRelationTypes' array will be ignored.
	PropagateRelationTypes *[]string `json:"propagateRelationTypes,omitempty"`

	// PropagateToOwner Propagation flag to specify if alarm should be propagated to the owner (tenant or customer) of alarm originator
	PropagateToOwner *bool `json:"propagateToOwner,omitempty"`

	// PropagateToTenant Propagation flag to specify if alarm should be propagated to the tenant entity
	PropagateToTenant *bool `json:"propagateToTenant,omitempty"`
}

// DeviceProfileConfiguration defines model for DeviceProfileConfiguration.
type DeviceProfileConfiguration struct {
	Type string `json:"type"`
}

// DeviceProfileData defines model for DeviceProfileData.
type DeviceProfileData struct {
	// Alarms JSON array of alarm rules configuration per device profile
	Alarms *[]DeviceProfileAlarm `json:"alarms,omitempty"`

	// Configuration JSON object of device profile configuration
	Configuration *DeviceProfileData_Configuration `json:"configuration,omitempty"`

	// ProvisionConfiguration JSON object of provisioning strategy type per device profile
	ProvisionConfiguration *DeviceProfileData_ProvisionConfiguration `json:"provisionConfiguration,omitempty"`

	// TransportConfiguration JSON object of device profile transport configuration
	TransportConfiguration *DeviceProfileData_TransportConfiguration `json:"transportConfiguration,omitempty"`
}

// DeviceProfileData_Configuration JSON object of device profile configuration
type DeviceProfileData_Configuration struct {
	union json.RawMessage
}

// DeviceProfileData_ProvisionConfiguration JSON object of provisioning strategy type per device profile
type DeviceProfileData_ProvisionConfiguration struct {
	union json.RawMessage
}

// DeviceProfileData_TransportConfiguration JSON object of device profile transport configuration
type DeviceProfileData_TransportConfiguration struct {
	union json.RawMessage
}

// DeviceProfileId defines model for DeviceProfileId.
type DeviceProfileId struct {
	// EntityType string
	EntityType DeviceProfileIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// DeviceProfileIdEntityType string
type DeviceProfileIdEntityType string

// DeviceProfileInfo defines model for DeviceProfileInfo.
type DeviceProfileInfo struct {
	DefaultDashboardId *DashboardId `json:"defaultDashboardId,omitempty"`
	Id                 *EntityId    `json:"id,omitempty"`

	// Image Either URL or Base64 data of the icon. Used in the mobile application to visualize set of device profiles in the grid view.
	Image *string `json:"image,omitempty"`

	// Name Entity Name
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// TransportType Type of the transport used to connect the device. Default transport supports HTTP, CoAP and MQTT.
	TransportType *DeviceProfileInfoTransportType `json:"transportType,omitempty"`

	// Type Type of the profile. Always 'DEFAULT' for now. Reserved for future use.
	Type *DeviceProfileInfoType `json:"type,omitempty"`
}

// DeviceProfileInfoTransportType Type of the transport used to connect the device. Default transport supports HTTP, CoAP and MQTT.
type DeviceProfileInfoTransportType string

// DeviceProfileInfoType Type of the profile. Always 'DEFAULT' for now. Reserved for future use.
type DeviceProfileInfoType string

// DeviceProfileProvisionConfiguration defines model for DeviceProfileProvisionConfiguration.
type DeviceProfileProvisionConfiguration struct {
	ProvisionDeviceSecret *string `json:"provisionDeviceSecret,omitempty"`
	Type                  string  `json:"type"`
}

// DeviceProfileTransportConfiguration defines model for DeviceProfileTransportConfiguration.
type DeviceProfileTransportConfiguration struct {
	Type string `json:"type"`
}

// DeviceSearchQueryFilter defines model for DeviceSearchQueryFilter.
type DeviceSearchQueryFilter struct {
	DeviceTypes        *[]string                         `json:"deviceTypes,omitempty"`
	Direction          *DeviceSearchQueryFilterDirection `json:"direction,omitempty"`
	FetchLastLevelOnly *bool                             `json:"fetchLastLevelOnly,omitempty"`
	MaxLevel           *int32                            `json:"maxLevel,omitempty"`
	RelationType       *string                           `json:"relationType,omitempty"`
	RootEntity         *EntityId                         `json:"rootEntity,omitempty"`
	Type               string                            `json:"type"`
}

// DeviceSearchQueryFilterDirection defines model for DeviceSearchQueryFilter.Direction.
type DeviceSearchQueryFilterDirection string

// DeviceTransportConfiguration defines model for DeviceTransportConfiguration.
type DeviceTransportConfiguration struct {
	Type string `json:"type"`
}

// DeviceTypeFilter defines model for DeviceTypeFilter.
type DeviceTypeFilter struct {
	DeviceNameFilter *string `json:"deviceNameFilter,omitempty"`
	// Deprecated:
	DeviceType  *string   `json:"deviceType,omitempty"`
	DeviceTypes *[]string `json:"deviceTypes,omitempty"`
	Type        string    `json:"type"`
}

// DisabledDeviceProfileProvisionConfiguration defines model for DisabledDeviceProfileProvisionConfiguration.
type DisabledDeviceProfileProvisionConfiguration = DeviceProfileProvisionConfiguration

// DurationAlarmConditionSpec defines model for DurationAlarmConditionSpec.
type DurationAlarmConditionSpec struct {
	Predicate *FilterPredicateValueLong       `json:"predicate,omitempty"`
	Type      string                          `json:"type"`
	Unit      *DurationAlarmConditionSpecUnit `json:"unit,omitempty"`
}

// DurationAlarmConditionSpecUnit defines model for DurationAlarmConditionSpec.Unit.
type DurationAlarmConditionSpecUnit string

// DynamicValueBoolean defines model for DynamicValueBoolean.
type DynamicValueBoolean struct {
	Inherit         *bool                          `json:"inherit,omitempty"`
	SourceAttribute *string                        `json:"sourceAttribute,omitempty"`
	SourceType      *DynamicValueBooleanSourceType `json:"sourceType,omitempty"`
}

// DynamicValueBooleanSourceType defines model for DynamicValueBoolean.SourceType.
type DynamicValueBooleanSourceType string

// DynamicValueDouble defines model for DynamicValueDouble.
type DynamicValueDouble struct {
	Inherit         *bool                         `json:"inherit,omitempty"`
	SourceAttribute *string                       `json:"sourceAttribute,omitempty"`
	SourceType      *DynamicValueDoubleSourceType `json:"sourceType,omitempty"`
}

// DynamicValueDoubleSourceType defines model for DynamicValueDouble.SourceType.
type DynamicValueDoubleSourceType string

// DynamicValueInteger defines model for DynamicValueInteger.
type DynamicValueInteger struct {
	Inherit         *bool                          `json:"inherit,omitempty"`
	SourceAttribute *string                        `json:"sourceAttribute,omitempty"`
	SourceType      *DynamicValueIntegerSourceType `json:"sourceType,omitempty"`
}

// DynamicValueIntegerSourceType defines model for DynamicValueInteger.SourceType.
type DynamicValueIntegerSourceType string

// DynamicValueLong defines model for DynamicValueLong.
type DynamicValueLong struct {
	Inherit         *bool                       `json:"inherit,omitempty"`
	SourceAttribute *string                     `json:"sourceAttribute,omitempty"`
	SourceType      *DynamicValueLongSourceType `json:"sourceType,omitempty"`
}

// DynamicValueLongSourceType defines model for DynamicValueLong.SourceType.
type DynamicValueLongSourceType string

// DynamicValueString defines model for DynamicValueString.
type DynamicValueString struct {
	Inherit         *bool                         `json:"inherit,omitempty"`
	SourceAttribute *string                       `json:"sourceAttribute,omitempty"`
	SourceType      *DynamicValueStringSourceType `json:"sourceType,omitempty"`
}

// DynamicValueStringSourceType defines model for DynamicValueString.SourceType.
type DynamicValueStringSourceType string

// Edge A JSON value representing the edge.
type Edge struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the edge creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`
	Id          *EdgeId     `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Edge Name in scope of Tenant
	Name            string       `json:"name"`
	RootRuleChainId *RuleChainId `json:"rootRuleChainId,omitempty"`

	// RoutingKey Edge routing key ('username') to authorize on cloud
	RoutingKey string `json:"routingKey"`

	// Secret Edge secret ('password') to authorize on cloud
	Secret   string    `json:"secret"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Type Edge type
	Type string `json:"type"`
}

// EdgeCommunicationFailureNotificationRuleTriggerConfig defines model for EdgeCommunicationFailureNotificationRuleTriggerConfig.
type EdgeCommunicationFailureNotificationRuleTriggerConfig struct {
	Edges       *[]openapi_types.UUID                                             `json:"edges,omitempty"`
	TriggerType *EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType `json:"triggerType,omitempty"`
}

// EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType defines model for EdgeCommunicationFailureNotificationRuleTriggerConfig.TriggerType.
type EdgeCommunicationFailureNotificationRuleTriggerConfigTriggerType string

// EdgeConnectionNotificationRuleTriggerConfig defines model for EdgeConnectionNotificationRuleTriggerConfig.
type EdgeConnectionNotificationRuleTriggerConfig struct {
	Edges       *[]openapi_types.UUID                                   `json:"edges,omitempty"`
	NotifyOn    *[]EdgeConnectionNotificationRuleTriggerConfigNotifyOn  `json:"notifyOn,omitempty"`
	TriggerType *EdgeConnectionNotificationRuleTriggerConfigTriggerType `json:"triggerType,omitempty"`
}

// EdgeConnectionNotificationRuleTriggerConfigNotifyOn defines model for EdgeConnectionNotificationRuleTriggerConfig.NotifyOn.
type EdgeConnectionNotificationRuleTriggerConfigNotifyOn string

// EdgeConnectionNotificationRuleTriggerConfigTriggerType defines model for EdgeConnectionNotificationRuleTriggerConfig.TriggerType.
type EdgeConnectionNotificationRuleTriggerConfigTriggerType string

// EdgeEvent defines model for EdgeEvent.
type EdgeEvent struct {
	Action *EdgeEventAction `json:"action,omitempty"`

	// Body A value representing the any type (object or primitive)
	Body        *JsonNode           `json:"body,omitempty"`
	CreatedTime *int64              `json:"createdTime,omitempty"`
	EdgeId      *EdgeId             `json:"edgeId,omitempty"`
	EntityId    *openapi_types.UUID `json:"entityId,omitempty"`
	Id          *EdgeEventId        `json:"id,omitempty"`
	SeqId       *int64              `json:"seqId,omitempty"`
	TenantId    *TenantId           `json:"tenantId,omitempty"`
	Type        *EdgeEventType      `json:"type,omitempty"`
	Uid         *string             `json:"uid,omitempty"`
}

// EdgeEventAction defines model for EdgeEvent.Action.
type EdgeEventAction string

// EdgeEventType defines model for EdgeEvent.Type.
type EdgeEventType string

// EdgeEventId defines model for EdgeEventId.
type EdgeEventId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// EdgeId defines model for EdgeId.
type EdgeId struct {
	// EntityType string
	EntityType EdgeIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// EdgeIdEntityType string
type EdgeIdEntityType string

// EdgeInfo defines model for EdgeInfo.
type EdgeInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the edge creation, in milliseconds
	CreatedTime      *int64      `json:"createdTime,omitempty"`
	CustomerId       *CustomerId `json:"customerId,omitempty"`
	CustomerIsPublic *bool       `json:"customerIsPublic,omitempty"`
	CustomerTitle    *string     `json:"customerTitle,omitempty"`
	Id               *EdgeId     `json:"id,omitempty"`

	// Label Label that may be used in widgets
	Label *string `json:"label,omitempty"`

	// Name Unique Edge Name in scope of Tenant
	Name            string       `json:"name"`
	RootRuleChainId *RuleChainId `json:"rootRuleChainId,omitempty"`

	// RoutingKey Edge routing key ('username') to authorize on cloud
	RoutingKey string `json:"routingKey"`

	// Secret Edge secret ('password') to authorize on cloud
	Secret   string    `json:"secret"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Type Edge type
	Type string `json:"type"`
}

// EdgeInstructions defines model for EdgeInstructions.
type EdgeInstructions struct {
	// Instructions Markdown with install/upgrade instructions
	Instructions *string `json:"instructions,omitempty"`
}

// EdgeSearchQueryFilter defines model for EdgeSearchQueryFilter.
type EdgeSearchQueryFilter struct {
	Direction          *EdgeSearchQueryFilterDirection `json:"direction,omitempty"`
	EdgeTypes          *[]string                       `json:"edgeTypes,omitempty"`
	FetchLastLevelOnly *bool                           `json:"fetchLastLevelOnly,omitempty"`
	MaxLevel           *int32                          `json:"maxLevel,omitempty"`
	RelationType       *string                         `json:"relationType,omitempty"`
	RootEntity         *EntityId                       `json:"rootEntity,omitempty"`
	Type               string                          `json:"type"`
}

// EdgeSearchQueryFilterDirection defines model for EdgeSearchQueryFilter.Direction.
type EdgeSearchQueryFilterDirection string

// EdgeTypeFilter defines model for EdgeTypeFilter.
type EdgeTypeFilter struct {
	EdgeNameFilter *string `json:"edgeNameFilter,omitempty"`
	// Deprecated:
	EdgeType  *string   `json:"edgeType,omitempty"`
	EdgeTypes *[]string `json:"edgeTypes,omitempty"`
	Type      string    `json:"type"`
}

// EmailDeliveryMethodNotificationTemplate defines model for EmailDeliveryMethodNotificationTemplate.
type EmailDeliveryMethodNotificationTemplate struct {
	Body    string  `json:"body"`
	Enabled *bool   `json:"enabled,omitempty"`
	Method  string  `json:"method"`
	Subject *string `json:"subject,omitempty"`
}

// EmailTwoFaAccountConfig defines model for EmailTwoFaAccountConfig.
type EmailTwoFaAccountConfig struct {
	Email        *string `json:"email,omitempty"`
	ProviderType string  `json:"providerType"`
	UseByDefault *bool   `json:"useByDefault,omitempty"`
}

// EmailTwoFaProviderConfig defines model for EmailTwoFaProviderConfig.
type EmailTwoFaProviderConfig struct {
	ProviderType             string `json:"providerType"`
	VerificationCodeLifetime *int32 `json:"verificationCodeLifetime,omitempty"`
}

// EntitiesLimitNotificationRuleTriggerConfig defines model for EntitiesLimitNotificationRuleTriggerConfig.
type EntitiesLimitNotificationRuleTriggerConfig struct {
	EntityTypes *[]EntitiesLimitNotificationRuleTriggerConfigEntityTypes `json:"entityTypes,omitempty"`
	Threshold   *float32                                                 `json:"threshold,omitempty"`
	TriggerType *EntitiesLimitNotificationRuleTriggerConfigTriggerType   `json:"triggerType,omitempty"`
}

// EntitiesLimitNotificationRuleTriggerConfigEntityTypes defines model for EntitiesLimitNotificationRuleTriggerConfig.EntityTypes.
type EntitiesLimitNotificationRuleTriggerConfigEntityTypes string

// EntitiesLimitNotificationRuleTriggerConfigTriggerType defines model for EntitiesLimitNotificationRuleTriggerConfig.TriggerType.
type EntitiesLimitNotificationRuleTriggerConfigTriggerType string

// EntityActionNotificationRuleTriggerConfig defines model for EntityActionNotificationRuleTriggerConfig.
type EntityActionNotificationRuleTriggerConfig struct {
	Created     *bool                                                   `json:"created,omitempty"`
	Deleted     *bool                                                   `json:"deleted,omitempty"`
	EntityTypes *[]EntityActionNotificationRuleTriggerConfigEntityTypes `json:"entityTypes,omitempty"`
	TriggerType *EntityActionNotificationRuleTriggerConfigTriggerType   `json:"triggerType,omitempty"`
	Updated     *bool                                                   `json:"updated,omitempty"`
}

// EntityActionNotificationRuleTriggerConfigEntityTypes defines model for EntityActionNotificationRuleTriggerConfig.EntityTypes.
type EntityActionNotificationRuleTriggerConfigEntityTypes string

// EntityActionNotificationRuleTriggerConfigTriggerType defines model for EntityActionNotificationRuleTriggerConfig.TriggerType.
type EntityActionNotificationRuleTriggerConfigTriggerType string

// EntityCountQuery A JSON value representing the entity count query. See API call notes above for more details.
type EntityCountQuery struct {
	EntityFilter *EntityCountQuery_EntityFilter `json:"entityFilter,omitempty"`
	KeyFilters   *[]KeyFilter                   `json:"keyFilters,omitempty"`
}

// EntityCountQuery_EntityFilter defines model for EntityCountQuery.EntityFilter.
type EntityCountQuery_EntityFilter struct {
	union json.RawMessage
}

// EntityData defines model for EntityData.
type EntityData struct {
	AggLatest  *map[string]ComparisonTsValue  `json:"aggLatest,omitempty"`
	EntityId   *EntityId                      `json:"entityId,omitempty"`
	Latest     *map[string]map[string]TsValue `json:"latest,omitempty"`
	Timeseries *map[string][]TsValue          `json:"timeseries,omitempty"`
}

// EntityDataDiff defines model for EntityDataDiff.
type EntityDataDiff struct {
	CurrentVersion *EntityDataDiff_CurrentVersion `json:"currentVersion,omitempty"`
	OtherVersion   *EntityDataDiff_OtherVersion   `json:"otherVersion,omitempty"`
}

// EntityDataDiff_CurrentVersion defines model for EntityDataDiff.CurrentVersion.
type EntityDataDiff_CurrentVersion struct {
	union json.RawMessage
}

// EntityDataDiff_OtherVersion defines model for EntityDataDiff.OtherVersion.
type EntityDataDiff_OtherVersion struct {
	union json.RawMessage
}

// EntityDataInfo defines model for EntityDataInfo.
type EntityDataInfo struct {
	HasAttributes  *bool `json:"hasAttributes,omitempty"`
	HasCredentials *bool `json:"hasCredentials,omitempty"`
	HasRelations   *bool `json:"hasRelations,omitempty"`
}

// EntityDataPageLink defines model for EntityDataPageLink.
type EntityDataPageLink struct {
	Dynamic    *bool                `json:"dynamic,omitempty"`
	Page       *int32               `json:"page,omitempty"`
	PageSize   *int32               `json:"pageSize,omitempty"`
	SortOrder  *EntityDataSortOrder `json:"sortOrder,omitempty"`
	TextSearch *string              `json:"textSearch,omitempty"`
}

// EntityDataQuery A JSON value representing the entity data query. See API call notes above for more details.
type EntityDataQuery struct {
	EntityFields *[]EntityKey                  `json:"entityFields,omitempty"`
	EntityFilter *EntityDataQuery_EntityFilter `json:"entityFilter,omitempty"`
	KeyFilters   *[]KeyFilter                  `json:"keyFilters,omitempty"`
	LatestValues *[]EntityKey                  `json:"latestValues,omitempty"`
	PageLink     *EntityDataPageLink           `json:"pageLink,omitempty"`
}

// EntityDataQuery_EntityFilter defines model for EntityDataQuery.EntityFilter.
type EntityDataQuery_EntityFilter struct {
	union json.RawMessage
}

// EntityDataSortOrder defines model for EntityDataSortOrder.
type EntityDataSortOrder struct {
	Direction *EntityDataSortOrderDirection `json:"direction,omitempty"`
	Key       *EntityKey                    `json:"key,omitempty"`
}

// EntityDataSortOrderDirection defines model for EntityDataSortOrder.Direction.
type EntityDataSortOrderDirection string

// EntityExportDataObject defines model for EntityExportDataObject.
type EntityExportDataObject struct {
	Attributes *map[string][]AttributeExportData `json:"attributes,omitempty"`
	Entity     *interface{}                      `json:"entity,omitempty"`
	EntityType *EntityExportDataObjectEntityType `json:"entityType,omitempty"`
	Relations  *[]EntityRelation                 `json:"relations,omitempty"`
}

// EntityExportDataObjectEntityType defines model for EntityExportDataObject.EntityType.
type EntityExportDataObjectEntityType string

// EntityFilter defines model for EntityFilter.
type EntityFilter struct {
	Type string `json:"type"`
}

// EntityId defines model for EntityId.
type EntityId struct {
	EntityType EntityIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// EntityIdEntityType defines model for EntityId.EntityType.
type EntityIdEntityType string

// EntityInfo defines model for EntityInfo.
type EntityInfo struct {
	Id *EntityId `json:"id,omitempty"`

	// Name Entity Name
	Name *string `json:"name,omitempty"`
}

// EntityKey defines model for EntityKey.
type EntityKey struct {
	Key  *string        `json:"key,omitempty"`
	Type *EntityKeyType `json:"type,omitempty"`
}

// EntityKeyType defines model for EntityKey.Type.
type EntityKeyType string

// EntityListFilter defines model for EntityListFilter.
type EntityListFilter struct {
	EntityList *[]string                   `json:"entityList,omitempty"`
	EntityType *EntityListFilterEntityType `json:"entityType,omitempty"`
	Type       string                      `json:"type"`
}

// EntityListFilterEntityType defines model for EntityListFilter.EntityType.
type EntityListFilterEntityType string

// EntityLoadError defines model for EntityLoadError.
type EntityLoadError struct {
	Message *string   `json:"message,omitempty"`
	Source  *EntityId `json:"source,omitempty"`
	Target  *EntityId `json:"target,omitempty"`
	Type    *string   `json:"type,omitempty"`
}

// EntityNameFilter defines model for EntityNameFilter.
type EntityNameFilter struct {
	EntityNameFilter *string                     `json:"entityNameFilter,omitempty"`
	EntityType       *EntityNameFilterEntityType `json:"entityType,omitempty"`
	Type             string                      `json:"type"`
}

// EntityNameFilterEntityType defines model for EntityNameFilter.EntityType.
type EntityNameFilterEntityType string

// EntityRelation A JSON value representing the relation.
type EntityRelation struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`
	From           *EntityId `json:"from,omitempty"`
	To             *EntityId `json:"to,omitempty"`

	// Type String value of relation type.
	Type *string `json:"type,omitempty"`

	// TypeGroup Represents the type group of the relation.
	TypeGroup *EntityRelationTypeGroup `json:"typeGroup,omitempty"`
}

// EntityRelationTypeGroup Represents the type group of the relation.
type EntityRelationTypeGroup string

// EntityRelationInfo defines model for EntityRelationInfo.
type EntityRelationInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`
	From           *EntityId `json:"from,omitempty"`

	// FromName Name of the entity for [from] direction.
	FromName *string   `json:"fromName,omitempty"`
	To       *EntityId `json:"to,omitempty"`

	// ToName Name of the entity for [to] direction.
	ToName *string `json:"toName,omitempty"`

	// Type String value of relation type.
	Type *string `json:"type,omitempty"`

	// TypeGroup Represents the type group of the relation.
	TypeGroup *EntityRelationInfoTypeGroup `json:"typeGroup,omitempty"`
}

// EntityRelationInfoTypeGroup Represents the type group of the relation.
type EntityRelationInfoTypeGroup string

// EntitySubtype defines model for EntitySubtype.
type EntitySubtype struct {
	EntityType *EntitySubtypeEntityType `json:"entityType,omitempty"`
	TenantId   *TenantId                `json:"tenantId,omitempty"`
	Type       *string                  `json:"type,omitempty"`
}

// EntitySubtypeEntityType defines model for EntitySubtype.EntityType.
type EntitySubtypeEntityType string

// EntityTypeFilter defines model for EntityTypeFilter.
type EntityTypeFilter struct {
	EntityType *EntityTypeFilterEntityType `json:"entityType,omitempty"`
	Type       string                      `json:"type"`
}

// EntityTypeFilterEntityType defines model for EntityTypeFilter.EntityType.
type EntityTypeFilterEntityType string

// EntityTypeLoadResult defines model for EntityTypeLoadResult.
type EntityTypeLoadResult struct {
	Created    *int32                          `json:"created,omitempty"`
	Deleted    *int32                          `json:"deleted,omitempty"`
	EntityType *EntityTypeLoadResultEntityType `json:"entityType,omitempty"`
	Updated    *int32                          `json:"updated,omitempty"`
}

// EntityTypeLoadResultEntityType defines model for EntityTypeLoadResult.EntityType.
type EntityTypeLoadResultEntityType string

// EntityTypeVersionLoadConfig defines model for EntityTypeVersionLoadConfig.
type EntityTypeVersionLoadConfig struct {
	FindExistingEntityByName *bool `json:"findExistingEntityByName,omitempty"`
	LoadAttributes           *bool `json:"loadAttributes,omitempty"`
	LoadCredentials          *bool `json:"loadCredentials,omitempty"`
	LoadRelations            *bool `json:"loadRelations,omitempty"`
	RemoveOtherEntities      *bool `json:"removeOtherEntities,omitempty"`
}

// EntityTypeVersionLoadRequest defines model for EntityTypeVersionLoadRequest.
type EntityTypeVersionLoadRequest struct {
	EntityTypes     *map[string]EntityTypeVersionLoadConfig `json:"entityTypes,omitempty"`
	RollbackOnError *bool                                   `json:"rollbackOnError,omitempty"`
	Type            *EntityTypeVersionLoadRequestType       `json:"type,omitempty"`
	VersionId       *string                                 `json:"versionId,omitempty"`
}

// EntityTypeVersionLoadRequestType defines model for EntityTypeVersionLoadRequest.Type.
type EntityTypeVersionLoadRequestType string

// EntityVersion defines model for EntityVersion.
type EntityVersion struct {
	Author    *string `json:"author,omitempty"`
	Id        *string `json:"id,omitempty"`
	Name      *string `json:"name,omitempty"`
	Timestamp *int64  `json:"timestamp,omitempty"`
}

// EntityView A JSON object representing the entity view.
type EntityView struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the Entity View creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// EndTimeMs Represents the end time of the interval that is used to limit access to target device telemetry. Customer will not be able to see entity telemetry that is outside the specified interval;
	EndTimeMs *int64               `json:"endTimeMs,omitempty"`
	EntityId  EntityId             `json:"entityId"`
	Id        *EntityViewId        `json:"id,omitempty"`
	Keys      *TelemetryEntityView `json:"keys,omitempty"`

	// Name Entity View name
	Name string `json:"name"`

	// StartTimeMs Represents the start time of the interval that is used to limit access to target device telemetry. Customer will not be able to see entity telemetry that is outside the specified interval;
	StartTimeMs *int64    `json:"startTimeMs,omitempty"`
	TenantId    *TenantId `json:"tenantId,omitempty"`

	// Type Device Profile Name
	Type string `json:"type"`
}

// EntityViewId defines model for EntityViewId.
type EntityViewId struct {
	// EntityType string
	EntityType EntityViewIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// EntityViewIdEntityType string
type EntityViewIdEntityType string

// EntityViewInfo defines model for EntityViewInfo.
type EntityViewInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the Entity View creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// CustomerIsPublic Indicates special 'Public' Customer that is auto-generated to use the entity view on public dashboards.
	CustomerIsPublic *bool `json:"customerIsPublic,omitempty"`

	// CustomerTitle Title of the Customer that owns the entity view.
	CustomerTitle *string `json:"customerTitle,omitempty"`

	// EndTimeMs Represents the end time of the interval that is used to limit access to target device telemetry. Customer will not be able to see entity telemetry that is outside the specified interval;
	EndTimeMs *int64               `json:"endTimeMs,omitempty"`
	EntityId  EntityId             `json:"entityId"`
	Id        *EntityViewId        `json:"id,omitempty"`
	Keys      *TelemetryEntityView `json:"keys,omitempty"`

	// Name Entity View name
	Name string `json:"name"`

	// StartTimeMs Represents the start time of the interval that is used to limit access to target device telemetry. Customer will not be able to see entity telemetry that is outside the specified interval;
	StartTimeMs *int64    `json:"startTimeMs,omitempty"`
	TenantId    *TenantId `json:"tenantId,omitempty"`

	// Type Device Profile Name
	Type string `json:"type"`
}

// EntityViewSearchQuery The entity view search query JSON
type EntityViewSearchQuery struct {
	// EntityViewTypes Array of entity view types to filter the related entities (e.g. 'Temperature Sensor', 'Smoke Sensor').
	EntityViewTypes *[]string                  `json:"entityViewTypes,omitempty"`
	Parameters      *RelationsSearchParameters `json:"parameters,omitempty"`

	// RelationType Type of the relation between root entity and device (e.g. 'Contains' or 'Manages').
	RelationType *string `json:"relationType,omitempty"`
}

// EntityViewSearchQueryFilter defines model for EntityViewSearchQueryFilter.
type EntityViewSearchQueryFilter struct {
	Direction          *EntityViewSearchQueryFilterDirection `json:"direction,omitempty"`
	EntityViewTypes    *[]string                             `json:"entityViewTypes,omitempty"`
	FetchLastLevelOnly *bool                                 `json:"fetchLastLevelOnly,omitempty"`
	MaxLevel           *int32                                `json:"maxLevel,omitempty"`
	RelationType       *string                               `json:"relationType,omitempty"`
	RootEntity         *EntityId                             `json:"rootEntity,omitempty"`
	Type               string                                `json:"type"`
}

// EntityViewSearchQueryFilterDirection defines model for EntityViewSearchQueryFilter.Direction.
type EntityViewSearchQueryFilterDirection string

// EntityViewTypeFilter defines model for EntityViewTypeFilter.
type EntityViewTypeFilter struct {
	EntityViewNameFilter *string `json:"entityViewNameFilter,omitempty"`
	// Deprecated:
	EntityViewType  *string   `json:"entityViewType,omitempty"`
	EntityViewTypes *[]string `json:"entityViewTypes,omitempty"`
	Type            string    `json:"type"`
}

// ErrorEventFilter defines model for ErrorEventFilter.
type ErrorEventFilter struct {
	// ErrorStr The case insensitive 'contains' filter based on error message
	ErrorStr *string `json:"errorStr,omitempty"`

	// EventType String value representing the event type
	EventType ErrorEventFilterEventType `json:"eventType"`

	// Method String value representing the method name when the error happened
	Method   *string `json:"method,omitempty"`
	NotEmpty *bool   `json:"notEmpty,omitempty"`

	// Server String value representing the server name, identifier or ip address where the platform is running
	Server *string `json:"server,omitempty"`
}

// ErrorEventFilterEventType String value representing the event type
type ErrorEventFilterEventType string

// EscalatedNotificationRuleRecipientsConfig defines model for EscalatedNotificationRuleRecipientsConfig.
type EscalatedNotificationRuleRecipientsConfig struct {
	EscalationTable *map[string][]openapi_types.UUID                     `json:"escalationTable,omitempty"`
	TriggerType     EscalatedNotificationRuleRecipientsConfigTriggerType `json:"triggerType"`
}

// EscalatedNotificationRuleRecipientsConfigTriggerType defines model for EscalatedNotificationRuleRecipientsConfig.TriggerType.
type EscalatedNotificationRuleRecipientsConfigTriggerType string

// EventFilter defines model for EventFilter.
type EventFilter struct {
	// EventType String value representing the event type
	EventType EventFilterEventType `json:"eventType"`
	NotEmpty  *bool                `json:"notEmpty,omitempty"`
}

// EventFilterEventType String value representing the event type
type EventFilterEventType string

// EventId defines model for EventId.
type EventId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// EventInfo defines model for EventInfo.
type EventInfo struct {
	// Body A value representing the any type (object or primitive)
	Body *JsonNode `json:"body,omitempty"`

	// CreatedTime Timestamp of the event creation, in milliseconds
	CreatedTime *int64    `json:"createdTime,omitempty"`
	EntityId    *EntityId `json:"entityId,omitempty"`
	Id          *EventId  `json:"id,omitempty"`
	TenantId    *TenantId `json:"tenantId,omitempty"`

	// Type Event type
	Type *string `json:"type,omitempty"`

	// Uid string
	Uid *string `json:"uid,omitempty"`
}

// FeaturesInfo defines model for FeaturesInfo.
type FeaturesInfo struct {
	EmailEnabled        *bool `json:"emailEnabled,omitempty"`
	NotificationEnabled *bool `json:"notificationEnabled,omitempty"`
	OauthEnabled        *bool `json:"oauthEnabled,omitempty"`
	SmsEnabled          *bool `json:"smsEnabled,omitempty"`
	TwoFaEnabled        *bool `json:"twoFaEnabled,omitempty"`
}

// FilterPredicateValueBoolean defines model for FilterPredicateValueBoolean.
type FilterPredicateValueBoolean struct {
	DefaultValue *bool                `json:"defaultValue,omitempty"`
	DynamicValue *DynamicValueBoolean `json:"dynamicValue,omitempty"`
	UserValue    *bool                `json:"userValue,omitempty"`
}

// FilterPredicateValueDouble defines model for FilterPredicateValueDouble.
type FilterPredicateValueDouble struct {
	DefaultValue *float64            `json:"defaultValue,omitempty"`
	DynamicValue *DynamicValueDouble `json:"dynamicValue,omitempty"`
	UserValue    *float64            `json:"userValue,omitempty"`
}

// FilterPredicateValueInteger defines model for FilterPredicateValueInteger.
type FilterPredicateValueInteger struct {
	DefaultValue *int32               `json:"defaultValue,omitempty"`
	DynamicValue *DynamicValueInteger `json:"dynamicValue,omitempty"`
	UserValue    *int32               `json:"userValue,omitempty"`
}

// FilterPredicateValueLong defines model for FilterPredicateValueLong.
type FilterPredicateValueLong struct {
	DefaultValue *int64            `json:"defaultValue,omitempty"`
	DynamicValue *DynamicValueLong `json:"dynamicValue,omitempty"`
	UserValue    *int64            `json:"userValue,omitempty"`
}

// FilterPredicateValueString defines model for FilterPredicateValueString.
type FilterPredicateValueString struct {
	DefaultValue *string             `json:"defaultValue,omitempty"`
	DynamicValue *DynamicValueString `json:"dynamicValue,omitempty"`
	UserValue    *string             `json:"userValue,omitempty"`
}

// HasIdObject defines model for HasIdObject.
type HasIdObject struct {
	Id *interface{} `json:"id,omitempty"`
}

// HomeDashboard defines model for HomeDashboard.
type HomeDashboard struct {
	// AssignedCustomers List of assigned customers with their info.
	AssignedCustomers *[]ShortCustomerInfo `json:"assignedCustomers,omitempty"`

	// Configuration A value representing the any type (object or primitive)
	Configuration *JsonNode `json:"configuration,omitempty"`

	// CreatedTime Timestamp of the dashboard creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// HideDashboardToolbar Hide dashboard toolbar flag. Useful for rendering dashboards on mobile.
	HideDashboardToolbar *bool        `json:"hideDashboardToolbar,omitempty"`
	Id                   *DashboardId `json:"id,omitempty"`

	// Image Thumbnail picture for rendering of the dashboards in a grid view on mobile devices.
	Image *string `json:"image,omitempty"`

	// MobileHide Hide dashboard from mobile devices. Useful if the dashboard is not designed for small screens.
	MobileHide *bool `json:"mobileHide,omitempty"`

	// MobileOrder Order on mobile devices. Useful to adjust sorting of the dashboards for mobile applications
	MobileOrder *int32 `json:"mobileOrder,omitempty"`

	// Name Same as title of the dashboard. Read-only field. Update the 'title' to change the 'name' of the dashboard.
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title Title of the dashboard.
	Title string `json:"title"`
}

// HomeDashboardInfo A JSON object that represents home dashboard id and other parameters
type HomeDashboardInfo struct {
	DashboardId *DashboardId `json:"dashboardId,omitempty"`

	// HideDashboardToolbar Hide dashboard toolbar flag. Useful for rendering dashboards on mobile.
	HideDashboardToolbar *bool `json:"hideDashboardToolbar,omitempty"`
}

// ImageExportData defines model for ImageExportData.
type ImageExportData struct {
	Data              *string `json:"data,omitempty"`
	FileName          *string `json:"fileName,omitempty"`
	IsPublic          *bool   `json:"isPublic,omitempty"`
	MediaType         *string `json:"mediaType,omitempty"`
	Public            *bool   `json:"public,omitempty"`
	PublicResourceKey *string `json:"publicResourceKey,omitempty"`
	ResourceKey       *string `json:"resourceKey,omitempty"`
	Title             *string `json:"title,omitempty"`
}

// IosConfig defines model for IosConfig.
type IosConfig struct {
	AppId     *string `json:"appId,omitempty"`
	Enabled   *bool   `json:"enabled,omitempty"`
	StoreLink *string `json:"storeLink,omitempty"`
}

// JsonNode A value representing the any type (object or primitive)
type JsonNode = interface{}

// JwtPair JWT Pair
type JwtPair struct {
	// RefreshToken The JWT Refresh Token. Used to get new JWT Access Token if old one has expired.
	RefreshToken *string       `json:"refreshToken,omitempty"`
	Scope        *JwtPairScope `json:"scope,omitempty"`

	// Token The JWT Access Token. Used to perform API calls.
	Token *string `json:"token,omitempty"`
}

// JwtPairScope defines model for JwtPair.Scope.
type JwtPairScope string

// JwtSettings A JSON value representing the JWT Settings.
type JwtSettings struct {
	// RefreshTokenExpTime The JWT can be refreshed during seconds.
	RefreshTokenExpTime *int32 `json:"refreshTokenExpTime,omitempty"`

	// TokenExpirationTime The JWT will expire after seconds.
	TokenExpirationTime *int32 `json:"tokenExpirationTime,omitempty"`

	// TokenIssuer The JWT issuer.
	TokenIssuer *string `json:"tokenIssuer,omitempty"`

	// TokenSigningKey The JWT key is used to sing token. Base64 encoded.
	TokenSigningKey *string `json:"tokenSigningKey,omitempty"`
}

// KeyFilter defines model for KeyFilter.
type KeyFilter struct {
	Key       *EntityKey           `json:"key,omitempty"`
	Predicate *KeyFilter_Predicate `json:"predicate,omitempty"`
	ValueType *KeyFilterValueType  `json:"valueType,omitempty"`
}

// KeyFilter_Predicate defines model for KeyFilter.Predicate.
type KeyFilter_Predicate struct {
	union json.RawMessage
}

// KeyFilterValueType defines model for KeyFilter.ValueType.
type KeyFilterValueType string

// KeyFilterPredicate defines model for KeyFilterPredicate.
type KeyFilterPredicate struct {
	Type string `json:"type"`
}

// LastVisitedDashboardInfo defines model for LastVisitedDashboardInfo.
type LastVisitedDashboardInfo struct {
	// Id JSON object with Dashboard id.
	Id *openapi_types.UUID `json:"id,omitempty"`

	// LastVisited Last visit timestamp
	LastVisited *int64 `json:"lastVisited,omitempty"`

	// Starred Starred flag
	Starred *bool `json:"starred,omitempty"`

	// Title Title of the dashboard.
	Title *string `json:"title,omitempty"`
}

// LifeCycleEventFilter defines model for LifeCycleEventFilter.
type LifeCycleEventFilter struct {
	// ErrorStr The case insensitive 'contains' filter based on error message
	ErrorStr *string `json:"errorStr,omitempty"`

	// Event String value representing the lifecycle event type
	Event *string `json:"event,omitempty"`

	// EventType String value representing the event type
	EventType LifeCycleEventFilterEventType `json:"eventType"`
	NotEmpty  *bool                         `json:"notEmpty,omitempty"`

	// Server String value representing the server name, identifier or ip address where the platform is running
	Server *string `json:"server,omitempty"`

	// Status String value representing status of the lifecycle event
	Status *LifeCycleEventFilterStatus `json:"status,omitempty"`
}

// LifeCycleEventFilterEventType String value representing the event type
type LifeCycleEventFilterEventType string

// LifeCycleEventFilterStatus String value representing status of the lifecycle event
type LifeCycleEventFilterStatus string

// LoginRequest defines model for LoginRequest.
type LoginRequest struct {
	// Password User password
	Password string `json:"password"`

	// Username User email
	Username string `json:"username"`
}

// LoginResponse defines model for LoginResponse.
type LoginResponse struct {
	// RefreshToken Refresh token
	RefreshToken string `json:"refreshToken"`

	// Token JWT token
	Token string `json:"token"`
}

// LwM2MBootstrapServerCredential defines model for LwM2MBootstrapServerCredential.
type LwM2MBootstrapServerCredential struct {
	SecurityMode string `json:"securityMode"`
}

// LwM2MServerSecurityConfigDefault defines model for LwM2MServerSecurityConfigDefault.
type LwM2MServerSecurityConfigDefault struct {
	// Binding This Resource defines the transport binding configured for the LwM2M Client. If the LwM2M Client supports the binding specified in this Resource, the LwM2M Client MUST use that transport for the Current Binding Mode.
	Binding *string `json:"binding,omitempty"`

	// BootstrapServerAccountTimeout Bootstrap Server Account Timeout (If the value is set to 0, or if this resource is not instantiated, the Bootstrap-Server Account lifetime is infinite.)
	BootstrapServerAccountTimeout *int32 `json:"bootstrapServerAccountTimeout,omitempty"`

	// BootstrapServerIs Is Bootstrap Server or Lwm2m Server. The LwM2M Client MAY be configured to use one or more LwM2M Server Account(s). The LwM2M Client MUST have at most one LwM2M Bootstrap-Server Account. (*) The LwM2M client MUST have at least one LwM2M server account after completing the boot sequence specified.
	BootstrapServerIs *bool `json:"bootstrapServerIs,omitempty"`

	// ClientHoldOffTime Client Hold Off Time. The number of seconds to wait before initiating a Client Initiated Bootstrap once the LwM2M Client has determined it should initiate this bootstrap mode. (This information is relevant for use with a Bootstrap-Server only.)
	ClientHoldOffTime *int32 `json:"clientHoldOffTime,omitempty"`

	// DefaultMinPeriod The default value the LwM2M Client should use for the Minimum Period of an Observation in the absence of this parameter being included in an Observation. If this Resource doesn’t exist, the default value is 0.
	DefaultMinPeriod *int32 `json:"defaultMinPeriod,omitempty"`

	// Host Host for 'No Security' mode
	Host *string `json:"host,omitempty"`

	// Lifetime Specify the lifetime of the registration in seconds.
	Lifetime *int32 `json:"lifetime,omitempty"`

	// NotifIfDisabled If true, the LwM2M Client stores “Notify” operations to the LwM2M Server while the LwM2M Server account is disabled or the LwM2M Client is offline. After the LwM2M Server account is enabled or the LwM2M Client is online, the LwM2M Client reports the stored “Notify” operations to the Server. If false, the LwM2M Client discards all the “Notify” operations or temporarily disables the Observe function while the LwM2M Server is disabled or the LwM2M Client is offline. The default value is true.
	NotifIfDisabled *bool `json:"notifIfDisabled,omitempty"`

	// Port Port for  Lwm2m Server: 'No Security' mode: Lwm2m Server or Bootstrap Server
	Port *int32 `json:"port,omitempty"`

	// SecurityHost Host for 'Security' mode (DTLS)
	SecurityHost *string `json:"securityHost,omitempty"`

	// SecurityPort Port for 'Security' mode (DTLS): Lwm2m Server or Bootstrap Server
	SecurityPort *int32 `json:"securityPort,omitempty"`

	// ServerCertificate Server Public Key for 'Security' mode (DTLS): X509. Format: base64 encoded
	ServerCertificate *string `json:"serverCertificate,omitempty"`

	// ServerPublicKey Server Public Key for 'Security' mode (DTLS): RPK or X509. Format: base64 encoded
	ServerPublicKey *string `json:"serverPublicKey,omitempty"`

	// ShortServerId Server short Id. Used as link to associate server Object Instance. This identifier uniquely identifies each LwM2M Server configured for the LwM2M Client. This Resource MUST be set when the Bootstrap-Server Resource has a value of 'false'. The values ID:1 and ID:65534 values MUST NOT be used for identifying the LwM2M Server.
	ShortServerId *int32 `json:"shortServerId,omitempty"`
}

// LwM2mInstance defines model for LwM2mInstance.
type LwM2mInstance struct {
	// Id LwM2M Instance id.
	Id *int32 `json:"id,omitempty"`

	// Resources LwM2M Resource observe.
	Resources *[]LwM2mResourceObserve `json:"resources,omitempty"`
}

// LwM2mObject defines model for LwM2mObject.
type LwM2mObject struct {
	// Id LwM2M Object id.
	Id *int32 `json:"id,omitempty"`

	// Instances LwM2M Object instances.
	Instances *[]LwM2mInstance `json:"instances,omitempty"`

	// KeyId LwM2M Object key id.
	KeyId *string `json:"keyId,omitempty"`

	// Mandatory LwM2M Object mandatory.
	Mandatory *bool `json:"mandatory,omitempty"`

	// Multiple LwM2M Object multiple.
	Multiple *bool `json:"multiple,omitempty"`

	// Name LwM2M Object name.
	Name *string `json:"name,omitempty"`
}

// LwM2mResourceObserve defines model for LwM2mResourceObserve.
type LwM2mResourceObserve struct {
	// Attribute LwM2M Resource Observe attribute.
	Attribute *bool `json:"attribute,omitempty"`

	// Id LwM2M Resource Observe id.
	Id *int32 `json:"id,omitempty"`

	// KeyName LwM2M Resource Observe key name.
	KeyName *string `json:"keyName,omitempty"`

	// Name LwM2M Resource Observe name.
	Name *string `json:"name,omitempty"`

	// Observe LwM2M Resource Observe observe.
	Observe *bool `json:"observe,omitempty"`

	// Telemetry LwM2M Resource Observe telemetry.
	Telemetry *bool `json:"telemetry,omitempty"`
}

// LwM2mVersion defines model for LwM2mVersion.
type LwM2mVersion struct {
	Supported *bool `json:"supported,omitempty"`
}

// Lwm2mDeviceProfileTransportConfiguration defines model for Lwm2mDeviceProfileTransportConfiguration.
type Lwm2mDeviceProfileTransportConfiguration struct {
	Bootstrap                   *[]LwM2MBootstrapServerCredential `json:"bootstrap,omitempty"`
	BootstrapServerUpdateEnable *bool                             `json:"bootstrapServerUpdateEnable,omitempty"`
	ClientLwM2mSettings         *OtherConfiguration               `json:"clientLwM2mSettings,omitempty"`
	ObserveAttr                 *TelemetryMappingConfiguration    `json:"observeAttr,omitempty"`
	Type                        string                            `json:"type"`
}

// Lwm2mDeviceTransportConfiguration defines model for Lwm2mDeviceTransportConfiguration.
type Lwm2mDeviceTransportConfiguration struct {
	EdrxCycle                *int64                                      `json:"edrxCycle,omitempty"`
	PagingTransmissionWindow *int64                                      `json:"pagingTransmissionWindow,omitempty"`
	PowerMode                *Lwm2mDeviceTransportConfigurationPowerMode `json:"powerMode,omitempty"`
	PsmActivityTimer         *int64                                      `json:"psmActivityTimer,omitempty"`
	Type                     string                                      `json:"type"`
}

// Lwm2mDeviceTransportConfigurationPowerMode defines model for Lwm2mDeviceTransportConfiguration.PowerMode.
type Lwm2mDeviceTransportConfigurationPowerMode string

// Mapping defines model for Mapping.
type Mapping struct {
	Columns   *[]ColumnMapping `json:"columns,omitempty"`
	Delimiter *string          `json:"delimiter,omitempty"`
	Header    *bool            `json:"header,omitempty"`
	Update    *bool            `json:"update,omitempty"`
}

// MicrosoftTeamsDeliveryMethodNotificationTemplate defines model for MicrosoftTeamsDeliveryMethodNotificationTemplate.
type MicrosoftTeamsDeliveryMethodNotificationTemplate struct {
	Body       string  `json:"body"`
	Button     *Button `json:"button,omitempty"`
	Enabled    *bool   `json:"enabled,omitempty"`
	Method     string  `json:"method"`
	Subject    *string `json:"subject,omitempty"`
	ThemeColor *string `json:"themeColor,omitempty"`
}

// MicrosoftTeamsNotificationTargetConfig defines model for MicrosoftTeamsNotificationTargetConfig.
type MicrosoftTeamsNotificationTargetConfig struct {
	ChannelName *string      `json:"channelName,omitempty"`
	Description *string      `json:"description,omitempty"`
	Email       *string      `json:"email,omitempty"`
	FirstName   *string      `json:"firstName,omitempty"`
	Id          *interface{} `json:"id,omitempty"`
	LastName    *string      `json:"lastName,omitempty"`
	Title       *string      `json:"title,omitempty"`
	Type        string       `json:"type"`
	WebhookUrl  *string      `json:"webhookUrl,omitempty"`
}

// MobileAppDeliveryMethodNotificationTemplate defines model for MobileAppDeliveryMethodNotificationTemplate.
type MobileAppDeliveryMethodNotificationTemplate struct {
	AdditionalConfig *interface{} `json:"additionalConfig,omitempty"`
	Body             string       `json:"body"`
	Enabled          *bool        `json:"enabled,omitempty"`
	Method           string       `json:"method"`
	Subject          *string      `json:"subject,omitempty"`
}

// MobileAppNotificationDeliveryMethodConfig defines model for MobileAppNotificationDeliveryMethodConfig.
type MobileAppNotificationDeliveryMethodConfig struct {
	FirebaseServiceAccountCredentials         *string `json:"firebaseServiceAccountCredentials,omitempty"`
	FirebaseServiceAccountCredentialsFileName *string `json:"firebaseServiceAccountCredentialsFileName,omitempty"`
	Method                                    string  `json:"method"`
}

// MobileAppSettings A JSON value representing the mobile apps configuration
type MobileAppSettings struct {
	AndroidConfig         AndroidConfig        `json:"androidConfig"`
	CreatedTime           *int64               `json:"createdTime,omitempty"`
	DefaultAppStoreLink   *string              `json:"defaultAppStoreLink,omitempty"`
	DefaultGooglePlayLink *string              `json:"defaultGooglePlayLink,omitempty"`
	Id                    *MobileAppSettingsId `json:"id,omitempty"`
	IosConfig             IosConfig            `json:"iosConfig"`
	QrCodeConfig          QRCodeConfig         `json:"qrCodeConfig"`
	TenantId              *TenantId            `json:"tenantId,omitempty"`

	// UseDefaultApp Type of application: true means use default Thingsboard app
	UseDefaultApp bool `json:"useDefaultApp"`
}

// MobileAppSettingsId defines model for MobileAppSettingsId.
type MobileAppSettingsId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// MobileSessionInfo defines model for MobileSessionInfo.
type MobileSessionInfo struct {
	FcmTokenTimestamp *int64 `json:"fcmTokenTimestamp,omitempty"`
}

// MqttDeviceProfileTransportConfiguration defines model for MqttDeviceProfileTransportConfiguration.
type MqttDeviceProfileTransportConfiguration struct {
	DeviceAttributesSubscribeTopic    *string                            `json:"deviceAttributesSubscribeTopic,omitempty"`
	DeviceAttributesTopic             *string                            `json:"deviceAttributesTopic,omitempty"`
	DeviceTelemetryTopic              *string                            `json:"deviceTelemetryTopic,omitempty"`
	SendAckOnValidationException      *bool                              `json:"sendAckOnValidationException,omitempty"`
	Sparkplug                         *bool                              `json:"sparkplug,omitempty"`
	SparkplugAttributesMetricNames    *[]string                          `json:"sparkplugAttributesMetricNames,omitempty"`
	TransportPayloadTypeConfiguration *TransportPayloadTypeConfiguration `json:"transportPayloadTypeConfiguration,omitempty"`
	Type                              string                             `json:"type"`
}

// MqttDeviceTransportConfiguration defines model for MqttDeviceTransportConfiguration.
type MqttDeviceTransportConfiguration = DeviceTransportConfiguration

// NewPlatformVersionNotificationRuleTriggerConfig defines model for NewPlatformVersionNotificationRuleTriggerConfig.
type NewPlatformVersionNotificationRuleTriggerConfig = NotificationRuleTriggerConfig

// NodeConnectionInfo defines model for NodeConnectionInfo.
type NodeConnectionInfo struct {
	// FromIndex Index of rule node in the 'nodes' array of the RuleChainMetaData. Indicates the 'from' part of the connection.
	FromIndex int32 `json:"fromIndex"`

	// ToIndex Index of rule node in the 'nodes' array of the RuleChainMetaData. Indicates the 'to' part of the connection.
	ToIndex int32 `json:"toIndex"`

	// Type Type of the relation. Typically indicated the result of processing by the 'from' rule node. For example, 'Success' or 'Failure'
	Type string `json:"type"`
}

// Notification defines model for Notification.
type Notification struct {
	// AdditionalConfig A value representing the any type (object or primitive)
	AdditionalConfig *JsonNode                   `json:"additionalConfig,omitempty"`
	CreatedTime      *int64                      `json:"createdTime,omitempty"`
	DeliveryMethod   *NotificationDeliveryMethod `json:"deliveryMethod,omitempty"`
	Id               *NotificationId             `json:"id,omitempty"`
	Info             *NotificationInfo           `json:"info,omitempty"`
	RecipientId      *UserId                     `json:"recipientId,omitempty"`
	RequestId        *NotificationRequestId      `json:"requestId,omitempty"`
	Status           *NotificationStatus         `json:"status,omitempty"`
	Subject          *string                     `json:"subject,omitempty"`
	Text             *string                     `json:"text,omitempty"`
	Type             *NotificationType           `json:"type,omitempty"`
}

// NotificationDeliveryMethod defines model for Notification.DeliveryMethod.
type NotificationDeliveryMethod string

// NotificationStatus defines model for Notification.Status.
type NotificationStatus string

// NotificationType defines model for Notification.Type.
type NotificationType string

// NotificationDeliveryMethodConfig defines model for NotificationDeliveryMethodConfig.
type NotificationDeliveryMethodConfig struct {
	Method string `json:"method"`
}

// NotificationId defines model for NotificationId.
type NotificationId struct {
	// EntityType string
	EntityType NotificationIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// NotificationIdEntityType string
type NotificationIdEntityType string

// NotificationInfo defines model for NotificationInfo.
type NotificationInfo struct {
	DashboardId   *DashboardId `json:"dashboardId,omitempty"`
	StateEntityId *EntityId    `json:"stateEntityId,omitempty"`
	Type          string       `json:"type"`
}

// NotificationPref defines model for NotificationPref.
type NotificationPref struct {
	Enabled                *bool           `json:"enabled,omitempty"`
	EnabledDeliveryMethods map[string]bool `json:"enabledDeliveryMethods"`
}

// NotificationRequest defines model for NotificationRequest.
type NotificationRequest struct {
	AdditionalConfig   *NotificationRequestConfig `json:"additionalConfig,omitempty"`
	CreatedTime        *int64                     `json:"createdTime,omitempty"`
	Id                 *NotificationRequestId     `json:"id,omitempty"`
	Info               *NotificationInfo          `json:"info,omitempty"`
	OriginatorEntityId *EntityId                  `json:"originatorEntityId,omitempty"`
	RuleId             *NotificationRuleId        `json:"ruleId,omitempty"`
	Stats              *NotificationRequestStats  `json:"stats,omitempty"`
	Status             *NotificationRequestStatus `json:"status,omitempty"`
	Targets            []openapi_types.UUID       `json:"targets"`
	Template           *NotificationTemplate      `json:"template,omitempty"`
	TemplateId         *NotificationTemplateId    `json:"templateId,omitempty"`
	TenantId           *TenantId                  `json:"tenantId,omitempty"`
}

// NotificationRequestStatus defines model for NotificationRequest.Status.
type NotificationRequestStatus string

// NotificationRequestConfig defines model for NotificationRequestConfig.
type NotificationRequestConfig struct {
	SendingDelayInSec *int32 `json:"sendingDelayInSec,omitempty"`
}

// NotificationRequestId defines model for NotificationRequestId.
type NotificationRequestId struct {
	// EntityType string
	EntityType NotificationRequestIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// NotificationRequestIdEntityType string
type NotificationRequestIdEntityType string

// NotificationRequestInfo defines model for NotificationRequestInfo.
type NotificationRequestInfo struct {
	AdditionalConfig   *NotificationRequestConfig                `json:"additionalConfig,omitempty"`
	CreatedTime        *int64                                    `json:"createdTime,omitempty"`
	DeliveryMethods    *[]NotificationRequestInfoDeliveryMethods `json:"deliveryMethods,omitempty"`
	Id                 *NotificationRequestId                    `json:"id,omitempty"`
	Info               *NotificationInfo                         `json:"info,omitempty"`
	OriginatorEntityId *EntityId                                 `json:"originatorEntityId,omitempty"`
	RuleId             *NotificationRuleId                       `json:"ruleId,omitempty"`
	Stats              *NotificationRequestStats                 `json:"stats,omitempty"`
	Status             *NotificationRequestInfoStatus            `json:"status,omitempty"`
	Targets            []openapi_types.UUID                      `json:"targets"`
	Template           *NotificationTemplate                     `json:"template,omitempty"`
	TemplateId         *NotificationTemplateId                   `json:"templateId,omitempty"`
	TemplateName       *string                                   `json:"templateName,omitempty"`
	TenantId           *TenantId                                 `json:"tenantId,omitempty"`
}

// NotificationRequestInfoDeliveryMethods defines model for NotificationRequestInfo.DeliveryMethods.
type NotificationRequestInfoDeliveryMethods string

// NotificationRequestInfoStatus defines model for NotificationRequestInfo.Status.
type NotificationRequestInfoStatus string

// NotificationRequestPreview defines model for NotificationRequestPreview.
type NotificationRequestPreview struct {
	ProcessedTemplates      *map[string]NotificationRequestPreview_ProcessedTemplates_AdditionalProperties `json:"processedTemplates,omitempty"`
	RecipientsCountByTarget *map[string]int32                                                              `json:"recipientsCountByTarget,omitempty"`
	RecipientsPreview       *[]string                                                                      `json:"recipientsPreview,omitempty"`
	TotalRecipientsCount    *int32                                                                         `json:"totalRecipientsCount,omitempty"`
}

// NotificationRequestPreview_ProcessedTemplates_AdditionalProperties defines model for NotificationRequestPreview.processedTemplates.AdditionalProperties.
type NotificationRequestPreview_ProcessedTemplates_AdditionalProperties struct {
	union json.RawMessage
}

// NotificationRequestStats defines model for NotificationRequestStats.
type NotificationRequestStats struct {
	Error  *string                       `json:"error,omitempty"`
	Errors *map[string]map[string]string `json:"errors,omitempty"`
	Sent   *map[string]struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"sent,omitempty"`
	TotalErrors *struct {
		Acquire      *int32 `json:"acquire,omitempty"`
		AndDecrement *int32 `json:"andDecrement,omitempty"`
		AndIncrement *int32 `json:"andIncrement,omitempty"`
		Opaque       *int32 `json:"opaque,omitempty"`
		Plain        *int32 `json:"plain,omitempty"`
		Release      *int32 `json:"release,omitempty"`
	} `json:"totalErrors,omitempty"`
}

// NotificationRule defines model for NotificationRule.
type NotificationRule struct {
	AdditionalConfig *NotificationRuleConfig           `json:"additionalConfig,omitempty"`
	CreatedTime      *int64                            `json:"createdTime,omitempty"`
	Enabled          *bool                             `json:"enabled,omitempty"`
	Id               *NotificationRuleId               `json:"id,omitempty"`
	Name             string                            `json:"name"`
	RecipientsConfig NotificationRule_RecipientsConfig `json:"recipientsConfig"`
	TemplateId       NotificationTemplateId            `json:"templateId"`
	TenantId         *TenantId                         `json:"tenantId,omitempty"`
	TriggerConfig    NotificationRule_TriggerConfig    `json:"triggerConfig"`
	TriggerType      NotificationRuleTriggerType       `json:"triggerType"`
}

// NotificationRule_RecipientsConfig defines model for NotificationRule.RecipientsConfig.
type NotificationRule_RecipientsConfig struct {
	union json.RawMessage
}

// NotificationRule_TriggerConfig defines model for NotificationRule.TriggerConfig.
type NotificationRule_TriggerConfig struct {
	union json.RawMessage
}

// NotificationRuleTriggerType defines model for NotificationRule.TriggerType.
type NotificationRuleTriggerType string

// NotificationRuleConfig defines model for NotificationRuleConfig.
type NotificationRuleConfig struct {
	Description *string `json:"description,omitempty"`
}

// NotificationRuleId defines model for NotificationRuleId.
type NotificationRuleId struct {
	// EntityType string
	EntityType NotificationRuleIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// NotificationRuleIdEntityType string
type NotificationRuleIdEntityType string

// NotificationRuleInfo defines model for NotificationRuleInfo.
type NotificationRuleInfo struct {
	AdditionalConfig *NotificationRuleConfig                `json:"additionalConfig,omitempty"`
	CreatedTime      *int64                                 `json:"createdTime,omitempty"`
	DeliveryMethods  *[]NotificationRuleInfoDeliveryMethods `json:"deliveryMethods,omitempty"`
	Enabled          *bool                                  `json:"enabled,omitempty"`
	Id               *NotificationRuleId                    `json:"id,omitempty"`
	Name             string                                 `json:"name"`
	RecipientsConfig NotificationRuleInfo_RecipientsConfig  `json:"recipientsConfig"`
	TemplateId       NotificationTemplateId                 `json:"templateId"`
	TemplateName     *string                                `json:"templateName,omitempty"`
	TenantId         *TenantId                              `json:"tenantId,omitempty"`
	TriggerConfig    NotificationRuleInfo_TriggerConfig     `json:"triggerConfig"`
	TriggerType      NotificationRuleInfoTriggerType        `json:"triggerType"`
}

// NotificationRuleInfoDeliveryMethods defines model for NotificationRuleInfo.DeliveryMethods.
type NotificationRuleInfoDeliveryMethods string

// NotificationRuleInfo_RecipientsConfig defines model for NotificationRuleInfo.RecipientsConfig.
type NotificationRuleInfo_RecipientsConfig struct {
	union json.RawMessage
}

// NotificationRuleInfo_TriggerConfig defines model for NotificationRuleInfo.TriggerConfig.
type NotificationRuleInfo_TriggerConfig struct {
	union json.RawMessage
}

// NotificationRuleInfoTriggerType defines model for NotificationRuleInfo.TriggerType.
type NotificationRuleInfoTriggerType string

// NotificationRuleRecipientsConfig defines model for NotificationRuleRecipientsConfig.
type NotificationRuleRecipientsConfig struct {
	TriggerType NotificationRuleRecipientsConfigTriggerType `json:"triggerType"`
}

// NotificationRuleRecipientsConfigTriggerType defines model for NotificationRuleRecipientsConfig.TriggerType.
type NotificationRuleRecipientsConfigTriggerType string

// NotificationRuleTriggerConfig defines model for NotificationRuleTriggerConfig.
type NotificationRuleTriggerConfig struct {
	TriggerType *NotificationRuleTriggerConfigTriggerType `json:"triggerType,omitempty"`
}

// NotificationRuleTriggerConfigTriggerType defines model for NotificationRuleTriggerConfig.TriggerType.
type NotificationRuleTriggerConfigTriggerType string

// NotificationSettings defines model for NotificationSettings.
type NotificationSettings struct {
	DeliveryMethodsConfigs map[string]NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties `json:"deliveryMethodsConfigs"`
}

// NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties defines model for NotificationSettings.deliveryMethodsConfigs.AdditionalProperties.
type NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties struct {
	union json.RawMessage
}

// NotificationTarget defines model for NotificationTarget.
type NotificationTarget struct {
	Configuration NotificationTarget_Configuration `json:"configuration"`
	CreatedTime   *int64                           `json:"createdTime,omitempty"`
	Id            *NotificationTargetId            `json:"id,omitempty"`
	Name          string                           `json:"name"`
	TenantId      *TenantId                        `json:"tenantId,omitempty"`
}

// NotificationTarget_Configuration defines model for NotificationTarget.Configuration.
type NotificationTarget_Configuration struct {
	union json.RawMessage
}

// NotificationTargetConfig defines model for NotificationTargetConfig.
type NotificationTargetConfig struct {
	Description *string `json:"description,omitempty"`
	Type        string  `json:"type"`
}

// NotificationTargetId defines model for NotificationTargetId.
type NotificationTargetId struct {
	// EntityType string
	EntityType NotificationTargetIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// NotificationTargetIdEntityType string
type NotificationTargetIdEntityType string

// NotificationTemplate defines model for NotificationTemplate.
type NotificationTemplate struct {
	Configuration    NotificationTemplateConfig           `json:"configuration"`
	CreatedTime      *int64                               `json:"createdTime,omitempty"`
	Id               *NotificationTemplateId              `json:"id,omitempty"`
	Name             string                               `json:"name"`
	NotificationType NotificationTemplateNotificationType `json:"notificationType"`
	TenantId         *TenantId                            `json:"tenantId,omitempty"`
}

// NotificationTemplateNotificationType defines model for NotificationTemplate.NotificationType.
type NotificationTemplateNotificationType string

// NotificationTemplateConfig defines model for NotificationTemplateConfig.
type NotificationTemplateConfig struct {
	DeliveryMethodsTemplates map[string]NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties `json:"deliveryMethodsTemplates"`
}

// NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties defines model for NotificationTemplateConfig.deliveryMethodsTemplates.AdditionalProperties.
type NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties struct {
	union json.RawMessage
}

// NotificationTemplateId defines model for NotificationTemplateId.
type NotificationTemplateId struct {
	// EntityType string
	EntityType NotificationTemplateIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// NotificationTemplateIdEntityType string
type NotificationTemplateIdEntityType string

// NumericFilterPredicate defines model for NumericFilterPredicate.
type NumericFilterPredicate struct {
	Operation *NumericFilterPredicateOperation `json:"operation,omitempty"`
	Type      string                           `json:"type"`
	Value     *FilterPredicateValueDouble      `json:"value,omitempty"`
}

// NumericFilterPredicateOperation defines model for NumericFilterPredicate.Operation.
type NumericFilterPredicateOperation string

// OAuth2BasicMapperConfig defines model for OAuth2BasicMapperConfig.
type OAuth2BasicMapperConfig struct {
	// AlwaysFullScreen Whether default dashboard should be open in full screen
	AlwaysFullScreen *bool `json:"alwaysFullScreen,omitempty"`

	// CustomerNamePattern Customer name pattern. When creating a user on the first OAuth2 log in, if specified, customer name will be used to create or find existing customer in the platform and assign customerId to the user
	CustomerNamePattern *string `json:"customerNamePattern,omitempty"`

	// DefaultDashboardName Name of the tenant's dashboard to set as default dashboard for newly created user
	DefaultDashboardName *string `json:"defaultDashboardName,omitempty"`

	// EmailAttributeKey Email attribute key of OAuth2 principal attributes. Must be specified for BASIC mapper type and cannot be specified for GITHUB type
	EmailAttributeKey *string `json:"emailAttributeKey,omitempty"`

	// FirstNameAttributeKey First name attribute key
	FirstNameAttributeKey *string `json:"firstNameAttributeKey,omitempty"`

	// LastNameAttributeKey Last name attribute key
	LastNameAttributeKey *string `json:"lastNameAttributeKey,omitempty"`

	// TenantNamePattern Tenant name pattern for CUSTOM naming strategy. OAuth2 attributes in the pattern can be used by enclosing attribute key in '%{' and '}'
	TenantNamePattern *string `json:"tenantNamePattern,omitempty"`

	// TenantNameStrategy Tenant naming strategy. For DOMAIN type, domain for tenant name will be taken from the email (substring before '@')
	TenantNameStrategy OAuth2BasicMapperConfigTenantNameStrategy `json:"tenantNameStrategy"`
}

// OAuth2BasicMapperConfigTenantNameStrategy Tenant naming strategy. For DOMAIN type, domain for tenant name will be taken from the email (substring before '@')
type OAuth2BasicMapperConfigTenantNameStrategy string

// OAuth2ClientInfo defines model for OAuth2ClientInfo.
type OAuth2ClientInfo struct {
	// Icon Name of the icon, displayed on OAuth2 log in button
	Icon *string `json:"icon,omitempty"`

	// Name OAuth2 client name
	Name *string `json:"name,omitempty"`

	// Url URI for OAuth2 log in. On HTTP GET request to this URI, it redirects to the OAuth2 provider page
	Url *string `json:"url,omitempty"`
}

// OAuth2ClientRegistrationTemplate defines model for OAuth2ClientRegistrationTemplate.
type OAuth2ClientRegistrationTemplate struct {
	// AccessTokenUri Default access token URI of the OAuth2 provider
	AccessTokenUri *string `json:"accessTokenUri,omitempty"`

	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// AuthorizationUri Default authorization URI of the OAuth2 provider
	AuthorizationUri *string `json:"authorizationUri,omitempty"`

	// ClientAuthenticationMethod Default client authentication method to use: 'BASIC' or 'POST'
	ClientAuthenticationMethod *string `json:"clientAuthenticationMethod,omitempty"`

	// Comment Comment for OAuth2 provider
	Comment     *string `json:"comment,omitempty"`
	CreatedTime *int64  `json:"createdTime,omitempty"`

	// HelpLink Help link for OAuth2 provider
	HelpLink *string                             `json:"helpLink,omitempty"`
	Id       *OAuth2ClientRegistrationTemplateId `json:"id,omitempty"`

	// JwkSetUri Default JSON Web Key URI of the OAuth2 provider
	JwkSetUri *string `json:"jwkSetUri,omitempty"`

	// LoginButtonIcon Default log in button icon for OAuth2 provider
	LoginButtonIcon *string `json:"loginButtonIcon,omitempty"`

	// LoginButtonLabel Default OAuth2 provider label
	LoginButtonLabel *string             `json:"loginButtonLabel,omitempty"`
	MapperConfig     *OAuth2MapperConfig `json:"mapperConfig,omitempty"`
	Name             *string             `json:"name,omitempty"`

	// ProviderId OAuth2 provider identifier (e.g. its name)
	ProviderId string `json:"providerId"`

	// Scope Default OAuth scopes that will be requested from OAuth2 platform
	Scope *[]string `json:"scope,omitempty"`

	// UserInfoUri Default user info URI of the OAuth2 provider
	UserInfoUri *string `json:"userInfoUri,omitempty"`

	// UserNameAttributeName Default name of the username attribute in OAuth2 provider log in response
	UserNameAttributeName *string `json:"userNameAttributeName,omitempty"`
}

// OAuth2ClientRegistrationTemplateId defines model for OAuth2ClientRegistrationTemplateId.
type OAuth2ClientRegistrationTemplateId struct {
	// Id string
	Id openapi_types.UUID `json:"id"`
}

// OAuth2CustomMapperConfig defines model for OAuth2CustomMapperConfig.
type OAuth2CustomMapperConfig struct {
	Password  *string `json:"password,omitempty"`
	SendToken *bool   `json:"sendToken,omitempty"`
	Url       *string `json:"url,omitempty"`
	Username  *string `json:"username,omitempty"`
}

// OAuth2DomainInfo defines model for OAuth2DomainInfo.
type OAuth2DomainInfo struct {
	// Name Domain name. Cannot be empty
	Name string `json:"name"`

	// Scheme Domain scheme. Mixed scheme means than both HTTP and HTTPS are going to be used
	Scheme OAuth2DomainInfoScheme `json:"scheme"`
}

// OAuth2DomainInfoScheme Domain scheme. Mixed scheme means than both HTTP and HTTPS are going to be used
type OAuth2DomainInfoScheme string

// OAuth2Info defines model for OAuth2Info.
type OAuth2Info struct {
	// EdgeEnabled Whether OAuth2 settings are enabled on Edge or not
	EdgeEnabled *bool `json:"edgeEnabled,omitempty"`

	// Enabled Whether OAuth2 settings are enabled or not
	Enabled *bool `json:"enabled,omitempty"`

	// Oauth2ParamsInfos List of configured OAuth2 clients. Cannot contain null values
	Oauth2ParamsInfos []OAuth2ParamsInfo `json:"oauth2ParamsInfos"`
}

// OAuth2MapperConfig defines model for OAuth2MapperConfig.
type OAuth2MapperConfig struct {
	// ActivateUser Whether user credentials should be activated when user is created after successful authentication
	ActivateUser *bool `json:"activateUser,omitempty"`

	// AllowUserCreation Whether user should be created if not yet present on the platform after successful authentication
	AllowUserCreation *bool                     `json:"allowUserCreation,omitempty"`
	Basic             *OAuth2BasicMapperConfig  `json:"basic,omitempty"`
	Custom            *OAuth2CustomMapperConfig `json:"custom,omitempty"`

	// Type Type of OAuth2 mapper. Depending on this param, different mapper config fields must be specified
	Type OAuth2MapperConfigType `json:"type"`
}

// OAuth2MapperConfigType Type of OAuth2 mapper. Depending on this param, different mapper config fields must be specified
type OAuth2MapperConfigType string

// OAuth2MobileInfo defines model for OAuth2MobileInfo.
type OAuth2MobileInfo struct {
	// AppSecret Application secret. The length must be at least 16 characters
	AppSecret string `json:"appSecret"`

	// PkgName Application package name. Cannot be empty
	PkgName string `json:"pkgName"`
}

// OAuth2ParamsInfo defines model for OAuth2ParamsInfo.
type OAuth2ParamsInfo struct {
	// ClientRegistrations List of OAuth2 provider settings. Cannot be empty
	ClientRegistrations []OAuth2RegistrationInfo `json:"clientRegistrations"`

	// DomainInfos List of configured domains where OAuth2 platform will redirect a user after successful authentication. Cannot be empty. There have to be only one domain with specific name with scheme type 'MIXED'. Configured domains with the same name must have different scheme types
	DomainInfos []OAuth2DomainInfo `json:"domainInfos"`

	// MobileInfos Mobile applications settings. Application package name must be unique within the list
	MobileInfos []OAuth2MobileInfo `json:"mobileInfos"`
}

// OAuth2RegistrationInfo defines model for OAuth2RegistrationInfo.
type OAuth2RegistrationInfo struct {
	// AccessTokenUri Access token URI of the OAuth2 provider. Cannot be empty
	AccessTokenUri string `json:"accessTokenUri"`

	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo JsonNode `json:"additionalInfo"`

	// AuthorizationUri Authorization URI of the OAuth2 provider. Cannot be empty
	AuthorizationUri string `json:"authorizationUri"`

	// ClientAuthenticationMethod Client authentication method to use: 'BASIC' or 'POST'. Cannot be empty
	ClientAuthenticationMethod string `json:"clientAuthenticationMethod"`

	// ClientId OAuth2 client ID. Cannot be empty
	ClientId string `json:"clientId"`

	// ClientSecret OAuth2 client secret. Cannot be empty
	ClientSecret string `json:"clientSecret"`

	// JwkSetUri JSON Web Key URI of the OAuth2 provider
	JwkSetUri *string `json:"jwkSetUri,omitempty"`

	// LoginButtonIcon Log in button icon for OAuth2 provider
	LoginButtonIcon *string `json:"loginButtonIcon,omitempty"`

	// LoginButtonLabel OAuth2 provider label. Cannot be empty
	LoginButtonLabel string             `json:"loginButtonLabel"`
	MapperConfig     OAuth2MapperConfig `json:"mapperConfig"`

	// Platforms List of platforms for which usage of the OAuth2 client is allowed (empty for all allowed)
	Platforms *[]OAuth2RegistrationInfoPlatforms `json:"platforms,omitempty"`

	// Scope OAuth scopes that will be requested from OAuth2 platform. Cannot be empty
	Scope []string `json:"scope"`

	// UserInfoUri User info URI of the OAuth2 provider
	UserInfoUri *string `json:"userInfoUri,omitempty"`

	// UserNameAttributeName Name of the username attribute in OAuth2 provider response. Cannot be empty
	UserNameAttributeName *string `json:"userNameAttributeName,omitempty"`
}

// OAuth2RegistrationInfoPlatforms defines model for OAuth2RegistrationInfo.Platforms.
type OAuth2RegistrationInfoPlatforms string

// ObjectAttributes defines model for ObjectAttributes.
type ObjectAttributes struct {
	Dim   *int64        `json:"dim,omitempty"`
	Epmax *int64        `json:"epmax,omitempty"`
	Epmin *int64        `json:"epmin,omitempty"`
	Gt    *float64      `json:"gt,omitempty"`
	Lt    *float64      `json:"lt,omitempty"`
	Lwm2m *LwM2mVersion `json:"lwm2m,omitempty"`
	Pmax  *int64        `json:"pmax,omitempty"`
	Pmin  *int64        `json:"pmin,omitempty"`
	Ssid  *int64        `json:"ssid,omitempty"`
	St    *float64      `json:"st,omitempty"`
	Uri   *string       `json:"uri,omitempty"`
	Ver   *interface{}  `json:"ver,omitempty"`
}

// OtaPackageId defines model for OtaPackageId.
type OtaPackageId struct {
	// EntityType string
	EntityType OtaPackageIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// OtaPackageIdEntityType string
type OtaPackageIdEntityType string

// OtaPackageInfo defines model for OtaPackageInfo.
type OtaPackageInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Checksum OTA Package checksum.
	Checksum *string `json:"checksum,omitempty"`

	// ChecksumAlgorithm OTA Package checksum algorithm.
	ChecksumAlgorithm *OtaPackageInfoChecksumAlgorithm `json:"checksumAlgorithm,omitempty"`

	// ContentType OTA Package content type.
	ContentType *string `json:"contentType,omitempty"`

	// CreatedTime Timestamp of the ota package creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// DataSize OTA Package data size.
	DataSize        *int64           `json:"dataSize,omitempty"`
	DeviceProfileId *DeviceProfileId `json:"deviceProfileId,omitempty"`

	// FileName OTA Package file name.
	FileName *string `json:"fileName,omitempty"`

	// HasData Indicates OTA Package 'has data'. Field is returned from DB ('true' if data exists or url is set).  If OTA Package 'has data' is 'false' we can not assign the OTA Package to the Device or Device Profile.
	HasData *bool         `json:"hasData,omitempty"`
	Id      *OtaPackageId `json:"id,omitempty"`

	// Tag OTA Package tag.
	Tag      *string   `json:"tag,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title OTA Package title.
	Title *string `json:"title,omitempty"`

	// Type OTA Package type.
	Type *OtaPackageInfoType `json:"type,omitempty"`

	// Url OTA Package url.
	Url *string `json:"url,omitempty"`

	// Version OTA Package version.
	Version *string `json:"version,omitempty"`
}

// OtaPackageInfoChecksumAlgorithm OTA Package checksum algorithm.
type OtaPackageInfoChecksumAlgorithm string

// OtaPackageInfoType OTA Package type.
type OtaPackageInfoType string

// OtherConfiguration defines model for OtherConfiguration.
type OtherConfiguration struct {
	ClientOnlyObserveAfterConnect *int32                       `json:"clientOnlyObserveAfterConnect,omitempty"`
	DefaultObjectIDVer            *string                      `json:"defaultObjectIDVer,omitempty"`
	EdrxCycle                     *int64                       `json:"edrxCycle,omitempty"`
	FwUpdateResource              *string                      `json:"fwUpdateResource,omitempty"`
	FwUpdateStrategy              *int32                       `json:"fwUpdateStrategy,omitempty"`
	PagingTransmissionWindow      *int64                       `json:"pagingTransmissionWindow,omitempty"`
	PowerMode                     *OtherConfigurationPowerMode `json:"powerMode,omitempty"`
	PsmActivityTimer              *int64                       `json:"psmActivityTimer,omitempty"`
	SwUpdateResource              *string                      `json:"swUpdateResource,omitempty"`
	SwUpdateStrategy              *int32                       `json:"swUpdateStrategy,omitempty"`
}

// OtherConfigurationPowerMode defines model for OtherConfiguration.PowerMode.
type OtherConfigurationPowerMode string

// PageDataAlarmCommentInfo defines model for PageDataAlarmCommentInfo.
type PageDataAlarmCommentInfo struct {
	// Data Array of the entities
	Data *[]AlarmCommentInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAlarmData defines model for PageDataAlarmData.
type PageDataAlarmData struct {
	// Data Array of the entities
	Data *[]AlarmData `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAlarmInfo defines model for PageDataAlarmInfo.
type PageDataAlarmInfo struct {
	// Data Array of the entities
	Data *[]AlarmInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAsset defines model for PageDataAsset.
type PageDataAsset struct {
	// Data Array of the entities
	Data *[]Asset `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAssetInfo defines model for PageDataAssetInfo.
type PageDataAssetInfo struct {
	// Data Array of the entities
	Data *[]AssetInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAssetProfile defines model for PageDataAssetProfile.
type PageDataAssetProfile struct {
	// Data Array of the entities
	Data *[]AssetProfile `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAssetProfileInfo defines model for PageDataAssetProfileInfo.
type PageDataAssetProfileInfo struct {
	// Data Array of the entities
	Data *[]AssetProfileInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataAuditLog defines model for PageDataAuditLog.
type PageDataAuditLog struct {
	// Data Array of the entities
	Data *[]AuditLog `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataCustomer defines model for PageDataCustomer.
type PageDataCustomer struct {
	// Data Array of the entities
	Data *[]Customer `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataDashboardInfo defines model for PageDataDashboardInfo.
type PageDataDashboardInfo struct {
	// Data Array of the entities
	Data *[]DashboardInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataDevice defines model for PageDataDevice.
type PageDataDevice struct {
	// Data Array of the entities
	Data *[]Device `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataDeviceInfo defines model for PageDataDeviceInfo.
type PageDataDeviceInfo struct {
	// Data Array of the entities
	Data *[]DeviceInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataDeviceProfile defines model for PageDataDeviceProfile.
type PageDataDeviceProfile struct {
	// Data Array of the entities
	Data *[]DeviceProfile `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataDeviceProfileInfo defines model for PageDataDeviceProfileInfo.
type PageDataDeviceProfileInfo struct {
	// Data Array of the entities
	Data *[]DeviceProfileInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEdge defines model for PageDataEdge.
type PageDataEdge struct {
	// Data Array of the entities
	Data *[]Edge `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEdgeEvent defines model for PageDataEdgeEvent.
type PageDataEdgeEvent struct {
	// Data Array of the entities
	Data *[]EdgeEvent `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEdgeInfo defines model for PageDataEdgeInfo.
type PageDataEdgeInfo struct {
	// Data Array of the entities
	Data *[]EdgeInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntityData defines model for PageDataEntityData.
type PageDataEntityData struct {
	// Data Array of the entities
	Data *[]EntityData `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntityInfo defines model for PageDataEntityInfo.
type PageDataEntityInfo struct {
	// Data Array of the entities
	Data *[]EntityInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntitySubtype defines model for PageDataEntitySubtype.
type PageDataEntitySubtype struct {
	// Data Array of the entities
	Data *[]EntitySubtype `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntityVersion defines model for PageDataEntityVersion.
type PageDataEntityVersion struct {
	// Data Array of the entities
	Data *[]EntityVersion `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntityView defines model for PageDataEntityView.
type PageDataEntityView struct {
	// Data Array of the entities
	Data *[]EntityView `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEntityViewInfo defines model for PageDataEntityViewInfo.
type PageDataEntityViewInfo struct {
	// Data Array of the entities
	Data *[]EntityViewInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataEventInfo defines model for PageDataEventInfo.
type PageDataEventInfo struct {
	// Data Array of the entities
	Data *[]EventInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataNotification defines model for PageDataNotification.
type PageDataNotification struct {
	// Data Array of the entities
	Data *[]Notification `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataNotificationRequestInfo defines model for PageDataNotificationRequestInfo.
type PageDataNotificationRequestInfo struct {
	// Data Array of the entities
	Data *[]NotificationRequestInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataNotificationRuleInfo defines model for PageDataNotificationRuleInfo.
type PageDataNotificationRuleInfo struct {
	// Data Array of the entities
	Data *[]NotificationRuleInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataNotificationTarget defines model for PageDataNotificationTarget.
type PageDataNotificationTarget struct {
	// Data Array of the entities
	Data *[]NotificationTarget `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataNotificationTemplate defines model for PageDataNotificationTemplate.
type PageDataNotificationTemplate struct {
	// Data Array of the entities
	Data *[]NotificationTemplate `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataOtaPackageInfo defines model for PageDataOtaPackageInfo.
type PageDataOtaPackageInfo struct {
	// Data Array of the entities
	Data *[]OtaPackageInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataRuleChain defines model for PageDataRuleChain.
type PageDataRuleChain struct {
	// Data Array of the entities
	Data *[]RuleChain `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataTbResourceInfo defines model for PageDataTbResourceInfo.
type PageDataTbResourceInfo struct {
	// Data Array of the entities
	Data *[]TbResourceInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataTenant defines model for PageDataTenant.
type PageDataTenant struct {
	// Data Array of the entities
	Data *[]Tenant `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataTenantInfo defines model for PageDataTenantInfo.
type PageDataTenantInfo struct {
	// Data Array of the entities
	Data *[]TenantInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataTenantProfile defines model for PageDataTenantProfile.
type PageDataTenantProfile struct {
	// Data Array of the entities
	Data *[]TenantProfile `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataUser defines model for PageDataUser.
type PageDataUser struct {
	// Data Array of the entities
	Data *[]User `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataUserEmailInfo defines model for PageDataUserEmailInfo.
type PageDataUserEmailInfo struct {
	// Data Array of the entities
	Data *[]UserEmailInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataWidgetTypeInfo defines model for PageDataWidgetTypeInfo.
type PageDataWidgetTypeInfo struct {
	// Data Array of the entities
	Data *[]WidgetTypeInfo `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PageDataWidgetsBundle defines model for PageDataWidgetsBundle.
type PageDataWidgetsBundle struct {
	// Data Array of the entities
	Data *[]WidgetsBundle `json:"data,omitempty"`

	// HasNext 'false' value indicates the end of the result set
	HasNext *bool `json:"hasNext,omitempty"`

	// TotalElements Total number of elements in all available pages
	TotalElements *int64 `json:"totalElements,omitempty"`

	// TotalPages Total number of available pages. Calculated based on the 'pageSize' request parameter and total number of entities that match search criteria
	TotalPages *int32 `json:"totalPages,omitempty"`
}

// PlatformTwoFaSettings Settings value
type PlatformTwoFaSettings struct {
	MaxVerificationFailuresBeforeUserLockout *int32                                 `json:"maxVerificationFailuresBeforeUserLockout,omitempty"`
	MinVerificationCodeSendPeriod            int32                                  `json:"minVerificationCodeSendPeriod"`
	Providers                                []PlatformTwoFaSettings_Providers_Item `json:"providers"`
	TotalAllowedTimeForVerification          int32                                  `json:"totalAllowedTimeForVerification"`
	VerificationCodeCheckRateLimit           *string                                `json:"verificationCodeCheckRateLimit,omitempty"`
}

// PlatformTwoFaSettings_Providers_Item defines model for PlatformTwoFaSettings.providers.Item.
type PlatformTwoFaSettings_Providers_Item struct {
	union json.RawMessage
}

// PlatformUsersNotificationTargetConfig defines model for PlatformUsersNotificationTargetConfig.
type PlatformUsersNotificationTargetConfig struct {
	Description *string      `json:"description,omitempty"`
	Type        string       `json:"type"`
	UsersFilter *UsersFilter `json:"usersFilter,omitempty"`
}

// PowerSavingConfiguration defines model for PowerSavingConfiguration.
type PowerSavingConfiguration struct {
	EdrxCycle                *int64                             `json:"edrxCycle,omitempty"`
	PagingTransmissionWindow *int64                             `json:"pagingTransmissionWindow,omitempty"`
	PowerMode                *PowerSavingConfigurationPowerMode `json:"powerMode,omitempty"`
	PsmActivityTimer         *int64                             `json:"psmActivityTimer,omitempty"`
}

// PowerSavingConfigurationPowerMode defines model for PowerSavingConfiguration.PowerMode.
type PowerSavingConfigurationPowerMode string

// ProcessingStrategy defines model for ProcessingStrategy.
type ProcessingStrategy struct {
	FailurePercentage      *float64                `json:"failurePercentage,omitempty"`
	MaxPauseBetweenRetries *int64                  `json:"maxPauseBetweenRetries,omitempty"`
	PauseBetweenRetries    *int64                  `json:"pauseBetweenRetries,omitempty"`
	Retries                *int32                  `json:"retries,omitempty"`
	Type                   *ProcessingStrategyType `json:"type,omitempty"`
}

// ProcessingStrategyType defines model for ProcessingStrategy.Type.
type ProcessingStrategyType string

// QRCodeConfig defines model for QRCodeConfig.
type QRCodeConfig struct {
	BadgeEnabled       *bool                      `json:"badgeEnabled,omitempty"`
	BadgePosition      *QRCodeConfigBadgePosition `json:"badgePosition,omitempty"`
	QrCodeLabel        *string                    `json:"qrCodeLabel,omitempty"`
	QrCodeLabelEnabled *bool                      `json:"qrCodeLabelEnabled,omitempty"`
	ShowOnHomePage     *bool                      `json:"showOnHomePage,omitempty"`
}

// QRCodeConfigBadgePosition defines model for QRCodeConfig.BadgePosition.
type QRCodeConfigBadgePosition string

// Queue A JSON value representing the queue.
type Queue struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo        *JsonNode           `json:"additionalInfo,omitempty"`
	ConsumerPerPartition  *bool               `json:"consumerPerPartition,omitempty"`
	CreatedTime           *int64              `json:"createdTime,omitempty"`
	Id                    *QueueId            `json:"id,omitempty"`
	Name                  *string             `json:"name,omitempty"`
	PackProcessingTimeout *int64              `json:"packProcessingTimeout,omitempty"`
	Partitions            *int32              `json:"partitions,omitempty"`
	PollInterval          *int32              `json:"pollInterval,omitempty"`
	ProcessingStrategy    *ProcessingStrategy `json:"processingStrategy,omitempty"`
	SubmitStrategy        *SubmitStrategy     `json:"submitStrategy,omitempty"`
	TenantId              *TenantId           `json:"tenantId,omitempty"`
	Topic                 *string             `json:"topic,omitempty"`
}

// QueueId defines model for QueueId.
type QueueId struct {
	// EntityType string
	EntityType QueueIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// QueueIdEntityType string
type QueueIdEntityType string

// QueueStats defines model for QueueStats.
type QueueStats struct {
	CreatedTime *int64        `json:"createdTime,omitempty"`
	Id          *QueueStatsId `json:"id,omitempty"`
	QueueName   *string       `json:"queueName,omitempty"`
	ServiceId   *string       `json:"serviceId,omitempty"`
	TenantId    *TenantId     `json:"tenantId,omitempty"`
}

// QueueStatsId defines model for QueueStatsId.
type QueueStatsId struct {
	// EntityType string
	EntityType QueueStatsIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// QueueStatsIdEntityType string
type QueueStatsIdEntityType string

// RateLimitsNotificationRuleTriggerConfig defines model for RateLimitsNotificationRuleTriggerConfig.
type RateLimitsNotificationRuleTriggerConfig struct {
	Apis        *[]RateLimitsNotificationRuleTriggerConfigApis      `json:"apis,omitempty"`
	TriggerType *RateLimitsNotificationRuleTriggerConfigTriggerType `json:"triggerType,omitempty"`
}

// RateLimitsNotificationRuleTriggerConfigApis defines model for RateLimitsNotificationRuleTriggerConfig.Apis.
type RateLimitsNotificationRuleTriggerConfigApis string

// RateLimitsNotificationRuleTriggerConfigTriggerType defines model for RateLimitsNotificationRuleTriggerConfig.TriggerType.
type RateLimitsNotificationRuleTriggerConfigTriggerType string

// RelationEntityTypeFilter defines model for RelationEntityTypeFilter.
type RelationEntityTypeFilter struct {
	// EntityTypes Array of entity types to filter the related entities (e.g. 'DEVICE', 'ASSET').
	EntityTypes *[]RelationEntityTypeFilterEntityTypes `json:"entityTypes,omitempty"`

	// Negate Negate relation type between root entity and other entity.
	Negate *bool `json:"negate,omitempty"`

	// RelationType Type of the relation between root entity and other entity (e.g. 'Contains' or 'Manages').
	RelationType *string `json:"relationType,omitempty"`
}

// RelationEntityTypeFilterEntityTypes defines model for RelationEntityTypeFilter.EntityTypes.
type RelationEntityTypeFilterEntityTypes string

// RelationsQueryFilter defines model for RelationsQueryFilter.
type RelationsQueryFilter struct {
	Direction             *RelationsQueryFilterDirection             `json:"direction,omitempty"`
	FetchLastLevelOnly    *bool                                      `json:"fetchLastLevelOnly,omitempty"`
	Filters               *[]RelationEntityTypeFilter                `json:"filters,omitempty"`
	MaxLevel              *int32                                     `json:"maxLevel,omitempty"`
	MultiRoot             *bool                                      `json:"multiRoot,omitempty"`
	MultiRootEntitiesType *RelationsQueryFilterMultiRootEntitiesType `json:"multiRootEntitiesType,omitempty"`
	MultiRootEntityIds    *[]string                                  `json:"multiRootEntityIds,omitempty"`
	Negate                *bool                                      `json:"negate,omitempty"`
	RootEntity            *EntityId                                  `json:"rootEntity,omitempty"`
	Type                  string                                     `json:"type"`
}

// RelationsQueryFilterDirection defines model for RelationsQueryFilter.Direction.
type RelationsQueryFilterDirection string

// RelationsQueryFilterMultiRootEntitiesType defines model for RelationsQueryFilter.MultiRootEntitiesType.
type RelationsQueryFilterMultiRootEntitiesType string

// RelationsSearchParameters defines model for RelationsSearchParameters.
type RelationsSearchParameters struct {
	// Direction Type of the root entity.
	Direction *RelationsSearchParametersDirection `json:"direction,omitempty"`

	// FetchLastLevelOnly Fetch entities that match the last level of search. Useful to find Devices that are strictly 'maxLevel' relations away from the root entity.
	FetchLastLevelOnly *bool `json:"fetchLastLevelOnly,omitempty"`

	// MaxLevel Maximum level of the search depth.
	MaxLevel *int32 `json:"maxLevel,omitempty"`

	// RelationTypeGroup Type of the relation.
	RelationTypeGroup *RelationsSearchParametersRelationTypeGroup `json:"relationTypeGroup,omitempty"`

	// RootId Root entity id to start search from.
	RootId *openapi_types.UUID `json:"rootId,omitempty"`

	// RootType Type of the root entity.
	RootType *RelationsSearchParametersRootType `json:"rootType,omitempty"`
}

// RelationsSearchParametersDirection Type of the root entity.
type RelationsSearchParametersDirection string

// RelationsSearchParametersRelationTypeGroup Type of the relation.
type RelationsSearchParametersRelationTypeGroup string

// RelationsSearchParametersRootType Type of the root entity.
type RelationsSearchParametersRootType string

// RepeatingAlarmConditionSpec defines model for RepeatingAlarmConditionSpec.
type RepeatingAlarmConditionSpec struct {
	Predicate *FilterPredicateValueInteger `json:"predicate,omitempty"`
	Type      string                       `json:"type"`
}

// RepositorySettings A JSON value representing the Repository Settings.
type RepositorySettings struct {
	AuthMethod         *RepositorySettingsAuthMethod `json:"authMethod,omitempty"`
	DefaultBranch      *string                       `json:"defaultBranch,omitempty"`
	Password           *string                       `json:"password,omitempty"`
	PrivateKey         *string                       `json:"privateKey,omitempty"`
	PrivateKeyFileName *string                       `json:"privateKeyFileName,omitempty"`
	PrivateKeyPassword *string                       `json:"privateKeyPassword,omitempty"`
	ReadOnly           *bool                         `json:"readOnly,omitempty"`
	RepositoryUri      *string                       `json:"repositoryUri,omitempty"`
	ShowMergeCommits   *bool                         `json:"showMergeCommits,omitempty"`
	Username           *string                       `json:"username,omitempty"`
}

// RepositorySettingsAuthMethod defines model for RepositorySettings.AuthMethod.
type RepositorySettingsAuthMethod string

// RepositorySettingsInfo defines model for RepositorySettingsInfo.
type RepositorySettingsInfo struct {
	Configured *bool `json:"configured,omitempty"`
	ReadOnly   *bool `json:"readOnly,omitempty"`
}

// ResetPasswordEmailRequest The JSON object representing the reset password email request.
type ResetPasswordEmailRequest struct {
	// Email The email of the user
	Email *string `json:"email,omitempty"`
}

// Rpc defines model for Rpc.
type Rpc struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// CreatedTime Timestamp of the rpc creation, in milliseconds
	CreatedTime *int64    `json:"createdTime,omitempty"`
	DeviceId    *DeviceId `json:"deviceId,omitempty"`

	// ExpirationTime Expiration time of the request.
	ExpirationTime *int64 `json:"expirationTime,omitempty"`
	Id             *RpcId `json:"id,omitempty"`

	// Request A value representing the any type (object or primitive)
	Request *JsonNode `json:"request,omitempty"`

	// Response A value representing the any type (object or primitive)
	Response *JsonNode `json:"response,omitempty"`

	// Status The current status of the RPC call.
	Status   *RpcStatus `json:"status,omitempty"`
	TenantId *TenantId  `json:"tenantId,omitempty"`
}

// RpcStatus The current status of the RPC call.
type RpcStatus string

// RpcId defines model for RpcId.
type RpcId struct {
	// EntityType string
	EntityType RpcIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// RpcIdEntityType string
type RpcIdEntityType string

// RuleChain A JSON value representing the rule chain.
type RuleChain struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Configuration A value representing the any type (object or primitive)
	Configuration *JsonNode `json:"configuration,omitempty"`

	// CreatedTime Timestamp of the rule chain creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// DebugMode Reserved for future usage.
	DebugMode       *bool        `json:"debugMode,omitempty"`
	FirstRuleNodeId *RuleNodeId  `json:"firstRuleNodeId,omitempty"`
	Id              *RuleChainId `json:"id,omitempty"`

	// Name Rule Chain name
	Name string `json:"name"`

	// Root Indicates root rule chain. The root rule chain process messages from all devices and entities by default. User may configure default rule chain per device profile.
	Root     *bool    `json:"root,omitempty"`
	TenantId TenantId `json:"tenantId"`

	// Type Rule Chain type. 'EDGE' rule chains are processing messages on the edge devices only.
	Type *RuleChainType `json:"type,omitempty"`
}

// RuleChainType Rule Chain type. 'EDGE' rule chains are processing messages on the edge devices only.
type RuleChainType string

// RuleChainConnectionInfo defines model for RuleChainConnectionInfo.
type RuleChainConnectionInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo JsonNode `json:"additionalInfo"`

	// FromIndex Index of rule node in the 'nodes' array of the RuleChainMetaData. Indicates the 'from' part of the connection.
	FromIndex         int32       `json:"fromIndex"`
	TargetRuleChainId RuleChainId `json:"targetRuleChainId"`

	// Type Type of the relation. Typically indicated the result of processing by the 'from' rule node. For example, 'Success' or 'Failure'
	Type string `json:"type"`
}

// RuleChainData A JSON value representing the rule chains.
type RuleChainData struct {
	// Metadata List of the Rule Chain metadata objects.
	Metadata *[]RuleChainMetaData `json:"metadata,omitempty"`

	// RuleChains List of the Rule Chain objects.
	RuleChains *[]RuleChain `json:"ruleChains,omitempty"`
}

// RuleChainDebugEventFilter defines model for RuleChainDebugEventFilter.
type RuleChainDebugEventFilter struct {
	Error *bool `json:"error,omitempty"`

	// ErrorStr The case insensitive 'contains' filter based on error message
	ErrorStr *string `json:"errorStr,omitempty"`

	// EventType String value representing the event type
	EventType RuleChainDebugEventFilterEventType `json:"eventType"`
	IsError   *bool                              `json:"isError,omitempty"`

	// Message String value representing the message
	Message  *string `json:"message,omitempty"`
	NotEmpty *bool   `json:"notEmpty,omitempty"`

	// Server String value representing the server name, identifier or ip address where the platform is running
	Server *string `json:"server,omitempty"`
}

// RuleChainDebugEventFilterEventType String value representing the event type
type RuleChainDebugEventFilterEventType string

// RuleChainExportData defines model for RuleChainExportData.
type RuleChainExportData struct {
	Attributes *map[string][]AttributeExportData `json:"attributes,omitempty"`

	// Entity A JSON value representing the rule chain.
	Entity     *RuleChain                     `json:"entity,omitempty"`
	EntityType *RuleChainExportDataEntityType `json:"entityType,omitempty"`

	// MetaData A JSON value representing the rule chain metadata.
	MetaData  *RuleChainMetaData `json:"metaData,omitempty"`
	Relations *[]EntityRelation  `json:"relations,omitempty"`
}

// RuleChainExportDataEntityType defines model for RuleChainExportData.EntityType.
type RuleChainExportDataEntityType string

// RuleChainId defines model for RuleChainId.
type RuleChainId struct {
	// EntityType string
	EntityType RuleChainIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// RuleChainIdEntityType string
type RuleChainIdEntityType string

// RuleChainImportResult defines model for RuleChainImportResult.
type RuleChainImportResult struct {
	Error         *string      `json:"error,omitempty"`
	RuleChainId   *RuleChainId `json:"ruleChainId,omitempty"`
	RuleChainName *string      `json:"ruleChainName,omitempty"`
	Updated       *bool        `json:"updated,omitempty"`
}

// RuleChainMetaData A JSON value representing the rule chain metadata.
type RuleChainMetaData struct {
	// Connections List of JSON objects that represent connections between rule nodes
	Connections []NodeConnectionInfo `json:"connections"`

	// FirstNodeIndex Index of the first rule node in the 'nodes' list
	FirstNodeIndex int32 `json:"firstNodeIndex"`

	// Nodes List of rule node JSON objects
	Nodes []RuleNode `json:"nodes"`

	// RuleChainConnections List of JSON objects that represent connections between rule nodes and other rule chains.
	RuleChainConnections []RuleChainConnectionInfo `json:"ruleChainConnections"`
	RuleChainId          RuleChainId               `json:"ruleChainId"`
}

// RuleChainOutputLabelsUsage defines model for RuleChainOutputLabelsUsage.
type RuleChainOutputLabelsUsage struct {
	// Labels Output labels
	Labels      *[]string   `json:"labels,omitempty"`
	RuleChainId RuleChainId `json:"ruleChainId"`

	// RuleChainName Rule Chain Name
	RuleChainName *string    `json:"ruleChainName,omitempty"`
	RuleNodeId    RuleNodeId `json:"ruleNodeId"`

	// RuleNodeName Rule Node Name
	RuleNodeName *string `json:"ruleNodeName,omitempty"`
}

// RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig defines model for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig.
type RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig struct {
	OnlyRuleChainLifecycleFailures *bool                                                                            `json:"onlyRuleChainLifecycleFailures,omitempty"`
	OnlyRuleNodeLifecycleFailures  *bool                                                                            `json:"onlyRuleNodeLifecycleFailures,omitempty"`
	RuleChainEvents                *[]RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents `json:"ruleChainEvents,omitempty"`
	RuleChains                     *[]openapi_types.UUID                                                            `json:"ruleChains,omitempty"`
	RuleNodeEvents                 *[]RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents  `json:"ruleNodeEvents,omitempty"`
	TrackRuleNodeEvents            *bool                                                                            `json:"trackRuleNodeEvents,omitempty"`
	TriggerType                    *RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType       `json:"triggerType,omitempty"`
}

// RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents defines model for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig.RuleChainEvents.
type RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleChainEvents string

// RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents defines model for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig.RuleNodeEvents.
type RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigRuleNodeEvents string

// RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType defines model for RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig.TriggerType.
type RuleEngineComponentLifecycleEventNotificationRuleTriggerConfigTriggerType string

// RuleNode defines model for RuleNode.
type RuleNode struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Configuration A value representing the any type (object or primitive)
	Configuration *JsonNode `json:"configuration,omitempty"`

	// ConfigurationVersion Version of rule node configuration.
	ConfigurationVersion *int32 `json:"configurationVersion,omitempty"`

	// CreatedTime Timestamp of the rule node creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// DebugMode Enable/disable debug.
	DebugMode  *bool       `json:"debugMode,omitempty"`
	ExternalId *RuleNodeId `json:"externalId,omitempty"`
	Id         *RuleNodeId `json:"id,omitempty"`

	// Name User defined name of the rule node. Used on UI and for logging.
	Name *string `json:"name,omitempty"`

	// QueueName Queue name.
	QueueName   *string      `json:"queueName,omitempty"`
	RuleChainId *RuleChainId `json:"ruleChainId,omitempty"`

	// SingletonMode Enable/disable singleton mode.
	SingletonMode *bool `json:"singletonMode,omitempty"`

	// Type Full Java Class Name of the rule node implementation.
	Type *string `json:"type,omitempty"`
}

// RuleNodeDebugEventFilter defines model for RuleNodeDebugEventFilter.
type RuleNodeDebugEventFilter struct {
	// DataSearch The case insensitive 'contains' filter based on data (key and value) for the message.
	DataSearch *string `json:"dataSearch,omitempty"`

	// EntityId String value representing the entity id in the event body (originator of the message)
	EntityId *string `json:"entityId,omitempty"`

	// EntityType String value representing the entity type
	EntityType *RuleNodeDebugEventFilterEntityType `json:"entityType,omitempty"`
	Error      *bool                               `json:"error,omitempty"`

	// ErrorStr The case insensitive 'contains' filter based on error message
	ErrorStr *string `json:"errorStr,omitempty"`

	// EventType String value representing the event type
	EventType RuleNodeDebugEventFilterEventType `json:"eventType"`
	IsError   *bool                             `json:"isError,omitempty"`

	// MetadataSearch The case insensitive 'contains' filter based on metadata (key and value) for the message.
	MetadataSearch *string `json:"metadataSearch,omitempty"`

	// MsgDirectionType String value representing msg direction type (incoming to entity or outcoming from entity)
	MsgDirectionType *RuleNodeDebugEventFilterMsgDirectionType `json:"msgDirectionType,omitempty"`

	// MsgId String value representing the message id in the rule engine
	MsgId *string `json:"msgId,omitempty"`

	// MsgType String value representing the message type
	MsgType  *string `json:"msgType,omitempty"`
	NotEmpty *bool   `json:"notEmpty,omitempty"`

	// RelationType String value representing the type of message routing
	RelationType *string `json:"relationType,omitempty"`

	// Server String value representing the server name, identifier or ip address where the platform is running
	Server *string `json:"server,omitempty"`
}

// RuleNodeDebugEventFilterEntityType String value representing the entity type
type RuleNodeDebugEventFilterEntityType string

// RuleNodeDebugEventFilterEventType String value representing the event type
type RuleNodeDebugEventFilterEventType string

// RuleNodeDebugEventFilterMsgDirectionType String value representing msg direction type (incoming to entity or outcoming from entity)
type RuleNodeDebugEventFilterMsgDirectionType string

// RuleNodeId defines model for RuleNodeId.
type RuleNodeId struct {
	// EntityType string
	EntityType RuleNodeIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// RuleNodeIdEntityType string
type RuleNodeIdEntityType string

// SaveDeviceWithCredentialsRequest The JSON object with device and credentials. See method description above for example.
type SaveDeviceWithCredentialsRequest struct {
	// Credentials A JSON value representing the device credentials.
	Credentials DeviceCredentials `json:"credentials"`
	Device      Device            `json:"device"`
}

// SaveOtaPackageInfoRequest A JSON value representing the OTA Package.
type SaveOtaPackageInfoRequest struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Checksum OTA Package checksum.
	Checksum *string `json:"checksum,omitempty"`

	// ChecksumAlgorithm OTA Package checksum algorithm.
	ChecksumAlgorithm *SaveOtaPackageInfoRequestChecksumAlgorithm `json:"checksumAlgorithm,omitempty"`

	// ContentType OTA Package content type.
	ContentType *string `json:"contentType,omitempty"`

	// CreatedTime Timestamp of the ota package creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// DataSize OTA Package data size.
	DataSize        *int64           `json:"dataSize,omitempty"`
	DeviceProfileId *DeviceProfileId `json:"deviceProfileId,omitempty"`

	// FileName OTA Package file name.
	FileName *string `json:"fileName,omitempty"`

	// HasData Indicates OTA Package 'has data'. Field is returned from DB ('true' if data exists or url is set).  If OTA Package 'has data' is 'false' we can not assign the OTA Package to the Device or Device Profile.
	HasData *bool         `json:"hasData,omitempty"`
	Id      *OtaPackageId `json:"id,omitempty"`

	// Tag OTA Package tag.
	Tag      *string   `json:"tag,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title OTA Package title.
	Title *string `json:"title,omitempty"`

	// Type OTA Package type.
	Type *SaveOtaPackageInfoRequestType `json:"type,omitempty"`

	// Url OTA Package url.
	Url *string `json:"url,omitempty"`

	// UsesUrl Indicates OTA Package uses url. Should be 'true' if uses url or 'false' if will be used data.
	UsesUrl *bool `json:"usesUrl,omitempty"`

	// Version OTA Package version.
	Version *string `json:"version,omitempty"`
}

// SaveOtaPackageInfoRequestChecksumAlgorithm OTA Package checksum algorithm.
type SaveOtaPackageInfoRequestChecksumAlgorithm string

// SaveOtaPackageInfoRequestType OTA Package type.
type SaveOtaPackageInfoRequestType string

// SecuritySettings A JSON value representing the Security Settings.
type SecuritySettings struct {
	// MaxFailedLoginAttempts Maximum number of failed login attempts allowed before user account is locked.
	MaxFailedLoginAttempts *int32 `json:"maxFailedLoginAttempts,omitempty"`

	// MobileSecretKeyLength Mobile secret key length
	MobileSecretKeyLength *int32              `json:"mobileSecretKeyLength,omitempty"`
	PasswordPolicy        *UserPasswordPolicy `json:"passwordPolicy,omitempty"`

	// UserLockoutNotificationEmail Email to use for notifications about locked users.
	UserLockoutNotificationEmail *string `json:"userLockoutNotificationEmail,omitempty"`
}

// ShortCustomerInfo defines model for ShortCustomerInfo.
type ShortCustomerInfo struct {
	CustomerId *CustomerId `json:"customerId,omitempty"`
	IsPublic   *bool       `json:"isPublic,omitempty"`
	Public     *bool       `json:"public,omitempty"`

	// Title Title of the customer.
	Title *string `json:"title,omitempty"`
}

// SignUpRequest defines model for SignUpRequest.
type SignUpRequest struct {
	// AppSecret For mobile apps only. Mobile app secret
	AppSecret *string `json:"appSecret,omitempty"`

	// Email Email will be used for new user to login
	Email *string `json:"email,omitempty"`

	// FirstName First Name
	FirstName *string `json:"firstName,omitempty"`

	// LastName Last Name
	LastName *string `json:"lastName,omitempty"`

	// Password New User Password
	Password *string `json:"password,omitempty"`

	// PkgName For mobile apps only. Mobile app package name
	PkgName *string `json:"pkgName,omitempty"`

	// RecaptchaResponse Response from reCAPTCHA validation
	RecaptchaResponse *string `json:"recaptchaResponse,omitempty"`
}

// SimpleAlarmConditionSpec defines model for SimpleAlarmConditionSpec.
type SimpleAlarmConditionSpec = AlarmConditionSpec

// SingleEntityFilter defines model for SingleEntityFilter.
type SingleEntityFilter struct {
	SingleEntity *EntityId `json:"singleEntity,omitempty"`
	Type         string    `json:"type"`
}

// SingleEntityVersionLoadRequest defines model for SingleEntityVersionLoadRequest.
type SingleEntityVersionLoadRequest struct {
	Config           *VersionLoadConfig                  `json:"config,omitempty"`
	ExternalEntityId *EntityId                           `json:"externalEntityId,omitempty"`
	Type             *SingleEntityVersionLoadRequestType `json:"type,omitempty"`
	VersionId        *string                             `json:"versionId,omitempty"`
}

// SingleEntityVersionLoadRequestType defines model for SingleEntityVersionLoadRequest.Type.
type SingleEntityVersionLoadRequestType string

// SlackConversation defines model for SlackConversation.
type SlackConversation struct {
	Email     *string               `json:"email,omitempty"`
	Id        string                `json:"id"`
	Name      string                `json:"name"`
	Title     *string               `json:"title,omitempty"`
	Type      SlackConversationType `json:"type"`
	WholeName *string               `json:"wholeName,omitempty"`
}

// SlackConversationType defines model for SlackConversation.Type.
type SlackConversationType string

// SlackDeliveryMethodNotificationTemplate defines model for SlackDeliveryMethodNotificationTemplate.
type SlackDeliveryMethodNotificationTemplate = DeliveryMethodNotificationTemplate

// SlackNotificationDeliveryMethodConfig defines model for SlackNotificationDeliveryMethodConfig.
type SlackNotificationDeliveryMethodConfig struct {
	BotToken *string `json:"botToken,omitempty"`
	Method   string  `json:"method"`
}

// SlackNotificationTargetConfig defines model for SlackNotificationTargetConfig.
type SlackNotificationTargetConfig struct {
	Conversation     *SlackConversation                             `json:"conversation,omitempty"`
	ConversationType *SlackNotificationTargetConfigConversationType `json:"conversationType,omitempty"`
	Description      *string                                        `json:"description,omitempty"`
	Type             string                                         `json:"type"`
}

// SlackNotificationTargetConfigConversationType defines model for SlackNotificationTargetConfig.ConversationType.
type SlackNotificationTargetConfigConversationType string

// SmppSmsProviderConfiguration defines model for SmppSmsProviderConfiguration.
type SmppSmsProviderConfiguration struct {
	// AddressRange Address range
	AddressRange *string `json:"addressRange,omitempty"`

	// BindType TX - Transmitter, RX - Receiver, TRX - Transciever. By default TX is used
	BindType *SmppSmsProviderConfigurationBindType `json:"bindType,omitempty"`

	// DestinationNpi Destination NPI (Numbering Plan Identification). 0 by default.
	// 0 - Unknown
	// 1 - ISDN/telephone numbering plan (E163/E164)
	// 3 - Data numbering plan (X.121)
	// 4 - Telex numbering plan (F.69)
	// 6 - Land Mobile (E.212) =6
	// 8 - National numbering plan
	// 9 - Private numbering plan
	// 10 - ERMES numbering plan (ETSI DE/PS 3 01-3)
	// 13 - Internet (IP)
	// 18 - WAP Client Id (to be defined by WAP Forum)
	DestinationNpi *[]byte `json:"destinationNpi,omitempty"`

	// DestinationTon Destination TON (Type of Number). 5 by default.
	// 0 - Unknown
	// 1 - International
	// 2 - National
	// 3 - Network Specific
	// 4 - Subscriber Number
	// 5 - Alphanumeric
	// 6 - Abbreviated
	DestinationTon *[]byte `json:"destinationTon,omitempty"`

	// Host SMPP host
	Host *string `json:"host,omitempty"`

	// Password Password
	Password *string `json:"password,omitempty"`

	// Port SMPP port
	Port *int32 `json:"port,omitempty"`

	// ProtocolVersion SMPP version
	ProtocolVersion *SmppSmsProviderConfigurationProtocolVersion `json:"protocolVersion,omitempty"`

	// ServiceType Service type
	ServiceType *string `json:"serviceType,omitempty"`

	// SourceAddress Source address
	SourceAddress *string `json:"sourceAddress,omitempty"`

	// SourceNpi Source NPI (Numbering Plan Identification). Needed is source address is set. 0 by default.
	// 0 - Unknown
	// 1 - ISDN/telephone numbering plan (E163/E164)
	// 3 - Data numbering plan (X.121)
	// 4 - Telex numbering plan (F.69)
	// 6 - Land Mobile (E.212) =6
	// 8 - National numbering plan
	// 9 - Private numbering plan
	// 10 - ERMES numbering plan (ETSI DE/PS 3 01-3)
	// 13 - Internet (IP)
	// 18 - WAP Client Id (to be defined by WAP Forum)
	SourceNpi *[]byte `json:"sourceNpi,omitempty"`

	// SourceTon Source TON (Type of Number). Needed is source address is set. 5 by default.
	// 0 - Unknown
	// 1 - International
	// 2 - National
	// 3 - Network Specific
	// 4 - Subscriber Number
	// 5 - Alphanumeric
	// 6 - Abbreviated
	SourceTon *[]byte `json:"sourceTon,omitempty"`

	// SystemId System ID
	SystemId *string `json:"systemId,omitempty"`

	// SystemType System type
	SystemType *string `json:"systemType,omitempty"`
	Type       string  `json:"type"`
}

// SmppSmsProviderConfigurationBindType TX - Transmitter, RX - Receiver, TRX - Transciever. By default TX is used
type SmppSmsProviderConfigurationBindType string

// SmppSmsProviderConfigurationProtocolVersion SMPP version
type SmppSmsProviderConfigurationProtocolVersion string

// SmsDeliveryMethodNotificationTemplate defines model for SmsDeliveryMethodNotificationTemplate.
type SmsDeliveryMethodNotificationTemplate = DeliveryMethodNotificationTemplate

// SmsProviderConfiguration defines model for SmsProviderConfiguration.
type SmsProviderConfiguration struct {
	Type string `json:"type"`
}

// SmsTwoFaAccountConfig defines model for SmsTwoFaAccountConfig.
type SmsTwoFaAccountConfig struct {
	PhoneNumber  *string `json:"phoneNumber,omitempty"`
	ProviderType string  `json:"providerType"`
	UseByDefault *bool   `json:"useByDefault,omitempty"`
}

// SmsTwoFaProviderConfig defines model for SmsTwoFaProviderConfig.
type SmsTwoFaProviderConfig struct {
	ProviderType                   string  `json:"providerType"`
	SmsVerificationMessageTemplate *string `json:"smsVerificationMessageTemplate,omitempty"`
	VerificationCodeLifetime       *int32  `json:"verificationCodeLifetime,omitempty"`
}

// SnmpCommunicationConfig defines model for SnmpCommunicationConfig.
type SnmpCommunicationConfig struct {
	Spec *SnmpCommunicationConfigSpec `json:"spec,omitempty"`
}

// SnmpCommunicationConfigSpec defines model for SnmpCommunicationConfig.Spec.
type SnmpCommunicationConfigSpec string

// SnmpDeviceProfileTransportConfiguration defines model for SnmpDeviceProfileTransportConfiguration.
type SnmpDeviceProfileTransportConfiguration struct {
	CommunicationConfigs *[]SnmpCommunicationConfig `json:"communicationConfigs,omitempty"`
	Retries              *int32                     `json:"retries,omitempty"`
	TimeoutMs            *int32                     `json:"timeoutMs,omitempty"`
	Type                 string                     `json:"type"`
}

// SnmpDeviceTransportConfiguration defines model for SnmpDeviceTransportConfiguration.
type SnmpDeviceTransportConfiguration struct {
	AuthenticationPassphrase *string                                                 `json:"authenticationPassphrase,omitempty"`
	AuthenticationProtocol   *SnmpDeviceTransportConfigurationAuthenticationProtocol `json:"authenticationProtocol,omitempty"`
	Community                *string                                                 `json:"community,omitempty"`
	ContextName              *string                                                 `json:"contextName,omitempty"`
	EngineId                 *string                                                 `json:"engineId,omitempty"`
	Host                     *string                                                 `json:"host,omitempty"`
	Port                     *int32                                                  `json:"port,omitempty"`
	PrivacyPassphrase        *string                                                 `json:"privacyPassphrase,omitempty"`
	PrivacyProtocol          *SnmpDeviceTransportConfigurationPrivacyProtocol        `json:"privacyProtocol,omitempty"`
	ProtocolVersion          *SnmpDeviceTransportConfigurationProtocolVersion        `json:"protocolVersion,omitempty"`
	SecurityName             *string                                                 `json:"securityName,omitempty"`
	Type                     string                                                  `json:"type"`
	Username                 *string                                                 `json:"username,omitempty"`
}

// SnmpDeviceTransportConfigurationAuthenticationProtocol defines model for SnmpDeviceTransportConfiguration.AuthenticationProtocol.
type SnmpDeviceTransportConfigurationAuthenticationProtocol string

// SnmpDeviceTransportConfigurationPrivacyProtocol defines model for SnmpDeviceTransportConfiguration.PrivacyProtocol.
type SnmpDeviceTransportConfigurationPrivacyProtocol string

// SnmpDeviceTransportConfigurationProtocolVersion defines model for SnmpDeviceTransportConfiguration.ProtocolVersion.
type SnmpDeviceTransportConfigurationProtocolVersion string

// SpecificTimeSchedule defines model for SpecificTimeSchedule.
type SpecificTimeSchedule struct {
	DaysOfWeek   *[]int32                  `json:"daysOfWeek,omitempty"`
	DynamicValue *DynamicValueString       `json:"dynamicValue,omitempty"`
	EndsOn       *int64                    `json:"endsOn,omitempty"`
	StartsOn     *int64                    `json:"startsOn,omitempty"`
	Timezone     *string                   `json:"timezone,omitempty"`
	Type         *SpecificTimeScheduleType `json:"type,omitempty"`
}

// SpecificTimeScheduleType defines model for SpecificTimeSchedule.Type.
type SpecificTimeScheduleType string

// StarredDashboardInfo defines model for StarredDashboardInfo.
type StarredDashboardInfo struct {
	// Id JSON object with Dashboard id.
	Id *openapi_types.UUID `json:"id,omitempty"`

	// StarredAt Starred timestamp
	StarredAt *int64 `json:"starredAt,omitempty"`

	// Title Title of the dashboard.
	Title *string `json:"title,omitempty"`
}

// StatisticsEventFilter defines model for StatisticsEventFilter.
type StatisticsEventFilter struct {
	// EventType String value representing the event type
	EventType StatisticsEventFilterEventType `json:"eventType"`

	// MaxErrorsOccurred The maximum number of errors occurred during messages processing
	MaxErrorsOccurred *int32 `json:"maxErrorsOccurred,omitempty"`

	// MaxMessagesProcessed The maximum number of successfully processed messages
	MaxMessagesProcessed *int32 `json:"maxMessagesProcessed,omitempty"`

	// MinErrorsOccurred The minimum number of errors occurred during messages processing
	MinErrorsOccurred *int32 `json:"minErrorsOccurred,omitempty"`

	// MinMessagesProcessed The minimum number of successfully processed messages
	MinMessagesProcessed *int32 `json:"minMessagesProcessed,omitempty"`
	NotEmpty             *bool  `json:"notEmpty,omitempty"`

	// Server String value representing the server name, identifier or ip address where the platform is running
	Server *string `json:"server,omitempty"`
}

// StatisticsEventFilterEventType String value representing the event type
type StatisticsEventFilterEventType string

// StringFilterPredicate defines model for StringFilterPredicate.
type StringFilterPredicate struct {
	IgnoreCase *bool                           `json:"ignoreCase,omitempty"`
	Operation  *StringFilterPredicateOperation `json:"operation,omitempty"`
	Type       string                          `json:"type"`
	Value      *FilterPredicateValueString     `json:"value,omitempty"`
}

// StringFilterPredicateOperation defines model for StringFilterPredicate.Operation.
type StringFilterPredicateOperation string

// SubmitStrategy defines model for SubmitStrategy.
type SubmitStrategy struct {
	BatchSize *int32              `json:"batchSize,omitempty"`
	Type      *SubmitStrategyType `json:"type,omitempty"`
}

// SubmitStrategyType defines model for SubmitStrategy.Type.
type SubmitStrategyType string

// SystemInfo defines model for SystemInfo.
type SystemInfo struct {
	Monolith *bool `json:"monolith,omitempty"`

	// SystemData System data.
	SystemData *[]SystemInfoData `json:"systemData,omitempty"`
}

// SystemInfoData defines model for SystemInfoData.
type SystemInfoData struct {
	// CpuCount Total CPU usage.
	CpuCount *int64 `json:"cpuCount,omitempty"`

	// CpuUsage CPU usage, in percent.
	CpuUsage *int64 `json:"cpuUsage,omitempty"`

	// DiscUsage Disk usage, in percent.
	DiscUsage *int64 `json:"discUsage,omitempty"`

	// MemoryUsage Memory usage, in percent.
	MemoryUsage *int64 `json:"memoryUsage,omitempty"`

	// ServiceId Service Id.
	ServiceId *string `json:"serviceId,omitempty"`

	// ServiceType Service type.
	ServiceType *string `json:"serviceType,omitempty"`

	// TotalDiscSpace Total disc space in bytes.
	TotalDiscSpace *int64 `json:"totalDiscSpace,omitempty"`

	// TotalMemory Total memory in bytes.
	TotalMemory *int64 `json:"totalMemory,omitempty"`
}

// TaskProcessingFailureNotificationRuleTriggerConfig defines model for TaskProcessingFailureNotificationRuleTriggerConfig.
type TaskProcessingFailureNotificationRuleTriggerConfig = NotificationRuleTriggerConfig

// TbImageDeleteResult defines model for TbImageDeleteResult.
type TbImageDeleteResult struct {
	References *map[string][]HasIdObject `json:"references,omitempty"`
	Success    *bool                     `json:"success,omitempty"`
}

// TbResource A JSON value representing the Resource.
type TbResource struct {
	// CreatedTime Timestamp of the resource creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Data Resource data.
	Data *string `json:"data,omitempty"`

	// Descriptor A value representing the any type (object or primitive)
	Descriptor *JsonNode `json:"descriptor,omitempty"`

	// Etag Resource etag.
	Etag *string `json:"etag,omitempty"`

	// FileName Resource file name.
	FileName          *string       `json:"fileName,omitempty"`
	Id                *TbResourceId `json:"id,omitempty"`
	Link              *string       `json:"link,omitempty"`
	Name              *string       `json:"name,omitempty"`
	Preview           *string       `json:"preview,omitempty"`
	Public            *bool         `json:"public,omitempty"`
	PublicLink        *string       `json:"publicLink,omitempty"`
	PublicResourceKey *string       `json:"publicResourceKey,omitempty"`

	// ResourceKey Resource key.
	ResourceKey *string `json:"resourceKey,omitempty"`

	// ResourceType Resource type.
	ResourceType *TbResourceResourceType `json:"resourceType,omitempty"`
	TenantId     *TenantId               `json:"tenantId,omitempty"`

	// Title Resource title.
	Title *string `json:"title,omitempty"`
}

// TbResourceResourceType Resource type.
type TbResourceResourceType string

// TbResourceId defines model for TbResourceId.
type TbResourceId struct {
	// EntityType string
	EntityType TbResourceIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// TbResourceIdEntityType string
type TbResourceIdEntityType string

// TbResourceInfo defines model for TbResourceInfo.
type TbResourceInfo struct {
	// CreatedTime Timestamp of the resource creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Descriptor A value representing the any type (object or primitive)
	Descriptor *JsonNode `json:"descriptor,omitempty"`

	// Etag Resource etag.
	Etag *string `json:"etag,omitempty"`

	// FileName Resource file name.
	FileName          *string       `json:"fileName,omitempty"`
	Id                *TbResourceId `json:"id,omitempty"`
	Link              *string       `json:"link,omitempty"`
	Name              *string       `json:"name,omitempty"`
	Public            *bool         `json:"public,omitempty"`
	PublicLink        *string       `json:"publicLink,omitempty"`
	PublicResourceKey *string       `json:"publicResourceKey,omitempty"`

	// ResourceKey Resource key.
	ResourceKey *string `json:"resourceKey,omitempty"`

	// ResourceType Resource type.
	ResourceType *TbResourceInfoResourceType `json:"resourceType,omitempty"`
	TenantId     *TenantId                   `json:"tenantId,omitempty"`

	// Title Resource title.
	Title *string `json:"title,omitempty"`
}

// TbResourceInfoResourceType Resource type.
type TbResourceInfoResourceType string

// TelemetryEntityView defines model for TelemetryEntityView.
type TelemetryEntityView struct {
	Attributes AttributesEntityView `json:"attributes"`

	// Timeseries List of time-series data keys to expose
	Timeseries []string `json:"timeseries"`
}

// TelemetryMappingConfiguration defines model for TelemetryMappingConfiguration.
type TelemetryMappingConfiguration struct {
	Attribute      *[]string                    `json:"attribute,omitempty"`
	AttributeLwm2m *map[string]ObjectAttributes `json:"attributeLwm2m,omitempty"`
	KeyName        *map[string]string           `json:"keyName,omitempty"`
	Observe        *[]string                    `json:"observe,omitempty"`
	Telemetry      *[]string                    `json:"telemetry,omitempty"`
}

// Tenant A JSON value representing the tenant.
type Tenant struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Address Address Line 1
	Address *string `json:"address,omitempty"`

	// Address2 Address Line 2
	Address2 *string `json:"address2,omitempty"`

	// City City
	City *string `json:"city,omitempty"`

	// Country Country
	Country *string `json:"country,omitempty"`

	// CreatedTime Timestamp of the tenant creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Email Email
	Email *string   `json:"email,omitempty"`
	Id    *TenantId `json:"id,omitempty"`

	// Name Name of the tenant. Read-only, duplicated from title for backward compatibility
	Name *string `json:"name,omitempty"`

	// Phone Phone number
	Phone *string `json:"phone,omitempty"`

	// Region Geo region of the tenant
	Region *string `json:"region,omitempty"`

	// State State
	State           *string          `json:"state,omitempty"`
	TenantProfileId *TenantProfileId `json:"tenantProfileId,omitempty"`

	// Title Title of the tenant
	Title string `json:"title"`

	// Zip Zip code
	Zip *string `json:"zip,omitempty"`
}

// TenantId defines model for TenantId.
type TenantId struct {
	// EntityType string
	EntityType TenantIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// TenantIdEntityType string
type TenantIdEntityType string

// TenantInfo defines model for TenantInfo.
type TenantInfo struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Address Address Line 1
	Address *string `json:"address,omitempty"`

	// Address2 Address Line 2
	Address2 *string `json:"address2,omitempty"`

	// City City
	City *string `json:"city,omitempty"`

	// Country Country
	Country *string `json:"country,omitempty"`

	// CreatedTime Timestamp of the tenant creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Email Email
	Email *string   `json:"email,omitempty"`
	Id    *TenantId `json:"id,omitempty"`

	// Name Name of the tenant. Read-only, duplicated from title for backward compatibility
	Name *string `json:"name,omitempty"`

	// Phone Phone number
	Phone *string `json:"phone,omitempty"`

	// Region Geo region of the tenant
	Region *string `json:"region,omitempty"`

	// State State
	State           *string          `json:"state,omitempty"`
	TenantProfileId *TenantProfileId `json:"tenantProfileId,omitempty"`

	// TenantProfileName Tenant Profile name
	TenantProfileName *string `json:"tenantProfileName,omitempty"`

	// Title Title of the tenant
	Title string `json:"title"`

	// Zip Zip code
	Zip *string `json:"zip,omitempty"`
}

// TenantProfile A JSON value representing the tenant profile.
type TenantProfile struct {
	// CreatedTime Timestamp of the tenant profile creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`
	Default     *bool  `json:"default,omitempty"`

	// Description Description of the tenant profile
	Description *string          `json:"description,omitempty"`
	Id          *TenantProfileId `json:"id,omitempty"`

	// IsolatedTbRuleEngine If enabled, will push all messages related to this tenant and processed by the rule engine into separate queue. Useful for complex microservices deployments, to isolate processing of the data for specific tenants
	IsolatedTbRuleEngine *bool `json:"isolatedTbRuleEngine,omitempty"`

	// Name Name of the tenant profile
	Name        *string            `json:"name,omitempty"`
	ProfileData *TenantProfileData `json:"profileData,omitempty"`
}

// TenantProfileConfiguration defines model for TenantProfileConfiguration.
type TenantProfileConfiguration struct {
	Type string `json:"type"`
}

// TenantProfileData defines model for TenantProfileData.
type TenantProfileData struct {
	// Configuration Complex JSON object that contains profile settings: max devices, max assets, rate limits, etc.
	Configuration *TenantProfileData_Configuration `json:"configuration,omitempty"`

	// QueueConfiguration JSON array of queue configuration per tenant profile
	QueueConfiguration *[]TenantProfileQueueConfiguration `json:"queueConfiguration,omitempty"`
}

// TenantProfileData_Configuration Complex JSON object that contains profile settings: max devices, max assets, rate limits, etc.
type TenantProfileData_Configuration struct {
	union json.RawMessage
}

// TenantProfileId defines model for TenantProfileId.
type TenantProfileId struct {
	// EntityType string
	EntityType TenantProfileIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// TenantProfileIdEntityType string
type TenantProfileIdEntityType string

// TenantProfileQueueConfiguration defines model for TenantProfileQueueConfiguration.
type TenantProfileQueueConfiguration struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo        *JsonNode           `json:"additionalInfo,omitempty"`
	ConsumerPerPartition  *bool               `json:"consumerPerPartition,omitempty"`
	Name                  *string             `json:"name,omitempty"`
	PackProcessingTimeout *int64              `json:"packProcessingTimeout,omitempty"`
	Partitions            *int32              `json:"partitions,omitempty"`
	PollInterval          *int32              `json:"pollInterval,omitempty"`
	ProcessingStrategy    *ProcessingStrategy `json:"processingStrategy,omitempty"`
	SubmitStrategy        *SubmitStrategy     `json:"submitStrategy,omitempty"`
	Topic                 *string             `json:"topic,omitempty"`
}

// TestSmsRequest A JSON value representing the Test SMS request.
type TestSmsRequest struct {
	// Message The test message
	Message *string `json:"message,omitempty"`

	// NumberTo The phone number or other identifier to specify as a recipient of the SMS.
	NumberTo *string `json:"numberTo,omitempty"`

	// ProviderConfiguration The SMS provider configuration
	ProviderConfiguration *TestSmsRequest_ProviderConfiguration `json:"providerConfiguration,omitempty"`
}

// TestSmsRequest_ProviderConfiguration The SMS provider configuration
type TestSmsRequest_ProviderConfiguration struct {
	union json.RawMessage
}

// ThingsboardCredentialsExpiredResponse defines model for ThingsboardCredentialsExpiredResponse.
type ThingsboardCredentialsExpiredResponse struct {
	// ErrorCode Platform error code:
	// * `2` - General error (HTTP: 500 - Internal Server Error)
	//
	// * `10` - Authentication failed (HTTP: 401 - Unauthorized)
	//
	// * `11` - JWT token expired (HTTP: 401 - Unauthorized)
	//
	// * `15` - Credentials expired (HTTP: 401 - Unauthorized)
	//
	// * `20` - Permission denied (HTTP: 403 - Forbidden)
	//
	// * `30` - Invalid arguments (HTTP: 400 - Bad Request)
	//
	// * `31` - Bad request params (HTTP: 400 - Bad Request)
	//
	// * `32` - Item not found (HTTP: 404 - Not Found)
	//
	// * `33` - Too many requests (HTTP: 429 - Too Many Requests)
	//
	// * `34` - Too many updates (Too many updates over Websocket session)
	//
	// * `40` - Subscription violation (HTTP: 403 - Forbidden)
	ErrorCode *int32 `json:"errorCode,omitempty"`

	// Message Error message
	Message *string `json:"message,omitempty"`

	// ResetToken Password reset token
	ResetToken *string `json:"resetToken,omitempty"`

	// Status HTTP Response Status Code
	Status *int32 `json:"status,omitempty"`

	// Timestamp Timestamp
	Timestamp *int64 `json:"timestamp,omitempty"`
}

// ThingsboardErrorResponse defines model for ThingsboardErrorResponse.
type ThingsboardErrorResponse struct {
	// ErrorCode Platform error code:
	// * `2` - General error (HTTP: 500 - Internal Server Error)
	//
	// * `10` - Authentication failed (HTTP: 401 - Unauthorized)
	//
	// * `11` - JWT token expired (HTTP: 401 - Unauthorized)
	//
	// * `15` - Credentials expired (HTTP: 401 - Unauthorized)
	//
	// * `20` - Permission denied (HTTP: 403 - Forbidden)
	//
	// * `30` - Invalid arguments (HTTP: 400 - Bad Request)
	//
	// * `31` - Bad request params (HTTP: 400 - Bad Request)
	//
	// * `32` - Item not found (HTTP: 404 - Not Found)
	//
	// * `33` - Too many requests (HTTP: 429 - Too Many Requests)
	//
	// * `34` - Too many updates (Too many updates over Websocket session)
	//
	// * `40` - Subscription violation (HTTP: 403 - Forbidden)
	ErrorCode *int32 `json:"errorCode,omitempty"`

	// Message Error message
	Message *string `json:"message,omitempty"`

	// Status HTTP Response Status Code
	Status *int32 `json:"status,omitempty"`

	// Timestamp Timestamp
	Timestamp *int64 `json:"timestamp,omitempty"`
}

// TotpTwoFaAccountConfig defines model for TotpTwoFaAccountConfig.
type TotpTwoFaAccountConfig struct {
	AuthUrl      *string `json:"authUrl,omitempty"`
	ProviderType string  `json:"providerType"`
	UseByDefault *bool   `json:"useByDefault,omitempty"`
}

// TotpTwoFaProviderConfig defines model for TotpTwoFaProviderConfig.
type TotpTwoFaProviderConfig struct {
	IssuerName   *string `json:"issuerName,omitempty"`
	ProviderType string  `json:"providerType"`
}

// TransportPayloadTypeConfiguration defines model for TransportPayloadTypeConfiguration.
type TransportPayloadTypeConfiguration struct {
	TransportPayloadType string `json:"transportPayloadType"`
}

// TsValue defines model for TsValue.
type TsValue struct {
	Count *int64  `json:"count,omitempty"`
	Ts    *int64  `json:"ts,omitempty"`
	Value *string `json:"value,omitempty"`
}

// TwilioSmsProviderConfiguration defines model for TwilioSmsProviderConfiguration.
type TwilioSmsProviderConfiguration struct {
	// AccountSid Twilio account Sid.
	AccountSid *string `json:"accountSid,omitempty"`

	// AccountToken Twilio account Token.
	AccountToken *string `json:"accountToken,omitempty"`

	// NumberFrom The number/id of a sender.
	NumberFrom *string `json:"numberFrom,omitempty"`
	Type       string  `json:"type"`
}

// TwoFaAccountConfig defines model for TwoFaAccountConfig.
type TwoFaAccountConfig struct {
	ProviderType string `json:"providerType"`
	UseByDefault *bool  `json:"useByDefault,omitempty"`
}

// TwoFaProviderConfig defines model for TwoFaProviderConfig.
type TwoFaProviderConfig struct {
	ProviderType string `json:"providerType"`
}

// TwoFaProviderInfo defines model for TwoFaProviderInfo.
type TwoFaProviderInfo struct {
	Contact                       *string                `json:"contact,omitempty"`
	Default                       *bool                  `json:"default,omitempty"`
	IsDefault                     *bool                  `json:"isDefault,omitempty"`
	MinVerificationCodeSendPeriod *int32                 `json:"minVerificationCodeSendPeriod,omitempty"`
	Type                          *TwoFaProviderInfoType `json:"type,omitempty"`
}

// TwoFaProviderInfoType defines model for TwoFaProviderInfo.Type.
type TwoFaProviderInfoType string

// UpdateMessage defines model for UpdateMessage.
type UpdateMessage struct {
	// CurrentVersion Current ThingsBoard version.
	CurrentVersion *string `json:"currentVersion,omitempty"`

	// CurrentVersionReleaseNotesUrl Current ThingsBoard version release notes URL.
	CurrentVersionReleaseNotesUrl *string `json:"currentVersionReleaseNotesUrl,omitempty"`

	// LatestVersion Latest ThingsBoard version.
	LatestVersion *string `json:"latestVersion,omitempty"`

	// LatestVersionReleaseNotesUrl Latest ThingsBoard version release notes URL.
	LatestVersionReleaseNotesUrl *string `json:"latestVersionReleaseNotesUrl,omitempty"`

	// UpdateAvailable 'True' if new platform update is available.
	UpdateAvailable *bool `json:"updateAvailable,omitempty"`

	// UpgradeInstructionsUrl Upgrade instructions URL.
	UpgradeInstructionsUrl *string `json:"upgradeInstructionsUrl,omitempty"`
}

// UsageInfo defines model for UsageInfo.
type UsageInfo struct {
	Alarms               *int64 `json:"alarms,omitempty"`
	Assets               *int64 `json:"assets,omitempty"`
	Customers            *int64 `json:"customers,omitempty"`
	Dashboards           *int64 `json:"dashboards,omitempty"`
	Devices              *int64 `json:"devices,omitempty"`
	Emails               *int64 `json:"emails,omitempty"`
	JsExecutions         *int64 `json:"jsExecutions,omitempty"`
	MaxAlarms            *int64 `json:"maxAlarms,omitempty"`
	MaxAssets            *int64 `json:"maxAssets,omitempty"`
	MaxCustomers         *int64 `json:"maxCustomers,omitempty"`
	MaxDashboards        *int64 `json:"maxDashboards,omitempty"`
	MaxDevices           *int64 `json:"maxDevices,omitempty"`
	MaxEmails            *int64 `json:"maxEmails,omitempty"`
	MaxJsExecutions      *int64 `json:"maxJsExecutions,omitempty"`
	MaxSms               *int64 `json:"maxSms,omitempty"`
	MaxTbelExecutions    *int64 `json:"maxTbelExecutions,omitempty"`
	MaxTransportMessages *int64 `json:"maxTransportMessages,omitempty"`
	MaxUsers             *int64 `json:"maxUsers,omitempty"`
	Sms                  *int64 `json:"sms,omitempty"`
	SmsEnabled           *bool  `json:"smsEnabled,omitempty"`
	TbelExecutions       *int64 `json:"tbelExecutions,omitempty"`
	TransportMessages    *int64 `json:"transportMessages,omitempty"`
	Users                *int64 `json:"users,omitempty"`
}

// User A JSON value representing the User.
type User struct {
	// AdditionalInfo A value representing the any type (object or primitive)
	AdditionalInfo *JsonNode `json:"additionalInfo,omitempty"`

	// Authority Authority
	Authority UserAuthority `json:"authority"`

	// CreatedTime Timestamp of the user creation, in milliseconds
	CreatedTime *int64      `json:"createdTime,omitempty"`
	CustomerId  *CustomerId `json:"customerId,omitempty"`

	// Email Email of the user
	Email string `json:"email"`

	// FirstName First name of the user
	FirstName *string `json:"firstName,omitempty"`
	Id        *UserId `json:"id,omitempty"`

	// LastName Last name of the user
	LastName *string `json:"lastName,omitempty"`

	// Name Duplicates the email of the user, readonly
	Name *string `json:"name,omitempty"`

	// Phone Phone number of the user
	Phone    *string   `json:"phone,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// UserAuthority Authority
type UserAuthority string

// UserDashboardsInfo defines model for UserDashboardsInfo.
type UserDashboardsInfo struct {
	// Last List of last visited dashboards.
	Last *[]LastVisitedDashboardInfo `json:"last,omitempty"`

	// Starred List of starred dashboards.
	Starred *[]StarredDashboardInfo `json:"starred,omitempty"`
}

// UserEmailInfo defines model for UserEmailInfo.
type UserEmailInfo struct {
	// Email User email
	Email *string `json:"email,omitempty"`

	// FirstName User first name
	FirstName *string `json:"firstName,omitempty"`
	Id        *UserId `json:"id,omitempty"`

	// LastName User last name
	LastName *string `json:"lastName,omitempty"`
}

// UserId defines model for UserId.
type UserId struct {
	// EntityType string
	EntityType UserIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// UserIdEntityType string
type UserIdEntityType string

// UserNotificationSettings defines model for UserNotificationSettings.
type UserNotificationSettings struct {
	Prefs map[string]NotificationPref `json:"prefs"`
}

// UserPasswordPolicy defines model for UserPasswordPolicy.
type UserPasswordPolicy struct {
	// AllowWhitespaces Allow whitespaces
	AllowWhitespaces *bool `json:"allowWhitespaces,omitempty"`

	// ForceUserToResetPasswordIfNotValid Force user to update password if existing one does not pass validation
	ForceUserToResetPasswordIfNotValid *bool `json:"forceUserToResetPasswordIfNotValid,omitempty"`

	// MaximumLength Maximum number of symbols in the password.
	MaximumLength *int32 `json:"maximumLength,omitempty"`

	// MinimumDigits Minimum number of digits in the password.
	MinimumDigits *int32 `json:"minimumDigits,omitempty"`

	// MinimumLength Minimum number of symbols in the password.
	MinimumLength *int32 `json:"minimumLength,omitempty"`

	// MinimumLowercaseLetters Minimum number of lowercase letters in the password.
	MinimumLowercaseLetters *int32 `json:"minimumLowercaseLetters,omitempty"`

	// MinimumSpecialCharacters Minimum number of special in the password.
	MinimumSpecialCharacters *int32 `json:"minimumSpecialCharacters,omitempty"`

	// MinimumUppercaseLetters Minimum number of uppercase letters in the password.
	MinimumUppercaseLetters *int32 `json:"minimumUppercaseLetters,omitempty"`

	// PasswordExpirationPeriodDays Password expiration period (days). Force expiration of the password.
	PasswordExpirationPeriodDays *int32 `json:"passwordExpirationPeriodDays,omitempty"`

	// PasswordReuseFrequencyDays Password reuse frequency (days). Disallow to use the same password for the defined number of days
	PasswordReuseFrequencyDays *int32 `json:"passwordReuseFrequencyDays,omitempty"`
}

// UsersFilter defines model for UsersFilter.
type UsersFilter struct {
	Type string `json:"type"`
}

// VersionCreationResult defines model for VersionCreationResult.
type VersionCreationResult struct {
	Added    *int32         `json:"added,omitempty"`
	Done     *bool          `json:"done,omitempty"`
	Error    *string        `json:"error,omitempty"`
	Modified *int32         `json:"modified,omitempty"`
	Removed  *int32         `json:"removed,omitempty"`
	Version  *EntityVersion `json:"version,omitempty"`
}

// VersionLoadConfig defines model for VersionLoadConfig.
type VersionLoadConfig struct {
	LoadAttributes  *bool `json:"loadAttributes,omitempty"`
	LoadCredentials *bool `json:"loadCredentials,omitempty"`
	LoadRelations   *bool `json:"loadRelations,omitempty"`
}

// VersionLoadRequest defines model for VersionLoadRequest.
type VersionLoadRequest struct {
	Type      *VersionLoadRequestType `json:"type,omitempty"`
	VersionId *string                 `json:"versionId,omitempty"`
}

// VersionLoadRequestType defines model for VersionLoadRequest.Type.
type VersionLoadRequestType string

// VersionLoadResult defines model for VersionLoadResult.
type VersionLoadResult struct {
	Done   *bool                   `json:"done,omitempty"`
	Error  *EntityLoadError        `json:"error,omitempty"`
	Result *[]EntityTypeLoadResult `json:"result,omitempty"`
}

// VersionedEntityInfo defines model for VersionedEntityInfo.
type VersionedEntityInfo struct {
	ExternalId *EntityId `json:"externalId,omitempty"`
}

// WebDeliveryMethodNotificationTemplate defines model for WebDeliveryMethodNotificationTemplate.
type WebDeliveryMethodNotificationTemplate struct {
	AdditionalConfig *interface{} `json:"additionalConfig,omitempty"`
	Body             string       `json:"body"`
	Enabled          *bool        `json:"enabled,omitempty"`
	Method           string       `json:"method"`
	Subject          *string      `json:"subject,omitempty"`
}

// WidgetType defines model for WidgetType.
type WidgetType struct {
	// CreatedTime Timestamp of the Widget Type creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Deprecated Whether widget type is deprecated.
	Deprecated *bool `json:"deprecated,omitempty"`

	// Descriptor A value representing the any type (object or primitive)
	Descriptor *JsonNode `json:"descriptor,omitempty"`

	// Fqn Unique FQN that is used in dashboards as a reference widget type
	Fqn *string       `json:"fqn,omitempty"`
	Id  *WidgetTypeId `json:"id,omitempty"`

	// Name Widget name used in search and UI
	Name     *string   `json:"name,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// WidgetTypeDetails A JSON value representing the Widget Type Details.
type WidgetTypeDetails struct {
	// CreatedTime Timestamp of the Widget Type creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Deprecated Whether widget type is deprecated.
	Deprecated *bool `json:"deprecated,omitempty"`

	// Description Description of the widget
	Description *string `json:"description,omitempty"`

	// Descriptor A value representing the any type (object or primitive)
	Descriptor *JsonNode `json:"descriptor,omitempty"`

	// Fqn Unique FQN that is used in dashboards as a reference widget type
	Fqn *string       `json:"fqn,omitempty"`
	Id  *WidgetTypeId `json:"id,omitempty"`

	// Image Relative or external image URL. Replaced with image data URL (Base64) in case of relative URL and 'inlineImages' option enabled.
	Image *string `json:"image,omitempty"`

	// Name Widget name used in search and UI
	Name *string `json:"name,omitempty"`

	// Tags Tags of the widget type
	Tags     *[]string `json:"tags,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`
}

// WidgetTypeExportData defines model for WidgetTypeExportData.
type WidgetTypeExportData struct {
	Attributes *map[string][]AttributeExportData `json:"attributes,omitempty"`

	// Entity A JSON value representing the Widget Type Details.
	Entity     *WidgetTypeDetails              `json:"entity,omitempty"`
	EntityType *WidgetTypeExportDataEntityType `json:"entityType,omitempty"`
	Relations  *[]EntityRelation               `json:"relations,omitempty"`
}

// WidgetTypeExportDataEntityType defines model for WidgetTypeExportData.EntityType.
type WidgetTypeExportDataEntityType string

// WidgetTypeId defines model for WidgetTypeId.
type WidgetTypeId struct {
	// EntityType string
	EntityType WidgetTypeIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// WidgetTypeIdEntityType string
type WidgetTypeIdEntityType string

// WidgetTypeInfo defines model for WidgetTypeInfo.
type WidgetTypeInfo struct {
	// CreatedTime Timestamp of the Widget Type creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Deprecated Whether widget type is deprecated.
	Deprecated *bool `json:"deprecated,omitempty"`

	// Description Description of the widget type
	Description *string `json:"description,omitempty"`

	// Fqn Unique FQN that is used in dashboards as a reference widget type
	Fqn *string       `json:"fqn,omitempty"`
	Id  *WidgetTypeId `json:"id,omitempty"`

	// Image Base64 encoded widget thumbnail
	Image *string `json:"image,omitempty"`

	// Name Widget name used in search and UI
	Name *string `json:"name,omitempty"`

	// Tags Tags of the widget type
	Tags     *[]string `json:"tags,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// WidgetType Type of the widget (timeseries, latest, control, alarm or static)
	WidgetType *string `json:"widgetType,omitempty"`
}

// WidgetsBundle A JSON value representing the Widget Bundle.
type WidgetsBundle struct {
	// Alias Unique alias that is used in widget types as a reference widget bundle
	Alias *string `json:"alias,omitempty"`

	// CreatedTime Timestamp of the Widget Bundle creation, in milliseconds
	CreatedTime *int64 `json:"createdTime,omitempty"`

	// Description Description
	Description *string          `json:"description,omitempty"`
	Id          *WidgetsBundleId `json:"id,omitempty"`

	// Image Relative or external image URL. Replaced with image data URL (Base64) in case of relative URL and 'inlineImages' option enabled.
	Image *string `json:"image,omitempty"`

	// Name Same as title of the Widget Bundle. Read-only field. Update the 'title' to change the 'name' of the Widget Bundle.
	Name *string `json:"name,omitempty"`

	// Order Order
	Order    *int32    `json:"order,omitempty"`
	TenantId *TenantId `json:"tenantId,omitempty"`

	// Title Title used in search and UI
	Title *string `json:"title,omitempty"`
}

// WidgetsBundleExportData defines model for WidgetsBundleExportData.
type WidgetsBundleExportData struct {
	Attributes *map[string][]AttributeExportData `json:"attributes,omitempty"`

	// Entity A JSON value representing the Widget Bundle.
	Entity     *WidgetsBundle                     `json:"entity,omitempty"`
	EntityType *WidgetsBundleExportDataEntityType `json:"entityType,omitempty"`
	Fqns       *[]string                          `json:"fqns,omitempty"`
	Relations  *[]EntityRelation                  `json:"relations,omitempty"`
	Widgets    *[]map[string]interface{}          `json:"widgets,omitempty"`
}

// WidgetsBundleExportDataEntityType defines model for WidgetsBundleExportData.EntityType.
type WidgetsBundleExportDataEntityType string

// WidgetsBundleId defines model for WidgetsBundleId.
type WidgetsBundleId struct {
	// EntityType string
	EntityType WidgetsBundleIdEntityType `json:"entityType"`

	// Id ID of the entity, time-based UUID v1
	Id openapi_types.UUID `json:"id"`
}

// WidgetsBundleIdEntityType string
type WidgetsBundleIdEntityType string

// X509CertificateChainProvisionConfiguration defines model for X509CertificateChainProvisionConfiguration.
type X509CertificateChainProvisionConfiguration struct {
	AllowCreateNewDevicesByX509Certificate *bool   `json:"allowCreateNewDevicesByX509Certificate,omitempty"`
	CertificateRegExPattern                *string `json:"certificateRegExPattern,omitempty"`
	ProvisionDeviceSecret                  *string `json:"provisionDeviceSecret,omitempty"`
	Type                                   string  `json:"type"`
}

// VerifyAndSaveTwoFaAccountConfigJSONBody defines parameters for VerifyAndSaveTwoFaAccountConfig.
type VerifyAndSaveTwoFaAccountConfigJSONBody struct {
	union json.RawMessage
}

// VerifyAndSaveTwoFaAccountConfigParams defines parameters for VerifyAndSaveTwoFaAccountConfig.
type VerifyAndSaveTwoFaAccountConfigParams struct {
	VerificationCode *string `form:"verificationCode,omitempty" json:"verificationCode,omitempty"`
}

// GenerateTwoFaAccountConfigParams defines parameters for GenerateTwoFaAccountConfig.
type GenerateTwoFaAccountConfigParams struct {
	// ProviderType 2FA provider type to generate new account config for
	ProviderType interface{} `form:"providerType" json:"providerType"`
}

// SubmitTwoFaAccountConfigJSONBody defines parameters for SubmitTwoFaAccountConfig.
type SubmitTwoFaAccountConfigJSONBody struct {
	union json.RawMessage
}

// CodeProcessingUrlParams defines parameters for CodeProcessingUrl.
type CodeProcessingUrlParams struct {
	Code  string `form:"code" json:"code"`
	State string `form:"state" json:"state"`
}

// GetHighestAlarmSeverityParams defines parameters for GetHighestAlarmSeverity.
type GetHighestAlarmSeverityParams struct {
	// SearchStatus A string value representing one of the AlarmSearchStatus enumeration value
	SearchStatus *interface{} `form:"searchStatus,omitempty" json:"searchStatus,omitempty"`

	// Status A string value representing one of the AlarmStatus enumeration value
	Status *interface{} `form:"status,omitempty" json:"status,omitempty"`

	// AssigneeId A string value representing the assignee user id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssigneeId *string `form:"assigneeId,omitempty" json:"assigneeId,omitempty"`
}

// GetAlarmTypesParams defines parameters for GetAlarmTypes.
type GetAlarmTypesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on of next alarm fields: type, severity or status
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetAlarmCommentsParams defines parameters for GetAlarmComments.
type GetAlarmCommentsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetAlarmsParams defines parameters for GetAlarms.
type GetAlarmsParams struct {
	// SearchStatus A string value representing one of the AlarmSearchStatus enumeration value
	SearchStatus *interface{} `form:"searchStatus,omitempty" json:"searchStatus,omitempty"`

	// Status A string value representing one of the AlarmStatus enumeration value
	Status *interface{} `form:"status,omitempty" json:"status,omitempty"`

	// AssigneeId A string value representing the assignee user id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssigneeId *string `form:"assigneeId,omitempty" json:"assigneeId,omitempty"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on of next alarm fields: type, severity or status
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// FetchOriginator A boolean value to specify if the alarm originator name will be filled in the AlarmInfo object  field: 'originatorName' or will returns as null.
	FetchOriginator *bool `form:"fetchOriginator,omitempty" json:"fetchOriginator,omitempty"`
}

// GetAllAlarmsParams defines parameters for GetAllAlarms.
type GetAllAlarmsParams struct {
	// SearchStatus A string value representing one of the AlarmSearchStatus enumeration value
	SearchStatus *interface{} `form:"searchStatus,omitempty" json:"searchStatus,omitempty"`

	// Status A string value representing one of the AlarmStatus enumeration value
	Status *interface{} `form:"status,omitempty" json:"status,omitempty"`

	// AssigneeId A string value representing the assignee user id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssigneeId *string `form:"assigneeId,omitempty" json:"assigneeId,omitempty"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on of next alarm fields: type, severity or status
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// FetchOriginator A boolean value to specify if the alarm originator name will be filled in the AlarmInfo object  field: 'originatorName' or will returns as null.
	FetchOriginator *bool `form:"fetchOriginator,omitempty" json:"fetchOriginator,omitempty"`
}

// GetAssetProfileNamesParams defines parameters for GetAssetProfileNames.
type GetAssetProfileNamesParams struct {
	// ActiveOnly Flag indicating whether to retrieve exclusively the names of asset profiles that are referenced by tenant's assets.
	ActiveOnly *bool `form:"activeOnly,omitempty" json:"activeOnly,omitempty"`
}

// GetAssetProfileByIdParams defines parameters for GetAssetProfileById.
type GetAssetProfileByIdParams struct {
	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// GetAssetProfileInfosParams defines parameters for GetAssetProfileInfos.
type GetAssetProfileInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the asset profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetAssetProfilesParams defines parameters for GetAssetProfiles.
type GetAssetProfilesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the asset profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetAssetsByIdsParams defines parameters for GetAssetsByIds.
type GetAssetsByIdsParams struct {
	// AssetIds A list of assets ids, separated by comma ','
	AssetIds interface{} `form:"assetIds" json:"assetIds"`
}

// GetAuditLogsParams defines parameters for GetAuditLogs.
type GetAuditLogsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on one of the next properties: entityType, entityName, userName, actionType, actionStatus.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of audit log to sort by. See the 'Model' tab of the Response Class for more details. Note: entityType sort property is not defined in the AuditLog class, however, it can be used to sort audit logs by types of entities that were logged.
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ActionTypes A String value representing comma-separated list of action types. This parameter is optional, but it can be used to filter results to fetch only audit logs of specific action types. For example, 'LOGIN', 'LOGOUT'. See the 'Model' tab of the Response Class for more details.
	ActionTypes *string `form:"actionTypes,omitempty" json:"actionTypes,omitempty"`
}

// GetAuditLogsByCustomerIdParams defines parameters for GetAuditLogsByCustomerId.
type GetAuditLogsByCustomerIdParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on one of the next properties: entityType, entityName, userName, actionType, actionStatus.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of audit log to sort by. See the 'Model' tab of the Response Class for more details. Note: entityType sort property is not defined in the AuditLog class, however, it can be used to sort audit logs by types of entities that were logged.
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ActionTypes A String value representing comma-separated list of action types. This parameter is optional, but it can be used to filter results to fetch only audit logs of specific action types. For example, 'LOGIN', 'LOGOUT'. See the 'Model' tab of the Response Class for more details.
	ActionTypes *string `form:"actionTypes,omitempty" json:"actionTypes,omitempty"`
}

// GetAuditLogsByEntityIdParams defines parameters for GetAuditLogsByEntityId.
type GetAuditLogsByEntityIdParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on one of the next properties: entityType, entityName, userName, actionType, actionStatus.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of audit log to sort by. See the 'Model' tab of the Response Class for more details. Note: entityType sort property is not defined in the AuditLog class, however, it can be used to sort audit logs by types of entities that were logged.
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ActionTypes A String value representing comma-separated list of action types. This parameter is optional, but it can be used to filter results to fetch only audit logs of specific action types. For example, 'LOGIN', 'LOGOUT'. See the 'Model' tab of the Response Class for more details.
	ActionTypes *string `form:"actionTypes,omitempty" json:"actionTypes,omitempty"`
}

// GetAuditLogsByUserIdParams defines parameters for GetAuditLogsByUserId.
type GetAuditLogsByUserIdParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on one of the next properties: entityType, entityName, userName, actionType, actionStatus.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of audit log to sort by. See the 'Model' tab of the Response Class for more details. Note: entityType sort property is not defined in the AuditLog class, however, it can be used to sort audit logs by types of entities that were logged.
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the AuditLog class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ActionTypes A String value representing comma-separated list of action types. This parameter is optional, but it can be used to filter results to fetch only audit logs of specific action types. For example, 'LOGIN', 'LOGOUT'. See the 'Model' tab of the Response Class for more details.
	ActionTypes *string `form:"actionTypes,omitempty" json:"actionTypes,omitempty"`
}

// CheckTwoFaVerificationCodeParams defines parameters for CheckTwoFaVerificationCode.
type CheckTwoFaVerificationCodeParams struct {
	ProviderType     CheckTwoFaVerificationCodeParamsProviderType `form:"providerType" json:"providerType"`
	VerificationCode string                                       `form:"verificationCode" json:"verificationCode"`
}

// CheckTwoFaVerificationCodeParamsProviderType defines parameters for CheckTwoFaVerificationCode.
type CheckTwoFaVerificationCodeParamsProviderType string

// RequestTwoFaVerificationCodeParams defines parameters for RequestTwoFaVerificationCode.
type RequestTwoFaVerificationCodeParams struct {
	ProviderType RequestTwoFaVerificationCodeParamsProviderType `form:"providerType" json:"providerType"`
}

// RequestTwoFaVerificationCodeParamsProviderType defines parameters for RequestTwoFaVerificationCode.
type RequestTwoFaVerificationCodeParamsProviderType string

// GetComponentDescriptorsByTypesParams defines parameters for GetComponentDescriptorsByTypes.
type GetComponentDescriptorsByTypesParams struct {
	// ComponentTypes List of types of the Rule Nodes, (ENRICHMENT, FILTER, TRANSFORMATION, ACTION or EXTERNAL)
	ComponentTypes interface{} `form:"componentTypes" json:"componentTypes"`

	// RuleChainType Type of the Rule Chain
	RuleChainType *interface{} `form:"ruleChainType,omitempty" json:"ruleChainType,omitempty"`
}

// GetComponentDescriptorsByTypeParams defines parameters for GetComponentDescriptorsByType.
type GetComponentDescriptorsByTypeParams struct {
	// RuleChainType Type of the Rule Chain
	RuleChainType *interface{} `form:"ruleChainType,omitempty" json:"ruleChainType,omitempty"`
}

// GetCustomerAssetInfosParams defines parameters for GetCustomerAssetInfos.
type GetCustomerAssetInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Asset type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// AssetProfileId A string value representing the asset profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssetProfileId *string `form:"assetProfileId,omitempty" json:"assetProfileId,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the asset name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerAssetsParams defines parameters for GetCustomerAssets.
type GetCustomerAssetsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Asset type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the asset name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerDashboardsParams defines parameters for GetCustomerDashboards.
type GetCustomerDashboardsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Mobile Exclude dashboards that are hidden for mobile
	Mobile *bool `form:"mobile,omitempty" json:"mobile,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the dashboard title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerDeviceInfosParams defines parameters for GetCustomerDeviceInfos.
type GetCustomerDeviceInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Device type as the name of the device profile
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// DeviceProfileId A string value representing the device profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	DeviceProfileId *string `form:"deviceProfileId,omitempty" json:"deviceProfileId,omitempty"`

	// Active A boolean value representing the device active flag.
	Active *bool `form:"active,omitempty" json:"active,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the device name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerDevicesParams defines parameters for GetCustomerDevices.
type GetCustomerDevicesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Device type as the name of the device profile
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the device name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerEdgeInfosParams defines parameters for GetCustomerEdgeInfos.
type GetCustomerEdgeInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type A string value representing the edge type. For example, 'default'
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the edge name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerEdgesParams defines parameters for GetCustomerEdges.
type GetCustomerEdgesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type A string value representing the edge type. For example, 'default'
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the edge name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerEntityViewInfosParams defines parameters for GetCustomerEntityViewInfos.
type GetCustomerEntityViewInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type
	//
	// ## Entity View Filter
	//
	// Allows to filter entity views based on their type and the **'starts with'** expression over their name. For example, this entity filter selects all 'Concrete Mixer' entity views which name starts with 'CAT':
	//
	// ```json
	// {
	//   "type": "entityViewType",
	//   "entityViewType": "Concrete Mixer",
	//   "entityViewNameFilter": "CAT"
	// }
	// ```
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the entity view name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerEntityViewsParams defines parameters for GetCustomerEntityViews.
type GetCustomerEntityViewsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type
	//
	// ## Entity View Filter
	//
	// Allows to filter entity views based on their type and the **'starts with'** expression over their name. For example, this entity filter selects all 'Concrete Mixer' entity views which name starts with 'CAT':
	//
	// ```json
	// {
	//   "type": "entityViewType",
	//   "entityViewType": "Concrete Mixer",
	//   "entityViewNameFilter": "CAT"
	// }
	// ```
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the entity view name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomerUsersParams defines parameters for GetCustomerUsers.
type GetCustomerUsersParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the user email.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetCustomersParams defines parameters for GetCustomers.
type GetCustomersParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the customer title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetDashboardByIdParams defines parameters for GetDashboardById.
type GetDashboardByIdParams struct {
	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// UpdateDashboardCustomersJSONBody defines parameters for UpdateDashboardCustomers.
type UpdateDashboardCustomersJSONBody = []string

// AddDashboardCustomersJSONBody defines parameters for AddDashboardCustomers.
type AddDashboardCustomersJSONBody = []string

// RemoveDashboardCustomersJSONBody defines parameters for RemoveDashboardCustomers.
type RemoveDashboardCustomersJSONBody = []string

// SaveDeviceParams defines parameters for SaveDevice.
type SaveDeviceParams struct {
	// AccessToken Optional value of the device credentials to be used during device creation. If omitted, access token will be auto-generated.
	AccessToken *string `form:"accessToken,omitempty" json:"accessToken,omitempty"`
}

// GetAttributesKeysParams defines parameters for GetAttributesKeys.
type GetAttributesKeysParams struct {
	// DeviceProfileId A string value representing the device profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	DeviceProfileId *string `form:"deviceProfileId,omitempty" json:"deviceProfileId,omitempty"`
}

// GetTimeseriesKeys1Params defines parameters for GetTimeseriesKeys1.
type GetTimeseriesKeys1Params struct {
	// DeviceProfileId A string value representing the device profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	DeviceProfileId *string `form:"deviceProfileId,omitempty" json:"deviceProfileId,omitempty"`
}

// GetDeviceProfileNamesParams defines parameters for GetDeviceProfileNames.
type GetDeviceProfileNamesParams struct {
	// ActiveOnly Flag indicating whether to retrieve exclusively the names of device profiles that are referenced by tenant's devices.
	ActiveOnly *bool `form:"activeOnly,omitempty" json:"activeOnly,omitempty"`
}

// GetDeviceProfileByIdParams defines parameters for GetDeviceProfileById.
type GetDeviceProfileByIdParams struct {
	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// GetDeviceProfileInfosParams defines parameters for GetDeviceProfileInfos.
type GetDeviceProfileInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the device profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// TransportType Type of the transport
	TransportType *interface{} `form:"transportType,omitempty" json:"transportType,omitempty"`
}

// GetDeviceProfilesParams defines parameters for GetDeviceProfiles.
type GetDeviceProfilesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the device profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetDevicesByIdsParams defines parameters for GetDevicesByIds.
type GetDevicesByIdsParams struct {
	// DeviceIds A list of devices ids, separated by comma ','
	DeviceIds interface{} `form:"deviceIds" json:"deviceIds"`
}

// GetEdgeAssetsParams defines parameters for GetEdgeAssets.
type GetEdgeAssetsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Asset type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the asset name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Assets with creation time before it won't be queried
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Assets with creation time after it won't be queried
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEdgeDashboardsParams defines parameters for GetEdgeDashboards.
type GetEdgeDashboardsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the dashboard title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetEdgeDevicesParams defines parameters for GetEdgeDevices.
type GetEdgeDevicesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Device type as the name of the device profile
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// DeviceProfileId A string value representing the device profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	DeviceProfileId *string `form:"deviceProfileId,omitempty" json:"deviceProfileId,omitempty"`

	// Active A boolean value representing the device active flag.
	Active *bool `form:"active,omitempty" json:"active,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the device name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Devices with creation time before it won't be queried
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Devices with creation time after it won't be queried
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEdgeEntityViewsParams defines parameters for GetEdgeEntityViews.
type GetEdgeEntityViewsParams struct {
	PageSize     int32   `form:"pageSize" json:"pageSize"`
	Page         int32   `form:"page" json:"page"`
	Type         *string `form:"type,omitempty" json:"type,omitempty"`
	TextSearch   *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`
	SortOrder    *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
	StartTime    *int64  `form:"startTime,omitempty" json:"startTime,omitempty"`
	EndTime      *int64  `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEdgeEventsParams defines parameters for GetEdgeEvents.
type GetEdgeEventsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the edge event type name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Edge events with creation time before it won't be queried
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Edge events with creation time after it won't be queried
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEdgeRuleChainsParams defines parameters for GetEdgeRuleChains.
type GetEdgeRuleChainsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the rule chain name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetEdgesParams defines parameters for GetEdges.
type GetEdgesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the edge name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// CompareEntityDataToVersionParams defines parameters for CompareEntityDataToVersion.
type CompareEntityDataToVersionParams struct {
	// VersionId Version id, for example fd82625bdd7d6131cf8027b44ee967012ecaf990. Represents commit hash.
	VersionId string `form:"versionId" json:"versionId"`
}

// CompareEntityDataToVersionParamsEntityType defines parameters for CompareEntityDataToVersion.
type CompareEntityDataToVersionParamsEntityType string

// LoadEntitiesVersionJSONBody defines parameters for LoadEntitiesVersion.
type LoadEntitiesVersionJSONBody struct {
	union json.RawMessage
}

// ListEntitiesAtVersionParamsEntityType defines parameters for ListEntitiesAtVersion.
type ListEntitiesAtVersionParamsEntityType string

// GetEntityDataInfoParamsEntityType defines parameters for GetEntityDataInfo.
type GetEntityDataInfoParamsEntityType string

// ListVersionsParams defines parameters for ListVersions.
type ListVersionsParams struct {
	// Branch The name of the working branch, for example 'master'
	Branch string `form:"branch" json:"branch"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the entity version name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListEntityTypeVersionsParams defines parameters for ListEntityTypeVersions.
type ListEntityTypeVersionsParams struct {
	// Branch The name of the working branch, for example 'master'
	Branch string `form:"branch" json:"branch"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the entity version name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListEntityTypeVersionsParamsEntityType defines parameters for ListEntityTypeVersions.
type ListEntityTypeVersionsParamsEntityType string

// ListEntityVersionsParams defines parameters for ListEntityVersions.
type ListEntityVersionsParams struct {
	// Branch The name of the working branch, for example 'master'
	Branch string `form:"branch" json:"branch"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the entity version name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListEntityVersionsParamsEntityType defines parameters for ListEntityVersions.
type ListEntityVersionsParamsEntityType string

// FindEntityTimeseriesAndAttributesKeysByQueryParams defines parameters for FindEntityTimeseriesAndAttributesKeysByQuery.
type FindEntityTimeseriesAndAttributesKeysByQueryParams struct {
	// Timeseries Include all unique time-series keys to the result.
	Timeseries bool `form:"timeseries" json:"timeseries"`

	// Attributes Include all unique attribute keys to the result.
	Attributes bool `form:"attributes" json:"attributes"`

	// Scope A string value representing the attributes scope. For example, 'SERVER_SCOPE'.
	Scope *interface{} `form:"scope,omitempty" json:"scope,omitempty"`
}

// GetEvents1Params defines parameters for GetEvents1.
type GetEvents1Params struct {
	// TenantId A string value representing the tenant id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	TenantId string `form:"tenantId" json:"tenantId"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The value is not used in searching.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Events with creation time before it won't be queried.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Events with creation time after it won't be queried.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEventsJSONBody defines parameters for GetEvents.
type GetEventsJSONBody struct {
	union json.RawMessage
}

// GetEventsParams defines parameters for GetEvents.
type GetEventsParams struct {
	// TenantId A string value representing the tenant id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	TenantId string `form:"tenantId" json:"tenantId"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The value is not used in searching.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Events with creation time before it won't be queried.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Events with creation time after it won't be queried.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// ClearEventsJSONBody defines parameters for ClearEvents.
type ClearEventsJSONBody struct {
	union json.RawMessage
}

// ClearEventsParams defines parameters for ClearEvents.
type ClearEventsParams struct {
	// StartTime Timestamp. Events with creation time before it won't be queried.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Events with creation time after it won't be queried.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetEvents2Params defines parameters for GetEvents2.
type GetEvents2Params struct {
	// TenantId A string value representing the tenant id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	TenantId string `form:"tenantId" json:"tenantId"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The value is not used in searching.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime Timestamp. Events with creation time before it won't be queried.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Timestamp. Events with creation time after it won't be queried.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// UploadImageMultipartBody defines parameters for UploadImage.
type UploadImageMultipartBody struct {
	File  openapi_types.File `json:"file"`
	Title *string            `json:"title,omitempty"`
}

// GetImagesParams defines parameters for GetImages.
type GetImagesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// IncludeSystemImages Use 'true' to include system images. Disabled by default. Ignored for requests by users with system administrator authority.
	IncludeSystemImages *bool `form:"includeSystemImages,omitempty" json:"includeSystemImages,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the resource title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// DownloadPublicImageParams defines parameters for DownloadPublicImage.
type DownloadPublicImageParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// DeleteImageParams defines parameters for DeleteImage.
type DeleteImageParams struct {
	Force *bool `form:"force,omitempty" json:"force,omitempty"`
}

// DownloadImagePreviewParams defines parameters for DownloadImagePreview.
type DownloadImagePreviewParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// SaveDeviceWithCredentialsJSONBody defines parameters for SaveDeviceWithCredentials.
type SaveDeviceWithCredentialsJSONBody map[string]interface{}

// ActivateUserParams defines parameters for ActivateUser.
type ActivateUserParams struct {
	SendActivationMail *bool `form:"sendActivationMail,omitempty" json:"sendActivationMail,omitempty"`
}

// ActivateUserByEmailCodeParams defines parameters for ActivateUserByEmailCode.
type ActivateUserByEmailCodeParams struct {
	EmailCode string  `form:"emailCode" json:"emailCode"`
	PkgName   *string `form:"pkgName,omitempty" json:"pkgName,omitempty"`
}

// ActivateEmailParams defines parameters for ActivateEmail.
type ActivateEmailParams struct {
	EmailCode string  `form:"emailCode" json:"emailCode"`
	PkgName   *string `form:"pkgName,omitempty" json:"pkgName,omitempty"`
}

// MobileLoginParams defines parameters for MobileLogin.
type MobileLoginParams struct {
	PkgName string `form:"pkgName" json:"pkgName"`
}

// GetOAuth2ClientsParams defines parameters for GetOAuth2Clients.
type GetOAuth2ClientsParams struct {
	// PkgName Mobile application package name, to find OAuth2 clients where there is configured mobile application with such package name
	PkgName *string `form:"pkgName,omitempty" json:"pkgName,omitempty"`

	// Platform Platform type to search OAuth2 clients for which the usage with this platform type is allowed in the settings. If platform type is not one of allowable values - it will just be ignored
	Platform *interface{} `form:"platform,omitempty" json:"platform,omitempty"`
}

// GetApplicationRedirectParams defines parameters for GetApplicationRedirect.
type GetApplicationRedirectParams struct {
	UserAgent string `json:"User-Agent"`
}

// ResendEmailActivationParams defines parameters for ResendEmailActivation.
type ResendEmailActivationParams struct {
	Email   string  `form:"email" json:"email"`
	PkgName *string `form:"pkgName,omitempty" json:"pkgName,omitempty"`
}

// CheckResetTokenParams defines parameters for CheckResetToken.
type CheckResetTokenParams struct {
	// ResetToken The reset token string.
	ResetToken string `form:"resetToken" json:"resetToken"`
}

// GetNotificationRequestPreviewParams defines parameters for GetNotificationRequestPreview.
type GetNotificationRequestPreviewParams struct {
	// RecipientsPreviewSize Amount of the recipients to show in preview
	RecipientsPreviewSize *int32 `form:"recipientsPreviewSize,omitempty" json:"recipientsPreviewSize,omitempty"`
}

// GetNotificationRequestsParams defines parameters for GetNotificationRequests.
type GetNotificationRequestsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch Case-insensitive 'substring' filed based on the used template name
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetNotificationRulesParams defines parameters for GetNotificationRules.
type GetNotificationRulesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch Case-insensitive 'substring' filter based on rule's name
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListSlackConversationsParams defines parameters for ListSlackConversations.
type ListSlackConversationsParams struct {
	Type ListSlackConversationsParamsType `form:"type" json:"type"`

	// Token Slack bot token. If absent - system Slack settings will be used
	Token *string `form:"token,omitempty" json:"token,omitempty"`
}

// ListSlackConversationsParamsType defines parameters for ListSlackConversations.
type ListSlackConversationsParamsType string

// GetRecipientsForNotificationTargetConfigParams defines parameters for GetRecipientsForNotificationTargetConfig.
type GetRecipientsForNotificationTargetConfigParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`
}

// GetNotificationTargetsParams defines parameters for GetNotificationTargets.
type GetNotificationTargetsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch Case-insensitive 'substring' filed based on the target's name
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetNotificationTemplatesParams defines parameters for GetNotificationTemplates.
type GetNotificationTemplatesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch Case-insensitive 'substring' filter based on template's name and notification type
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// NotificationTypes Comma-separated list of notification types to filter the templates
	NotificationTypes *interface{} `form:"notificationTypes,omitempty" json:"notificationTypes,omitempty"`
}

// GetNotificationsParams defines parameters for GetNotifications.
type GetNotificationsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch Case-insensitive 'substring' filter based on notification subject or text
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *string `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *string `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// UnreadOnly To search for unread notifications only
	UnreadOnly *bool `form:"unreadOnly,omitempty" json:"unreadOnly,omitempty"`

	// DeliveryMethod Delivery method
	DeliveryMethod *interface{} `form:"deliveryMethod,omitempty" json:"deliveryMethod,omitempty"`
}

// MarkAllNotificationsAsReadParams defines parameters for MarkAllNotificationsAsRead.
type MarkAllNotificationsAsReadParams struct {
	// DeliveryMethod Delivery method
	DeliveryMethod *interface{} `form:"deliveryMethod,omitempty" json:"deliveryMethod,omitempty"`
}

// GetUnreadNotificationsCountParams defines parameters for GetUnreadNotificationsCount.
type GetUnreadNotificationsCountParams struct {
	// DeliveryMethod Delivery method
	DeliveryMethod *interface{} `form:"deliveryMethod,omitempty" json:"deliveryMethod,omitempty"`
}

// SaveOtaPackageDataMultipartBody defines parameters for SaveOtaPackageData.
type SaveOtaPackageDataMultipartBody struct {
	// File OTA Package data.
	File openapi_types.File `json:"file"`
}

// SaveOtaPackageDataParams defines parameters for SaveOtaPackageData.
type SaveOtaPackageDataParams struct {
	// Checksum OTA Package checksum. For example, '0xd87f7e0c'
	Checksum *string `form:"checksum,omitempty" json:"checksum,omitempty"`

	// ChecksumAlgorithm OTA Package checksum algorithm.
	ChecksumAlgorithm interface{} `form:"checksumAlgorithm" json:"checksumAlgorithm"`
}

// GetOtaPackagesParams defines parameters for GetOtaPackages.
type GetOtaPackagesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the ota package title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetOtaPackages1Params defines parameters for GetOtaPackages1.
type GetOtaPackages1Params struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the ota package title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// HandleOneWayDeviceRPCRequest1JSONBody defines parameters for HandleOneWayDeviceRPCRequest1.
type HandleOneWayDeviceRPCRequest1JSONBody = string

// HandleTwoWayDeviceRPCRequest1JSONBody defines parameters for HandleTwoWayDeviceRPCRequest1.
type HandleTwoWayDeviceRPCRequest1JSONBody = string

// DeleteDeviceAttributesParams defines parameters for DeleteDeviceAttributes.
type DeleteDeviceAttributesParams struct {
	// Keys A string value representing the comma-separated list of attributes keys. For example, 'active,inactivityAlarmTime'.
	Keys string `form:"keys" json:"keys"`
}

// DeleteEntityTimeseriesParams defines parameters for DeleteEntityTimeseries.
type DeleteEntityTimeseriesParams struct {
	// Keys A string value representing the comma-separated list of telemetry keys. If keys are not selected, the result will return all latest timeseries. For example, 'temperature,humidity'.
	Keys string `form:"keys" json:"keys"`

	// DeleteAllDataForKeys A boolean value to specify if should be deleted all data for selected keys or only data that are in the selected time range.
	DeleteAllDataForKeys *bool `form:"deleteAllDataForKeys,omitempty" json:"deleteAllDataForKeys,omitempty"`

	// StartTs A long value representing the start timestamp of removal time range in milliseconds.
	StartTs *int64 `form:"startTs,omitempty" json:"startTs,omitempty"`

	// EndTs A long value representing the end timestamp of removal time range in milliseconds.
	EndTs *int64 `form:"endTs,omitempty" json:"endTs,omitempty"`

	// DeleteLatest If the parameter is set to true, the latest telemetry can be removed, otherwise, in case that parameter is set to false the latest value will not removed.
	DeleteLatest *bool `form:"deleteLatest,omitempty" json:"deleteLatest,omitempty"`

	// RewriteLatestIfDeleted If the parameter is set to true, the latest telemetry will be rewritten in case that current latest value was removed, otherwise, in case that parameter is set to false the new latest value will not set.
	RewriteLatestIfDeleted *bool `form:"rewriteLatestIfDeleted,omitempty" json:"rewriteLatestIfDeleted,omitempty"`
}

// SaveEntityTelemetryJSONBody defines parameters for SaveEntityTelemetry.
type SaveEntityTelemetryJSONBody = string

// SaveEntityTelemetryWithTTLJSONBody defines parameters for SaveEntityTelemetryWithTTL.
type SaveEntityTelemetryWithTTLJSONBody = string

// GetAttributesParams defines parameters for GetAttributes.
type GetAttributesParams struct {
	// Keys A string value representing the comma-separated list of attributes keys. For example, 'active,inactivityAlarmTime'.
	Keys *string `form:"keys,omitempty" json:"keys,omitempty"`
}

// GetAttributesByScopeParams defines parameters for GetAttributesByScope.
type GetAttributesByScopeParams struct {
	// Keys A string value representing the comma-separated list of attributes keys. For example, 'active,inactivityAlarmTime'.
	Keys *string `form:"keys,omitempty" json:"keys,omitempty"`
}

// GetLatestTimeseriesParams defines parameters for GetLatestTimeseries.
type GetLatestTimeseriesParams struct {
	// Keys A string value representing the comma-separated list of telemetry keys. If keys are not selected, the result will return all latest timeseries. For example, 'temperature,humidity'.
	Keys *string `form:"keys,omitempty" json:"keys,omitempty"`

	// UseStrictDataTypes Enables/disables conversion of telemetry values to strings. Conversion is enabled by default. Set parameter to 'true' in order to disable the conversion.
	UseStrictDataTypes *bool `form:"useStrictDataTypes,omitempty" json:"useStrictDataTypes,omitempty"`
}

// DeleteEntityAttributesParams defines parameters for DeleteEntityAttributes.
type DeleteEntityAttributesParams struct {
	// Keys A string value representing the comma-separated list of attributes keys. For example, 'active,inactivityAlarmTime'.
	Keys string `form:"keys" json:"keys"`
}

// GetQueueStatsByIdsParams defines parameters for GetQueueStatsByIds.
type GetQueueStatsByIdsParams struct {
	// QueueStatsIds A list of queue stats ids, separated by comma ','
	QueueStatsIds interface{} `form:"queueStatsIds" json:"queueStatsIds"`
}

// SaveQueueParams defines parameters for SaveQueue.
type SaveQueueParams struct {
	// ServiceType Service type (implemented only for the TB-RULE-ENGINE)
	ServiceType interface{} `form:"serviceType" json:"serviceType"`
}

// DeleteRelationParams defines parameters for DeleteRelation.
type DeleteRelationParams struct {
	// FromId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	FromId string `form:"fromId" json:"fromId"`

	// FromType A string value representing the entity type. For example, 'DEVICE'
	FromType string `form:"fromType" json:"fromType"`

	// RelationType A string value representing relation type between entities. For example, 'Contains', 'Manages'. It can be any string value.
	RelationType string `form:"relationType" json:"relationType"`

	// RelationTypeGroup A string value representing relation type group. For example, 'COMMON'
	RelationTypeGroup *string `form:"relationTypeGroup,omitempty" json:"relationTypeGroup,omitempty"`

	// ToId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	ToId string `form:"toId" json:"toId"`

	// ToType A string value representing the entity type. For example, 'DEVICE'
	ToType string `form:"toType" json:"toType"`
}

// GetRelationParams defines parameters for GetRelation.
type GetRelationParams struct {
	// FromId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	FromId string `form:"fromId" json:"fromId"`

	// FromType A string value representing the entity type. For example, 'DEVICE'
	FromType string `form:"fromType" json:"fromType"`

	// RelationType A string value representing relation type between entities. For example, 'Contains', 'Manages'. It can be any string value.
	RelationType string `form:"relationType" json:"relationType"`

	// RelationTypeGroup A string value representing relation type group. For example, 'COMMON'
	RelationTypeGroup *string `form:"relationTypeGroup,omitempty" json:"relationTypeGroup,omitempty"`

	// ToId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	ToId string `form:"toId" json:"toId"`

	// ToType A string value representing the entity type. For example, 'DEVICE'
	ToType string `form:"toType" json:"toType"`
}

// FindByToParams defines parameters for FindByTo.
type FindByToParams struct {
	// ToId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	ToId string `form:"toId" json:"toId"`

	// ToType A string value representing the entity type. For example, 'DEVICE'
	ToType string `form:"toType" json:"toType"`

	// RelationTypeGroup A string value representing relation type group. For example, 'COMMON'
	RelationTypeGroup *string `form:"relationTypeGroup,omitempty" json:"relationTypeGroup,omitempty"`
}

// FindInfoByToParams defines parameters for FindInfoByTo.
type FindInfoByToParams struct {
	// ToId A string value representing the entity id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	ToId string `form:"toId" json:"toId"`

	// ToType A string value representing the entity type. For example, 'DEVICE'
	ToType string `form:"toType" json:"toType"`

	// RelationTypeGroup A string value representing relation type group. For example, 'COMMON'
	RelationTypeGroup *string `form:"relationTypeGroup,omitempty" json:"relationTypeGroup,omitempty"`
}

// GetResourcesParams defines parameters for GetResources.
type GetResourcesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// ResourceType A string value representing the resource type.
	ResourceType *interface{} `form:"resourceType,omitempty" json:"resourceType,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the resource title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// DownloadJksResourceIfChangedParams defines parameters for DownloadJksResourceIfChanged.
type DownloadJksResourceIfChangedParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// DownloadJsResourceIfChangedParams defines parameters for DownloadJsResourceIfChanged.
type DownloadJsResourceIfChangedParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// GetLwm2mListObjectsParams defines parameters for GetLwm2mListObjects.
type GetLwm2mListObjectsParams struct {
	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder interface{} `form:"sortOrder" json:"sortOrder"`

	// SortProperty Property of entity to sort by
	SortProperty interface{} `form:"sortProperty" json:"sortProperty"`

	// ObjectIds LwM2M Object ids.
	ObjectIds interface{} `form:"objectIds" json:"objectIds"`
}

// GetLwm2mListObjectsPageParams defines parameters for GetLwm2mListObjectsPage.
type GetLwm2mListObjectsPageParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the resource title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// DownloadLwm2mResourceIfChangedParams defines parameters for DownloadLwm2mResourceIfChanged.
type DownloadLwm2mResourceIfChangedParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// DownloadPkcs12ResourceIfChangedParams defines parameters for DownloadPkcs12ResourceIfChanged.
type DownloadPkcs12ResourceIfChangedParams struct {
	IfNoneMatch *string `json:"If-None-Match,omitempty"`
}

// GetTenantResourcesParams defines parameters for GetTenantResources.
type GetTenantResourcesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the resource title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// HandleOneWayDeviceRPCRequestJSONBody defines parameters for HandleOneWayDeviceRPCRequest.
type HandleOneWayDeviceRPCRequestJSONBody = string

// GetPersistedRpcByDeviceParams defines parameters for GetPersistedRpcByDevice.
type GetPersistedRpcByDeviceParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// RpcStatus Status of the RPC
	RpcStatus *interface{} `form:"rpcStatus,omitempty" json:"rpcStatus,omitempty"`

	// TextSearch Not implemented. Leave empty.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// HandleTwoWayDeviceRPCRequestJSONBody defines parameters for HandleTwoWayDeviceRPCRequest.
type HandleTwoWayDeviceRPCRequestJSONBody = string

// SaveRuleChainMetaDataParams defines parameters for SaveRuleChainMetaData.
type SaveRuleChainMetaDataParams struct {
	// UpdateRelated Update related rule nodes.
	UpdateRelated *bool `form:"updateRelated,omitempty" json:"updateRelated,omitempty"`
}

// TestScriptParams defines parameters for TestScript.
type TestScriptParams struct {
	// ScriptLang Script language: JS or TBEL
	ScriptLang *TestScriptParamsScriptLang `form:"scriptLang,omitempty" json:"scriptLang,omitempty"`
}

// TestScriptParamsScriptLang defines parameters for TestScript.
type TestScriptParamsScriptLang string

// GetRuleChainsParams defines parameters for GetRuleChains.
type GetRuleChainsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Rule chain type (CORE or EDGE)
	Type *interface{} `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the rule chain name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ExportRuleChainsParams defines parameters for ExportRuleChains.
type ExportRuleChainsParams struct {
	// Limit A limit of rule chains to export.
	Limit int32 `form:"limit" json:"limit"`
}

// ImportRuleChainsParams defines parameters for ImportRuleChains.
type ImportRuleChainsParams struct {
	// Overwrite Enables overwrite for existing rule chains with the same name.
	Overwrite *bool `form:"overwrite,omitempty" json:"overwrite,omitempty"`
}

// GetTenantAssetInfosParams defines parameters for GetTenantAssetInfos.
type GetTenantAssetInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Asset type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// AssetProfileId A string value representing the asset profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssetProfileId *string `form:"assetProfileId,omitempty" json:"assetProfileId,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the asset name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantAssetsParams defines parameters for GetTenantAssets.
type GetTenantAssetsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Asset type
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the asset name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantCustomerParams defines parameters for GetTenantCustomer.
type GetTenantCustomerParams struct {
	// CustomerTitle A string value representing the Customer title.
	CustomerTitle string `form:"customerTitle" json:"customerTitle"`
}

// GetTenantDashboards1Params defines parameters for GetTenantDashboards1.
type GetTenantDashboards1Params struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Mobile Exclude dashboards that are hidden for mobile
	Mobile *bool `form:"mobile,omitempty" json:"mobile,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the dashboard title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantDeviceInfosParams defines parameters for GetTenantDeviceInfos.
type GetTenantDeviceInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Device type as the name of the device profile
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// DeviceProfileId A string value representing the device profile id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	DeviceProfileId *string `form:"deviceProfileId,omitempty" json:"deviceProfileId,omitempty"`

	// Active A boolean value representing the device active flag.
	Active *bool `form:"active,omitempty" json:"active,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the device name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantDevicesParams defines parameters for GetTenantDevices.
type GetTenantDevicesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type Device type as the name of the device profile
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the device name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantEdgeInfosParams defines parameters for GetTenantEdgeInfos.
type GetTenantEdgeInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type A string value representing the edge type. For example, 'default'
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the edge name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantEdgesParams defines parameters for GetTenantEdges.
type GetTenantEdgesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type A string value representing the edge type. For example, 'default'
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the edge name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantEntityViewInfosParams defines parameters for GetTenantEntityViewInfos.
type GetTenantEntityViewInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type
	//
	// ## Entity View Filter
	//
	// Allows to filter entity views based on their type and the **'starts with'** expression over their name. For example, this entity filter selects all 'Concrete Mixer' entity views which name starts with 'CAT':
	//
	// ```json
	// {
	//   "type": "entityViewType",
	//   "entityViewType": "Concrete Mixer",
	//   "entityViewNameFilter": "CAT"
	// }
	// ```
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the entity view name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantEntityViewsParams defines parameters for GetTenantEntityViews.
type GetTenantEntityViewsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// Type
	//
	// ## Entity View Filter
	//
	// Allows to filter entity views based on their type and the **'starts with'** expression over their name. For example, this entity filter selects all 'Concrete Mixer' entity views which name starts with 'CAT':
	//
	// ```json
	// {
	//   "type": "entityViewType",
	//   "entityViewType": "Concrete Mixer",
	//   "entityViewNameFilter": "CAT"
	// }
	// ```
	Type *string `form:"type,omitempty" json:"type,omitempty"`

	// TextSearch The case insensitive 'substring' filter based on the entity view name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantDashboardsParams defines parameters for GetTenantDashboards.
type GetTenantDashboardsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the dashboard title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantAdminsParams defines parameters for GetTenantAdmins.
type GetTenantAdminsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the user email.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantInfosParams defines parameters for GetTenantInfos.
type GetTenantInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the tenant name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantProfileInfosParams defines parameters for GetTenantProfileInfos.
type GetTenantProfileInfosParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the tenant profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantProfilesParams defines parameters for GetTenantProfiles.
type GetTenantProfilesParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the tenant profile name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetTenantsParams defines parameters for GetTenants.
type GetTenantsParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the tenant name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// SaveUserParams defines parameters for SaveUser.
type SaveUserParams struct {
	// SendActivationMail Send activation email (or use activation link)
	SendActivationMail *interface{} `form:"sendActivationMail,omitempty" json:"sendActivationMail,omitempty"`
}

// RemoveMobileSessionParams defines parameters for RemoveMobileSession.
type RemoveMobileSessionParams struct {
	XMobileToken string `json:"X-Mobile-Token"`
}

// GetMobileSessionParams defines parameters for GetMobileSession.
type GetMobileSessionParams struct {
	XMobileToken string `json:"X-Mobile-Token"`
}

// SaveMobileSessionParams defines parameters for SaveMobileSession.
type SaveMobileSessionParams struct {
	XMobileToken string `json:"X-Mobile-Token"`
}

// SendActivationEmailParams defines parameters for SendActivationEmail.
type SendActivationEmailParams struct {
	// Email Email of the user
	Email string `form:"email" json:"email"`
}

// SetUserCredentialsEnabledParams defines parameters for SetUserCredentialsEnabled.
type SetUserCredentialsEnabledParams struct {
	// UserCredentialsEnabled Enable ("true") or disable ("false") the credentials.
	UserCredentialsEnabled *interface{} `form:"userCredentialsEnabled,omitempty" json:"userCredentialsEnabled,omitempty"`
}

// GetUsersParams defines parameters for GetUsers.
type GetUsersParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the user email.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetUsersForAssignParams defines parameters for GetUsersForAssign.
type GetUsersForAssignParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the user email.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// FindUsersByQueryParams defines parameters for FindUsersByQuery.
type FindUsersByQueryParams struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the user email.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// GetAlarmsV2Params defines parameters for GetAlarmsV2.
type GetAlarmsV2Params struct {
	// StatusList A list of string values separated by comma ',' representing one of the AlarmSearchStatus enumeration value
	StatusList *interface{} `form:"statusList,omitempty" json:"statusList,omitempty"`

	// SeverityList A list of string values separated by comma ',' representing one of the AlarmSeverity enumeration value
	SeverityList *interface{} `form:"severityList,omitempty" json:"severityList,omitempty"`

	// TypeList A list of string values separated by comma ',' representing alarm types
	TypeList *interface{} `form:"typeList,omitempty" json:"typeList,omitempty"`

	// AssigneeId A string value representing the assignee user id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssigneeId *string `form:"assigneeId,omitempty" json:"assigneeId,omitempty"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on of next alarm fields: type, severity or status
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// GetAllAlarmsV2Params defines parameters for GetAllAlarmsV2.
type GetAllAlarmsV2Params struct {
	// StatusList A list of string values separated by comma ',' representing one of the AlarmSearchStatus enumeration value
	StatusList *interface{} `form:"statusList,omitempty" json:"statusList,omitempty"`

	// SeverityList A list of string values separated by comma ',' representing one of the AlarmSeverity enumeration value
	SeverityList *interface{} `form:"severityList,omitempty" json:"severityList,omitempty"`

	// TypeList A list of string values separated by comma ',' representing alarm types
	TypeList *interface{} `form:"typeList,omitempty" json:"typeList,omitempty"`

	// AssigneeId A string value representing the assignee user id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'
	AssigneeId *string `form:"assigneeId,omitempty" json:"assigneeId,omitempty"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on of next alarm fields: type, severity or status
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// StartTime The start timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	StartTime *int64 `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime The end timestamp in milliseconds of the search time range over the Alarm class field: 'createdTime'.
	EndTime *int64 `form:"endTime,omitempty" json:"endTime,omitempty"`
}

// SaveWidgetTypeParams defines parameters for SaveWidgetType.
type SaveWidgetTypeParams struct {
	// UpdateExistingByFqn Optional boolean parameter indicating whether to update existing widget type by FQN if present instead of creating new one
	UpdateExistingByFqn *bool `form:"updateExistingByFqn,omitempty" json:"updateExistingByFqn,omitempty"`
}

// GetWidgetTypeByIdParams defines parameters for GetWidgetTypeById.
type GetWidgetTypeByIdParams struct {
	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// GetBundleWidgetTypeFqnsParams defines parameters for GetBundleWidgetTypeFqns.
type GetBundleWidgetTypeFqnsParams struct {
	// WidgetsBundleId Widget Bundle Id
	WidgetsBundleId string `form:"widgetsBundleId" json:"widgetsBundleId"`
}

// GetBundleWidgetTypesParams defines parameters for GetBundleWidgetTypes.
type GetBundleWidgetTypesParams struct {
	// WidgetsBundleId Widget Bundle Id
	WidgetsBundleId string `form:"widgetsBundleId" json:"widgetsBundleId"`
}

// GetBundleWidgetTypesDetailsParams defines parameters for GetBundleWidgetTypesDetails.
type GetBundleWidgetTypesDetailsParams struct {
	// WidgetsBundleId Widget Bundle Id
	WidgetsBundleId string `form:"widgetsBundleId" json:"widgetsBundleId"`

	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// GetBundleWidgetTypesInfosParams defines parameters for GetBundleWidgetTypesInfos.
type GetBundleWidgetTypesInfosParams struct {
	// WidgetsBundleId Widget Bundle Id
	WidgetsBundleId string `form:"widgetsBundleId" json:"widgetsBundleId"`

	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the widget type name.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// FullSearch Optional boolean parameter indicating whether search widgets by description not only by name
	FullSearch *bool `form:"fullSearch,omitempty" json:"fullSearch,omitempty"`

	// DeprecatedFilter Optional string parameter indicating whether to include deprecated widgets
	DeprecatedFilter *interface{} `form:"deprecatedFilter,omitempty" json:"deprecatedFilter,omitempty"`

	// WidgetTypeList A list of string values separated by comma ',' representing one of the widget type value
	WidgetTypeList *interface{} `form:"widgetTypeList,omitempty" json:"widgetTypeList,omitempty"`
}

// GetWidgetsBundleByIdParams defines parameters for GetWidgetsBundleById.
type GetWidgetsBundleByIdParams struct {
	// InlineImages Inline images as a data URL (Base64)
	InlineImages *bool `form:"inlineImages,omitempty" json:"inlineImages,omitempty"`
}

// UpdateWidgetsBundleWidgetFqnsJSONBody defines parameters for UpdateWidgetsBundleWidgetFqns.
type UpdateWidgetsBundleWidgetFqnsJSONBody = []string

// UpdateWidgetsBundleWidgetTypesJSONBody defines parameters for UpdateWidgetsBundleWidgetTypes.
type UpdateWidgetsBundleWidgetTypesJSONBody = []string

// GetWidgetsBundles1Params defines parameters for GetWidgetsBundles1.
type GetWidgetsBundles1Params struct {
	// PageSize Maximum amount of entities in a one page
	PageSize int32 `form:"pageSize" json:"pageSize"`

	// Page Sequence number of page starting from 0
	Page int32 `form:"page" json:"page"`

	// TextSearch The case insensitive 'substring' filter based on the widget bundle title.
	TextSearch *string `form:"textSearch,omitempty" json:"textSearch,omitempty"`

	// SortProperty Property of entity to sort by
	SortProperty *interface{} `form:"sortProperty,omitempty" json:"sortProperty,omitempty"`

	// SortOrder Sort order. ASC (ASCENDING) or DESC (DESCENDING)
	SortOrder *interface{} `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`

	// TenantOnly Optional boolean parameter to include only tenant-level bundles without system
	TenantOnly *bool `form:"tenantOnly,omitempty" json:"tenantOnly,omitempty"`

	// FullSearch Optional boolean parameter indicating extended search of widget bundles by description and by name / description of related widget types
	FullSearch *bool `form:"fullSearch,omitempty" json:"fullSearch,omitempty"`
}

// VerifyAndSaveTwoFaAccountConfigJSONRequestBody defines body for VerifyAndSaveTwoFaAccountConfig for application/json ContentType.
type VerifyAndSaveTwoFaAccountConfigJSONRequestBody VerifyAndSaveTwoFaAccountConfigJSONBody

// SubmitTwoFaAccountConfigJSONRequestBody defines body for SubmitTwoFaAccountConfig for application/json ContentType.
type SubmitTwoFaAccountConfigJSONRequestBody SubmitTwoFaAccountConfigJSONBody

// SavePlatformTwoFaSettingsJSONRequestBody defines body for SavePlatformTwoFaSettings for application/json ContentType.
type SavePlatformTwoFaSettingsJSONRequestBody = PlatformTwoFaSettings

// SaveAutoCommitSettingsJSONRequestBody defines body for SaveAutoCommitSettings for application/json ContentType.
type SaveAutoCommitSettingsJSONRequestBody = AutoCommitSettings

// SaveJwtSettingsJSONRequestBody defines body for SaveJwtSettings for application/json ContentType.
type SaveJwtSettingsJSONRequestBody = JwtSettings

// SaveRepositorySettingsJSONRequestBody defines body for SaveRepositorySettings for application/json ContentType.
type SaveRepositorySettingsJSONRequestBody = RepositorySettings

// CheckRepositoryAccessJSONRequestBody defines body for CheckRepositoryAccess for application/json ContentType.
type CheckRepositoryAccessJSONRequestBody = RepositorySettings

// SaveSecuritySettingsJSONRequestBody defines body for SaveSecuritySettings for application/json ContentType.
type SaveSecuritySettingsJSONRequestBody = SecuritySettings

// SaveAdminSettingsJSONRequestBody defines body for SaveAdminSettings for application/json ContentType.
type SaveAdminSettingsJSONRequestBody = AdminSettings

// SendTestMailJSONRequestBody defines body for SendTestMail for application/json ContentType.
type SendTestMailJSONRequestBody = AdminSettings

// SendTestSmsJSONRequestBody defines body for SendTestSms for application/json ContentType.
type SendTestSmsJSONRequestBody = TestSmsRequest

// SaveAlarmJSONRequestBody defines body for SaveAlarm for application/json ContentType.
type SaveAlarmJSONRequestBody = Alarm

// CountAlarmsByQueryJSONRequestBody defines body for CountAlarmsByQuery for application/json ContentType.
type CountAlarmsByQueryJSONRequestBody = AlarmCountQuery

// FindAlarmDataByQueryJSONRequestBody defines body for FindAlarmDataByQuery for application/json ContentType.
type FindAlarmDataByQueryJSONRequestBody = AlarmDataQuery

// SaveAssetJSONRequestBody defines body for SaveAsset for application/json ContentType.
type SaveAssetJSONRequestBody = Asset

// ProcessAssetsBulkImportJSONRequestBody defines body for ProcessAssetsBulkImport for application/json ContentType.
type ProcessAssetsBulkImportJSONRequestBody = BulkImportRequest

// SaveAssetProfileJSONRequestBody defines body for SaveAssetProfile for application/json ContentType.
type SaveAssetProfileJSONRequestBody = AssetProfile

// ChangePasswordJSONRequestBody defines body for ChangePassword for application/json ContentType.
type ChangePasswordJSONRequestBody = ChangePasswordRequest

// PostApiAuthLoginJSONRequestBody defines body for PostApiAuthLogin for application/json ContentType.
type PostApiAuthLoginJSONRequestBody = LoginRequest

// SaveCustomerJSONRequestBody defines body for SaveCustomer for application/json ContentType.
type SaveCustomerJSONRequestBody = Customer

// ClaimDeviceJSONRequestBody defines body for ClaimDevice for application/json ContentType.
type ClaimDeviceJSONRequestBody = ClaimRequest

// SaveDashboardJSONRequestBody defines body for SaveDashboard for application/json ContentType.
type SaveDashboardJSONRequestBody = Dashboard

// UpdateDashboardCustomersJSONRequestBody defines body for UpdateDashboardCustomers for application/json ContentType.
type UpdateDashboardCustomersJSONRequestBody = UpdateDashboardCustomersJSONBody

// AddDashboardCustomersJSONRequestBody defines body for AddDashboardCustomers for application/json ContentType.
type AddDashboardCustomersJSONRequestBody = AddDashboardCustomersJSONBody

// RemoveDashboardCustomersJSONRequestBody defines body for RemoveDashboardCustomers for application/json ContentType.
type RemoveDashboardCustomersJSONRequestBody = RemoveDashboardCustomersJSONBody

// SaveDeviceJSONRequestBody defines body for SaveDevice for application/json ContentType.
type SaveDeviceJSONRequestBody = Device

// SaveDeviceWithCredentials1JSONRequestBody defines body for SaveDeviceWithCredentials1 for application/json ContentType.
type SaveDeviceWithCredentials1JSONRequestBody = SaveDeviceWithCredentialsRequest

// ProcessDevicesBulkImportJSONRequestBody defines body for ProcessDevicesBulkImport for application/json ContentType.
type ProcessDevicesBulkImportJSONRequestBody = BulkImportRequest

// UpdateDeviceCredentialsJSONRequestBody defines body for UpdateDeviceCredentials for application/json ContentType.
type UpdateDeviceCredentialsJSONRequestBody = DeviceCredentials

// SaveDeviceProfileJSONRequestBody defines body for SaveDeviceProfile for application/json ContentType.
type SaveDeviceProfileJSONRequestBody = DeviceProfile

// SaveEdgeJSONRequestBody defines body for SaveEdge for application/json ContentType.
type SaveEdgeJSONRequestBody = Edge

// ProcessEdgesBulkImportJSONRequestBody defines body for ProcessEdgesBulkImport for application/json ContentType.
type ProcessEdgesBulkImportJSONRequestBody = BulkImportRequest

// LoadEntitiesVersionJSONRequestBody defines body for LoadEntitiesVersion for application/json ContentType.
type LoadEntitiesVersionJSONRequestBody LoadEntitiesVersionJSONBody

// CountEntitiesByQueryJSONRequestBody defines body for CountEntitiesByQuery for application/json ContentType.
type CountEntitiesByQueryJSONRequestBody = EntityCountQuery

// FindEntityDataByQueryJSONRequestBody defines body for FindEntityDataByQuery for application/json ContentType.
type FindEntityDataByQueryJSONRequestBody = EntityDataQuery

// FindEntityTimeseriesAndAttributesKeysByQueryJSONRequestBody defines body for FindEntityTimeseriesAndAttributesKeysByQuery for application/json ContentType.
type FindEntityTimeseriesAndAttributesKeysByQueryJSONRequestBody = EntityDataQuery

// SaveEntityViewJSONRequestBody defines body for SaveEntityView for application/json ContentType.
type SaveEntityViewJSONRequestBody = EntityView

// FindByQuery1JSONRequestBody defines body for FindByQuery1 for application/json ContentType.
type FindByQuery1JSONRequestBody = EntityViewSearchQuery

// GetEventsJSONRequestBody defines body for GetEvents for application/json ContentType.
type GetEventsJSONRequestBody GetEventsJSONBody

// ClearEventsJSONRequestBody defines body for ClearEvents for application/json ContentType.
type ClearEventsJSONRequestBody ClearEventsJSONBody

// UploadImageMultipartRequestBody defines body for UploadImage for multipart/form-data ContentType.
type UploadImageMultipartRequestBody UploadImageMultipartBody

// ImportImageJSONRequestBody defines body for ImportImage for application/json ContentType.
type ImportImageJSONRequestBody = ImageExportData

// UpdateImageInfoJSONRequestBody defines body for UpdateImageInfo for application/json ContentType.
type UpdateImageInfoJSONRequestBody = TbResourceInfo

// SaveDeviceWithCredentialsJSONRequestBody defines body for SaveDeviceWithCredentials for application/json ContentType.
type SaveDeviceWithCredentialsJSONRequestBody SaveDeviceWithCredentialsJSONBody

// SaveMobileAppSettingsJSONRequestBody defines body for SaveMobileAppSettings for application/json ContentType.
type SaveMobileAppSettingsJSONRequestBody = MobileAppSettings

// ActivateUserJSONRequestBody defines body for ActivateUser for application/json ContentType.
type ActivateUserJSONRequestBody = ActivateUserRequest

// RequestResetPasswordByEmailJSONRequestBody defines body for RequestResetPasswordByEmail for application/json ContentType.
type RequestResetPasswordByEmailJSONRequestBody = ResetPasswordEmailRequest

// SignUpJSONRequestBody defines body for SignUp for application/json ContentType.
type SignUpJSONRequestBody = SignUpRequest

// CreateNotificationRequestJSONRequestBody defines body for CreateNotificationRequest for application/json ContentType.
type CreateNotificationRequestJSONRequestBody = NotificationRequest

// GetNotificationRequestPreviewJSONRequestBody defines body for GetNotificationRequestPreview for application/json ContentType.
type GetNotificationRequestPreviewJSONRequestBody = NotificationRequest

// SaveNotificationRuleJSONRequestBody defines body for SaveNotificationRule for application/json ContentType.
type SaveNotificationRuleJSONRequestBody = NotificationRule

// SaveNotificationSettingsJSONRequestBody defines body for SaveNotificationSettings for application/json ContentType.
type SaveNotificationSettingsJSONRequestBody = NotificationSettings

// SaveUserNotificationSettingsJSONRequestBody defines body for SaveUserNotificationSettings for application/json ContentType.
type SaveUserNotificationSettingsJSONRequestBody = UserNotificationSettings

// SaveNotificationTargetJSONRequestBody defines body for SaveNotificationTarget for application/json ContentType.
type SaveNotificationTargetJSONRequestBody = NotificationTarget

// GetRecipientsForNotificationTargetConfigJSONRequestBody defines body for GetRecipientsForNotificationTargetConfig for application/json ContentType.
type GetRecipientsForNotificationTargetConfigJSONRequestBody = NotificationTarget

// SaveNotificationTemplateJSONRequestBody defines body for SaveNotificationTemplate for application/json ContentType.
type SaveNotificationTemplateJSONRequestBody = NotificationTemplate

// SaveOAuth2InfoJSONRequestBody defines body for SaveOAuth2Info for application/json ContentType.
type SaveOAuth2InfoJSONRequestBody = OAuth2Info

// SaveClientRegistrationTemplateJSONRequestBody defines body for SaveClientRegistrationTemplate for application/json ContentType.
type SaveClientRegistrationTemplateJSONRequestBody = OAuth2ClientRegistrationTemplate

// SaveOtaPackageInfoJSONRequestBody defines body for SaveOtaPackageInfo for application/json ContentType.
type SaveOtaPackageInfoJSONRequestBody = SaveOtaPackageInfoRequest

// SaveOtaPackageDataMultipartRequestBody defines body for SaveOtaPackageData for multipart/form-data ContentType.
type SaveOtaPackageDataMultipartRequestBody SaveOtaPackageDataMultipartBody

// HandleOneWayDeviceRPCRequest1JSONRequestBody defines body for HandleOneWayDeviceRPCRequest1 for application/json ContentType.
type HandleOneWayDeviceRPCRequest1JSONRequestBody = HandleOneWayDeviceRPCRequest1JSONBody

// HandleTwoWayDeviceRPCRequest1JSONRequestBody defines body for HandleTwoWayDeviceRPCRequest1 for application/json ContentType.
type HandleTwoWayDeviceRPCRequest1JSONRequestBody = HandleTwoWayDeviceRPCRequest1JSONBody

// SaveEntityAttributesV2JSONRequestBody defines body for SaveEntityAttributesV2 for application/json ContentType.
type SaveEntityAttributesV2JSONRequestBody = JsonNode

// SaveEntityTelemetryJSONRequestBody defines body for SaveEntityTelemetry for application/json ContentType.
type SaveEntityTelemetryJSONRequestBody = SaveEntityTelemetryJSONBody

// SaveEntityTelemetryWithTTLJSONRequestBody defines body for SaveEntityTelemetryWithTTL for application/json ContentType.
type SaveEntityTelemetryWithTTLJSONRequestBody = SaveEntityTelemetryWithTTLJSONBody

// SaveQueueJSONRequestBody defines body for SaveQueue for application/json ContentType.
type SaveQueueJSONRequestBody = Queue

// HandleOneWayDeviceRPCRequestJSONRequestBody defines body for HandleOneWayDeviceRPCRequest for application/json ContentType.
type HandleOneWayDeviceRPCRequestJSONRequestBody = HandleOneWayDeviceRPCRequestJSONBody

// HandleTwoWayDeviceRPCRequestJSONRequestBody defines body for HandleTwoWayDeviceRPCRequest for application/json ContentType.
type HandleTwoWayDeviceRPCRequestJSONRequestBody = HandleTwoWayDeviceRPCRequestJSONBody

// SaveRuleChainJSONRequestBody defines body for SaveRuleChain for application/json ContentType.
type SaveRuleChainJSONRequestBody = RuleChain

// SaveRuleChain1JSONRequestBody defines body for SaveRuleChain1 for application/json ContentType.
type SaveRuleChain1JSONRequestBody = DefaultRuleChainCreateRequest

// SaveRuleChainMetaDataJSONRequestBody defines body for SaveRuleChainMetaData for application/json ContentType.
type SaveRuleChainMetaDataJSONRequestBody = RuleChainMetaData

// TestScriptJSONRequestBody defines body for TestScript for application/json ContentType.
type TestScriptJSONRequestBody = JsonNode

// ImportRuleChainsJSONRequestBody defines body for ImportRuleChains for application/json ContentType.
type ImportRuleChainsJSONRequestBody = RuleChainData

// SaveTenantJSONRequestBody defines body for SaveTenant for application/json ContentType.
type SaveTenantJSONRequestBody = Tenant

// SetTenantHomeDashboardInfoJSONRequestBody defines body for SetTenantHomeDashboardInfo for application/json ContentType.
type SetTenantHomeDashboardInfoJSONRequestBody = HomeDashboardInfo

// SaveTenantProfileJSONRequestBody defines body for SaveTenantProfile for application/json ContentType.
type SaveTenantProfileJSONRequestBody = TenantProfile

// SaveUserJSONRequestBody defines body for SaveUser for application/json ContentType.
type SaveUserJSONRequestBody = User

// SaveMobileSessionJSONRequestBody defines body for SaveMobileSession for application/json ContentType.
type SaveMobileSessionJSONRequestBody = MobileSessionInfo

// SaveUserSettingsJSONRequestBody defines body for SaveUserSettings for application/json ContentType.
type SaveUserSettingsJSONRequestBody = JsonNode

// PutUserSettingsJSONRequestBody defines body for PutUserSettings for application/json ContentType.
type PutUserSettingsJSONRequestBody = JsonNode

// PutUserSettings1JSONRequestBody defines body for PutUserSettings1 for application/json ContentType.
type PutUserSettings1JSONRequestBody = JsonNode

// SaveWidgetTypeJSONRequestBody defines body for SaveWidgetType for application/json ContentType.
type SaveWidgetTypeJSONRequestBody = WidgetTypeDetails

// SaveWidgetsBundleJSONRequestBody defines body for SaveWidgetsBundle for application/json ContentType.
type SaveWidgetsBundleJSONRequestBody = WidgetsBundle

// UpdateWidgetsBundleWidgetFqnsJSONRequestBody defines body for UpdateWidgetsBundleWidgetFqns for application/json ContentType.
type UpdateWidgetsBundleWidgetFqnsJSONRequestBody = UpdateWidgetsBundleWidgetFqnsJSONBody

// UpdateWidgetsBundleWidgetTypesJSONRequestBody defines body for UpdateWidgetsBundleWidgetTypes for application/json ContentType.
type UpdateWidgetsBundleWidgetTypesJSONRequestBody = UpdateWidgetsBundleWidgetTypesJSONBody

// AsBackupCodeTwoFaAccountConfig returns the union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as a BackupCodeTwoFaAccountConfig
func (t AccountTwoFaSettings_Configs_AdditionalProperties) AsBackupCodeTwoFaAccountConfig() (BackupCodeTwoFaAccountConfig, error) {
	var body BackupCodeTwoFaAccountConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackupCodeTwoFaAccountConfig overwrites any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as the provided BackupCodeTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) FromBackupCodeTwoFaAccountConfig(v BackupCodeTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackupCodeTwoFaAccountConfig performs a merge with any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties, using the provided BackupCodeTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) MergeBackupCodeTwoFaAccountConfig(v BackupCodeTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEmailTwoFaAccountConfig returns the union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as a EmailTwoFaAccountConfig
func (t AccountTwoFaSettings_Configs_AdditionalProperties) AsEmailTwoFaAccountConfig() (EmailTwoFaAccountConfig, error) {
	var body EmailTwoFaAccountConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEmailTwoFaAccountConfig overwrites any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as the provided EmailTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) FromEmailTwoFaAccountConfig(v EmailTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEmailTwoFaAccountConfig performs a merge with any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties, using the provided EmailTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) MergeEmailTwoFaAccountConfig(v EmailTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmsTwoFaAccountConfig returns the union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as a SmsTwoFaAccountConfig
func (t AccountTwoFaSettings_Configs_AdditionalProperties) AsSmsTwoFaAccountConfig() (SmsTwoFaAccountConfig, error) {
	var body SmsTwoFaAccountConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmsTwoFaAccountConfig overwrites any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as the provided SmsTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) FromSmsTwoFaAccountConfig(v SmsTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmsTwoFaAccountConfig performs a merge with any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties, using the provided SmsTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) MergeSmsTwoFaAccountConfig(v SmsTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTotpTwoFaAccountConfig returns the union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as a TotpTwoFaAccountConfig
func (t AccountTwoFaSettings_Configs_AdditionalProperties) AsTotpTwoFaAccountConfig() (TotpTwoFaAccountConfig, error) {
	var body TotpTwoFaAccountConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTotpTwoFaAccountConfig overwrites any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties as the provided TotpTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) FromTotpTwoFaAccountConfig(v TotpTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTotpTwoFaAccountConfig performs a merge with any union data inside the AccountTwoFaSettings_Configs_AdditionalProperties, using the provided TotpTwoFaAccountConfig
func (t *AccountTwoFaSettings_Configs_AdditionalProperties) MergeTotpTwoFaAccountConfig(v TotpTwoFaAccountConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AccountTwoFaSettings_Configs_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AccountTwoFaSettings_Configs_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDurationAlarmConditionSpec returns the union data inside the AlarmCondition_Spec as a DurationAlarmConditionSpec
func (t AlarmCondition_Spec) AsDurationAlarmConditionSpec() (DurationAlarmConditionSpec, error) {
	var body DurationAlarmConditionSpec
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDurationAlarmConditionSpec overwrites any union data inside the AlarmCondition_Spec as the provided DurationAlarmConditionSpec
func (t *AlarmCondition_Spec) FromDurationAlarmConditionSpec(v DurationAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDurationAlarmConditionSpec performs a merge with any union data inside the AlarmCondition_Spec, using the provided DurationAlarmConditionSpec
func (t *AlarmCondition_Spec) MergeDurationAlarmConditionSpec(v DurationAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRepeatingAlarmConditionSpec returns the union data inside the AlarmCondition_Spec as a RepeatingAlarmConditionSpec
func (t AlarmCondition_Spec) AsRepeatingAlarmConditionSpec() (RepeatingAlarmConditionSpec, error) {
	var body RepeatingAlarmConditionSpec
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRepeatingAlarmConditionSpec overwrites any union data inside the AlarmCondition_Spec as the provided RepeatingAlarmConditionSpec
func (t *AlarmCondition_Spec) FromRepeatingAlarmConditionSpec(v RepeatingAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRepeatingAlarmConditionSpec performs a merge with any union data inside the AlarmCondition_Spec, using the provided RepeatingAlarmConditionSpec
func (t *AlarmCondition_Spec) MergeRepeatingAlarmConditionSpec(v RepeatingAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSimpleAlarmConditionSpec returns the union data inside the AlarmCondition_Spec as a SimpleAlarmConditionSpec
func (t AlarmCondition_Spec) AsSimpleAlarmConditionSpec() (SimpleAlarmConditionSpec, error) {
	var body SimpleAlarmConditionSpec
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSimpleAlarmConditionSpec overwrites any union data inside the AlarmCondition_Spec as the provided SimpleAlarmConditionSpec
func (t *AlarmCondition_Spec) FromSimpleAlarmConditionSpec(v SimpleAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSimpleAlarmConditionSpec performs a merge with any union data inside the AlarmCondition_Spec, using the provided SimpleAlarmConditionSpec
func (t *AlarmCondition_Spec) MergeSimpleAlarmConditionSpec(v SimpleAlarmConditionSpec) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AlarmCondition_Spec) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AlarmCondition_Spec) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsBooleanFilterPredicate returns the union data inside the AlarmConditionFilter_Predicate as a BooleanFilterPredicate
func (t AlarmConditionFilter_Predicate) AsBooleanFilterPredicate() (BooleanFilterPredicate, error) {
	var body BooleanFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBooleanFilterPredicate overwrites any union data inside the AlarmConditionFilter_Predicate as the provided BooleanFilterPredicate
func (t *AlarmConditionFilter_Predicate) FromBooleanFilterPredicate(v BooleanFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBooleanFilterPredicate performs a merge with any union data inside the AlarmConditionFilter_Predicate, using the provided BooleanFilterPredicate
func (t *AlarmConditionFilter_Predicate) MergeBooleanFilterPredicate(v BooleanFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsComplexFilterPredicate returns the union data inside the AlarmConditionFilter_Predicate as a ComplexFilterPredicate
func (t AlarmConditionFilter_Predicate) AsComplexFilterPredicate() (ComplexFilterPredicate, error) {
	var body ComplexFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromComplexFilterPredicate overwrites any union data inside the AlarmConditionFilter_Predicate as the provided ComplexFilterPredicate
func (t *AlarmConditionFilter_Predicate) FromComplexFilterPredicate(v ComplexFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeComplexFilterPredicate performs a merge with any union data inside the AlarmConditionFilter_Predicate, using the provided ComplexFilterPredicate
func (t *AlarmConditionFilter_Predicate) MergeComplexFilterPredicate(v ComplexFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNumericFilterPredicate returns the union data inside the AlarmConditionFilter_Predicate as a NumericFilterPredicate
func (t AlarmConditionFilter_Predicate) AsNumericFilterPredicate() (NumericFilterPredicate, error) {
	var body NumericFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNumericFilterPredicate overwrites any union data inside the AlarmConditionFilter_Predicate as the provided NumericFilterPredicate
func (t *AlarmConditionFilter_Predicate) FromNumericFilterPredicate(v NumericFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNumericFilterPredicate performs a merge with any union data inside the AlarmConditionFilter_Predicate, using the provided NumericFilterPredicate
func (t *AlarmConditionFilter_Predicate) MergeNumericFilterPredicate(v NumericFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStringFilterPredicate returns the union data inside the AlarmConditionFilter_Predicate as a StringFilterPredicate
func (t AlarmConditionFilter_Predicate) AsStringFilterPredicate() (StringFilterPredicate, error) {
	var body StringFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStringFilterPredicate overwrites any union data inside the AlarmConditionFilter_Predicate as the provided StringFilterPredicate
func (t *AlarmConditionFilter_Predicate) FromStringFilterPredicate(v StringFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStringFilterPredicate performs a merge with any union data inside the AlarmConditionFilter_Predicate, using the provided StringFilterPredicate
func (t *AlarmConditionFilter_Predicate) MergeStringFilterPredicate(v StringFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AlarmConditionFilter_Predicate) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AlarmConditionFilter_Predicate) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiUsageStateFilter returns the union data inside the AlarmCountQuery_EntityFilter as a ApiUsageStateFilter
func (t AlarmCountQuery_EntityFilter) AsApiUsageStateFilter() (ApiUsageStateFilter, error) {
	var body ApiUsageStateFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageStateFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided ApiUsageStateFilter
func (t *AlarmCountQuery_EntityFilter) FromApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageStateFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided ApiUsageStateFilter
func (t *AlarmCountQuery_EntityFilter) MergeApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetSearchQueryFilter returns the union data inside the AlarmCountQuery_EntityFilter as a AssetSearchQueryFilter
func (t AlarmCountQuery_EntityFilter) AsAssetSearchQueryFilter() (AssetSearchQueryFilter, error) {
	var body AssetSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetSearchQueryFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided AssetSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) FromAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetSearchQueryFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided AssetSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) MergeAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetTypeFilter returns the union data inside the AlarmCountQuery_EntityFilter as a AssetTypeFilter
func (t AlarmCountQuery_EntityFilter) AsAssetTypeFilter() (AssetTypeFilter, error) {
	var body AssetTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetTypeFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided AssetTypeFilter
func (t *AlarmCountQuery_EntityFilter) FromAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetTypeFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided AssetTypeFilter
func (t *AlarmCountQuery_EntityFilter) MergeAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceSearchQueryFilter returns the union data inside the AlarmCountQuery_EntityFilter as a DeviceSearchQueryFilter
func (t AlarmCountQuery_EntityFilter) AsDeviceSearchQueryFilter() (DeviceSearchQueryFilter, error) {
	var body DeviceSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceSearchQueryFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided DeviceSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) FromDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceSearchQueryFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided DeviceSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) MergeDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceTypeFilter returns the union data inside the AlarmCountQuery_EntityFilter as a DeviceTypeFilter
func (t AlarmCountQuery_EntityFilter) AsDeviceTypeFilter() (DeviceTypeFilter, error) {
	var body DeviceTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceTypeFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided DeviceTypeFilter
func (t *AlarmCountQuery_EntityFilter) FromDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceTypeFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided DeviceTypeFilter
func (t *AlarmCountQuery_EntityFilter) MergeDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeSearchQueryFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EdgeSearchQueryFilter
func (t AlarmCountQuery_EntityFilter) AsEdgeSearchQueryFilter() (EdgeSearchQueryFilter, error) {
	var body EdgeSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeSearchQueryFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EdgeSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) FromEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeSearchQueryFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EdgeSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) MergeEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeTypeFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EdgeTypeFilter
func (t AlarmCountQuery_EntityFilter) AsEdgeTypeFilter() (EdgeTypeFilter, error) {
	var body EdgeTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeTypeFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EdgeTypeFilter
func (t *AlarmCountQuery_EntityFilter) FromEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeTypeFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EdgeTypeFilter
func (t *AlarmCountQuery_EntityFilter) MergeEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityListFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EntityListFilter
func (t AlarmCountQuery_EntityFilter) AsEntityListFilter() (EntityListFilter, error) {
	var body EntityListFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityListFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EntityListFilter
func (t *AlarmCountQuery_EntityFilter) FromEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityListFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EntityListFilter
func (t *AlarmCountQuery_EntityFilter) MergeEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityNameFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EntityNameFilter
func (t AlarmCountQuery_EntityFilter) AsEntityNameFilter() (EntityNameFilter, error) {
	var body EntityNameFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityNameFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EntityNameFilter
func (t *AlarmCountQuery_EntityFilter) FromEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityNameFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EntityNameFilter
func (t *AlarmCountQuery_EntityFilter) MergeEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityTypeFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EntityTypeFilter
func (t AlarmCountQuery_EntityFilter) AsEntityTypeFilter() (EntityTypeFilter, error) {
	var body EntityTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityTypeFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EntityTypeFilter
func (t *AlarmCountQuery_EntityFilter) FromEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityTypeFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EntityTypeFilter
func (t *AlarmCountQuery_EntityFilter) MergeEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewSearchQueryFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EntityViewSearchQueryFilter
func (t AlarmCountQuery_EntityFilter) AsEntityViewSearchQueryFilter() (EntityViewSearchQueryFilter, error) {
	var body EntityViewSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewSearchQueryFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EntityViewSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) FromEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewSearchQueryFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EntityViewSearchQueryFilter
func (t *AlarmCountQuery_EntityFilter) MergeEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewTypeFilter returns the union data inside the AlarmCountQuery_EntityFilter as a EntityViewTypeFilter
func (t AlarmCountQuery_EntityFilter) AsEntityViewTypeFilter() (EntityViewTypeFilter, error) {
	var body EntityViewTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewTypeFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided EntityViewTypeFilter
func (t *AlarmCountQuery_EntityFilter) FromEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewTypeFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided EntityViewTypeFilter
func (t *AlarmCountQuery_EntityFilter) MergeEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRelationsQueryFilter returns the union data inside the AlarmCountQuery_EntityFilter as a RelationsQueryFilter
func (t AlarmCountQuery_EntityFilter) AsRelationsQueryFilter() (RelationsQueryFilter, error) {
	var body RelationsQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRelationsQueryFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided RelationsQueryFilter
func (t *AlarmCountQuery_EntityFilter) FromRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRelationsQueryFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided RelationsQueryFilter
func (t *AlarmCountQuery_EntityFilter) MergeRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSingleEntityFilter returns the union data inside the AlarmCountQuery_EntityFilter as a SingleEntityFilter
func (t AlarmCountQuery_EntityFilter) AsSingleEntityFilter() (SingleEntityFilter, error) {
	var body SingleEntityFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSingleEntityFilter overwrites any union data inside the AlarmCountQuery_EntityFilter as the provided SingleEntityFilter
func (t *AlarmCountQuery_EntityFilter) FromSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSingleEntityFilter performs a merge with any union data inside the AlarmCountQuery_EntityFilter, using the provided SingleEntityFilter
func (t *AlarmCountQuery_EntityFilter) MergeSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AlarmCountQuery_EntityFilter) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AlarmCountQuery_EntityFilter) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiUsageStateFilter returns the union data inside the AlarmDataQuery_EntityFilter as a ApiUsageStateFilter
func (t AlarmDataQuery_EntityFilter) AsApiUsageStateFilter() (ApiUsageStateFilter, error) {
	var body ApiUsageStateFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageStateFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided ApiUsageStateFilter
func (t *AlarmDataQuery_EntityFilter) FromApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageStateFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided ApiUsageStateFilter
func (t *AlarmDataQuery_EntityFilter) MergeApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetSearchQueryFilter returns the union data inside the AlarmDataQuery_EntityFilter as a AssetSearchQueryFilter
func (t AlarmDataQuery_EntityFilter) AsAssetSearchQueryFilter() (AssetSearchQueryFilter, error) {
	var body AssetSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetSearchQueryFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided AssetSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) FromAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetSearchQueryFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided AssetSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) MergeAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetTypeFilter returns the union data inside the AlarmDataQuery_EntityFilter as a AssetTypeFilter
func (t AlarmDataQuery_EntityFilter) AsAssetTypeFilter() (AssetTypeFilter, error) {
	var body AssetTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetTypeFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided AssetTypeFilter
func (t *AlarmDataQuery_EntityFilter) FromAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetTypeFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided AssetTypeFilter
func (t *AlarmDataQuery_EntityFilter) MergeAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceSearchQueryFilter returns the union data inside the AlarmDataQuery_EntityFilter as a DeviceSearchQueryFilter
func (t AlarmDataQuery_EntityFilter) AsDeviceSearchQueryFilter() (DeviceSearchQueryFilter, error) {
	var body DeviceSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceSearchQueryFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided DeviceSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) FromDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceSearchQueryFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided DeviceSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) MergeDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceTypeFilter returns the union data inside the AlarmDataQuery_EntityFilter as a DeviceTypeFilter
func (t AlarmDataQuery_EntityFilter) AsDeviceTypeFilter() (DeviceTypeFilter, error) {
	var body DeviceTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceTypeFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided DeviceTypeFilter
func (t *AlarmDataQuery_EntityFilter) FromDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceTypeFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided DeviceTypeFilter
func (t *AlarmDataQuery_EntityFilter) MergeDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeSearchQueryFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EdgeSearchQueryFilter
func (t AlarmDataQuery_EntityFilter) AsEdgeSearchQueryFilter() (EdgeSearchQueryFilter, error) {
	var body EdgeSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeSearchQueryFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EdgeSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) FromEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeSearchQueryFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EdgeSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) MergeEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeTypeFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EdgeTypeFilter
func (t AlarmDataQuery_EntityFilter) AsEdgeTypeFilter() (EdgeTypeFilter, error) {
	var body EdgeTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeTypeFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EdgeTypeFilter
func (t *AlarmDataQuery_EntityFilter) FromEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeTypeFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EdgeTypeFilter
func (t *AlarmDataQuery_EntityFilter) MergeEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityListFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EntityListFilter
func (t AlarmDataQuery_EntityFilter) AsEntityListFilter() (EntityListFilter, error) {
	var body EntityListFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityListFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EntityListFilter
func (t *AlarmDataQuery_EntityFilter) FromEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityListFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EntityListFilter
func (t *AlarmDataQuery_EntityFilter) MergeEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityNameFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EntityNameFilter
func (t AlarmDataQuery_EntityFilter) AsEntityNameFilter() (EntityNameFilter, error) {
	var body EntityNameFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityNameFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EntityNameFilter
func (t *AlarmDataQuery_EntityFilter) FromEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityNameFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EntityNameFilter
func (t *AlarmDataQuery_EntityFilter) MergeEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityTypeFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EntityTypeFilter
func (t AlarmDataQuery_EntityFilter) AsEntityTypeFilter() (EntityTypeFilter, error) {
	var body EntityTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityTypeFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EntityTypeFilter
func (t *AlarmDataQuery_EntityFilter) FromEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityTypeFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EntityTypeFilter
func (t *AlarmDataQuery_EntityFilter) MergeEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewSearchQueryFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EntityViewSearchQueryFilter
func (t AlarmDataQuery_EntityFilter) AsEntityViewSearchQueryFilter() (EntityViewSearchQueryFilter, error) {
	var body EntityViewSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewSearchQueryFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EntityViewSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) FromEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewSearchQueryFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EntityViewSearchQueryFilter
func (t *AlarmDataQuery_EntityFilter) MergeEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewTypeFilter returns the union data inside the AlarmDataQuery_EntityFilter as a EntityViewTypeFilter
func (t AlarmDataQuery_EntityFilter) AsEntityViewTypeFilter() (EntityViewTypeFilter, error) {
	var body EntityViewTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewTypeFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided EntityViewTypeFilter
func (t *AlarmDataQuery_EntityFilter) FromEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewTypeFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided EntityViewTypeFilter
func (t *AlarmDataQuery_EntityFilter) MergeEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRelationsQueryFilter returns the union data inside the AlarmDataQuery_EntityFilter as a RelationsQueryFilter
func (t AlarmDataQuery_EntityFilter) AsRelationsQueryFilter() (RelationsQueryFilter, error) {
	var body RelationsQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRelationsQueryFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided RelationsQueryFilter
func (t *AlarmDataQuery_EntityFilter) FromRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRelationsQueryFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided RelationsQueryFilter
func (t *AlarmDataQuery_EntityFilter) MergeRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSingleEntityFilter returns the union data inside the AlarmDataQuery_EntityFilter as a SingleEntityFilter
func (t AlarmDataQuery_EntityFilter) AsSingleEntityFilter() (SingleEntityFilter, error) {
	var body SingleEntityFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSingleEntityFilter overwrites any union data inside the AlarmDataQuery_EntityFilter as the provided SingleEntityFilter
func (t *AlarmDataQuery_EntityFilter) FromSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSingleEntityFilter performs a merge with any union data inside the AlarmDataQuery_EntityFilter, using the provided SingleEntityFilter
func (t *AlarmDataQuery_EntityFilter) MergeSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AlarmDataQuery_EntityFilter) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AlarmDataQuery_EntityFilter) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAnyTimeSchedule returns the union data inside the AlarmRule_Schedule as a AnyTimeSchedule
func (t AlarmRule_Schedule) AsAnyTimeSchedule() (AnyTimeSchedule, error) {
	var body AnyTimeSchedule
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAnyTimeSchedule overwrites any union data inside the AlarmRule_Schedule as the provided AnyTimeSchedule
func (t *AlarmRule_Schedule) FromAnyTimeSchedule(v AnyTimeSchedule) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAnyTimeSchedule performs a merge with any union data inside the AlarmRule_Schedule, using the provided AnyTimeSchedule
func (t *AlarmRule_Schedule) MergeAnyTimeSchedule(v AnyTimeSchedule) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCustomTimeSchedule returns the union data inside the AlarmRule_Schedule as a CustomTimeSchedule
func (t AlarmRule_Schedule) AsCustomTimeSchedule() (CustomTimeSchedule, error) {
	var body CustomTimeSchedule
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCustomTimeSchedule overwrites any union data inside the AlarmRule_Schedule as the provided CustomTimeSchedule
func (t *AlarmRule_Schedule) FromCustomTimeSchedule(v CustomTimeSchedule) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCustomTimeSchedule performs a merge with any union data inside the AlarmRule_Schedule, using the provided CustomTimeSchedule
func (t *AlarmRule_Schedule) MergeCustomTimeSchedule(v CustomTimeSchedule) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSpecificTimeSchedule returns the union data inside the AlarmRule_Schedule as a SpecificTimeSchedule
func (t AlarmRule_Schedule) AsSpecificTimeSchedule() (SpecificTimeSchedule, error) {
	var body SpecificTimeSchedule
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSpecificTimeSchedule overwrites any union data inside the AlarmRule_Schedule as the provided SpecificTimeSchedule
func (t *AlarmRule_Schedule) FromSpecificTimeSchedule(v SpecificTimeSchedule) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSpecificTimeSchedule performs a merge with any union data inside the AlarmRule_Schedule, using the provided SpecificTimeSchedule
func (t *AlarmRule_Schedule) MergeSpecificTimeSchedule(v SpecificTimeSchedule) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AlarmRule_Schedule) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AlarmRule_Schedule) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDefaultDeviceConfiguration returns the union data inside the DeviceData_Configuration as a DefaultDeviceConfiguration
func (t DeviceData_Configuration) AsDefaultDeviceConfiguration() (DefaultDeviceConfiguration, error) {
	var body DefaultDeviceConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDefaultDeviceConfiguration overwrites any union data inside the DeviceData_Configuration as the provided DefaultDeviceConfiguration
func (t *DeviceData_Configuration) FromDefaultDeviceConfiguration(v DefaultDeviceConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDefaultDeviceConfiguration performs a merge with any union data inside the DeviceData_Configuration, using the provided DefaultDeviceConfiguration
func (t *DeviceData_Configuration) MergeDefaultDeviceConfiguration(v DefaultDeviceConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceData_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceData_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCoapDeviceTransportConfiguration returns the union data inside the DeviceData_TransportConfiguration as a CoapDeviceTransportConfiguration
func (t DeviceData_TransportConfiguration) AsCoapDeviceTransportConfiguration() (CoapDeviceTransportConfiguration, error) {
	var body CoapDeviceTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCoapDeviceTransportConfiguration overwrites any union data inside the DeviceData_TransportConfiguration as the provided CoapDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) FromCoapDeviceTransportConfiguration(v CoapDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCoapDeviceTransportConfiguration performs a merge with any union data inside the DeviceData_TransportConfiguration, using the provided CoapDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) MergeCoapDeviceTransportConfiguration(v CoapDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDefaultDeviceTransportConfiguration returns the union data inside the DeviceData_TransportConfiguration as a DefaultDeviceTransportConfiguration
func (t DeviceData_TransportConfiguration) AsDefaultDeviceTransportConfiguration() (DefaultDeviceTransportConfiguration, error) {
	var body DefaultDeviceTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDefaultDeviceTransportConfiguration overwrites any union data inside the DeviceData_TransportConfiguration as the provided DefaultDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) FromDefaultDeviceTransportConfiguration(v DefaultDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDefaultDeviceTransportConfiguration performs a merge with any union data inside the DeviceData_TransportConfiguration, using the provided DefaultDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) MergeDefaultDeviceTransportConfiguration(v DefaultDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsLwm2mDeviceTransportConfiguration returns the union data inside the DeviceData_TransportConfiguration as a Lwm2mDeviceTransportConfiguration
func (t DeviceData_TransportConfiguration) AsLwm2mDeviceTransportConfiguration() (Lwm2mDeviceTransportConfiguration, error) {
	var body Lwm2mDeviceTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromLwm2mDeviceTransportConfiguration overwrites any union data inside the DeviceData_TransportConfiguration as the provided Lwm2mDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) FromLwm2mDeviceTransportConfiguration(v Lwm2mDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeLwm2mDeviceTransportConfiguration performs a merge with any union data inside the DeviceData_TransportConfiguration, using the provided Lwm2mDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) MergeLwm2mDeviceTransportConfiguration(v Lwm2mDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMqttDeviceTransportConfiguration returns the union data inside the DeviceData_TransportConfiguration as a MqttDeviceTransportConfiguration
func (t DeviceData_TransportConfiguration) AsMqttDeviceTransportConfiguration() (MqttDeviceTransportConfiguration, error) {
	var body MqttDeviceTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMqttDeviceTransportConfiguration overwrites any union data inside the DeviceData_TransportConfiguration as the provided MqttDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) FromMqttDeviceTransportConfiguration(v MqttDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMqttDeviceTransportConfiguration performs a merge with any union data inside the DeviceData_TransportConfiguration, using the provided MqttDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) MergeMqttDeviceTransportConfiguration(v MqttDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSnmpDeviceTransportConfiguration returns the union data inside the DeviceData_TransportConfiguration as a SnmpDeviceTransportConfiguration
func (t DeviceData_TransportConfiguration) AsSnmpDeviceTransportConfiguration() (SnmpDeviceTransportConfiguration, error) {
	var body SnmpDeviceTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSnmpDeviceTransportConfiguration overwrites any union data inside the DeviceData_TransportConfiguration as the provided SnmpDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) FromSnmpDeviceTransportConfiguration(v SnmpDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSnmpDeviceTransportConfiguration performs a merge with any union data inside the DeviceData_TransportConfiguration, using the provided SnmpDeviceTransportConfiguration
func (t *DeviceData_TransportConfiguration) MergeSnmpDeviceTransportConfiguration(v SnmpDeviceTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceData_TransportConfiguration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceData_TransportConfiguration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDefaultDeviceProfileConfiguration returns the union data inside the DeviceProfileData_Configuration as a DefaultDeviceProfileConfiguration
func (t DeviceProfileData_Configuration) AsDefaultDeviceProfileConfiguration() (DefaultDeviceProfileConfiguration, error) {
	var body DefaultDeviceProfileConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDefaultDeviceProfileConfiguration overwrites any union data inside the DeviceProfileData_Configuration as the provided DefaultDeviceProfileConfiguration
func (t *DeviceProfileData_Configuration) FromDefaultDeviceProfileConfiguration(v DefaultDeviceProfileConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDefaultDeviceProfileConfiguration performs a merge with any union data inside the DeviceProfileData_Configuration, using the provided DefaultDeviceProfileConfiguration
func (t *DeviceProfileData_Configuration) MergeDefaultDeviceProfileConfiguration(v DefaultDeviceProfileConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceProfileData_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceProfileData_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAllowCreateNewDevicesDeviceProfileProvisionConfiguration returns the union data inside the DeviceProfileData_ProvisionConfiguration as a AllowCreateNewDevicesDeviceProfileProvisionConfiguration
func (t DeviceProfileData_ProvisionConfiguration) AsAllowCreateNewDevicesDeviceProfileProvisionConfiguration() (AllowCreateNewDevicesDeviceProfileProvisionConfiguration, error) {
	var body AllowCreateNewDevicesDeviceProfileProvisionConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAllowCreateNewDevicesDeviceProfileProvisionConfiguration overwrites any union data inside the DeviceProfileData_ProvisionConfiguration as the provided AllowCreateNewDevicesDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) FromAllowCreateNewDevicesDeviceProfileProvisionConfiguration(v AllowCreateNewDevicesDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAllowCreateNewDevicesDeviceProfileProvisionConfiguration performs a merge with any union data inside the DeviceProfileData_ProvisionConfiguration, using the provided AllowCreateNewDevicesDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) MergeAllowCreateNewDevicesDeviceProfileProvisionConfiguration(v AllowCreateNewDevicesDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration returns the union data inside the DeviceProfileData_ProvisionConfiguration as a CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration
func (t DeviceProfileData_ProvisionConfiguration) AsCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration() (CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration, error) {
	var body CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration overwrites any union data inside the DeviceProfileData_ProvisionConfiguration as the provided CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) FromCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration(v CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration performs a merge with any union data inside the DeviceProfileData_ProvisionConfiguration, using the provided CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) MergeCheckPreProvisionedDevicesDeviceProfileProvisionConfiguration(v CheckPreProvisionedDevicesDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDisabledDeviceProfileProvisionConfiguration returns the union data inside the DeviceProfileData_ProvisionConfiguration as a DisabledDeviceProfileProvisionConfiguration
func (t DeviceProfileData_ProvisionConfiguration) AsDisabledDeviceProfileProvisionConfiguration() (DisabledDeviceProfileProvisionConfiguration, error) {
	var body DisabledDeviceProfileProvisionConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDisabledDeviceProfileProvisionConfiguration overwrites any union data inside the DeviceProfileData_ProvisionConfiguration as the provided DisabledDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) FromDisabledDeviceProfileProvisionConfiguration(v DisabledDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDisabledDeviceProfileProvisionConfiguration performs a merge with any union data inside the DeviceProfileData_ProvisionConfiguration, using the provided DisabledDeviceProfileProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) MergeDisabledDeviceProfileProvisionConfiguration(v DisabledDeviceProfileProvisionConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsX509CertificateChainProvisionConfiguration returns the union data inside the DeviceProfileData_ProvisionConfiguration as a X509CertificateChainProvisionConfiguration
func (t DeviceProfileData_ProvisionConfiguration) AsX509CertificateChainProvisionConfiguration() (X509CertificateChainProvisionConfiguration, error) {
	var body X509CertificateChainProvisionConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromX509CertificateChainProvisionConfiguration overwrites any union data inside the DeviceProfileData_ProvisionConfiguration as the provided X509CertificateChainProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) FromX509CertificateChainProvisionConfiguration(v X509CertificateChainProvisionConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeX509CertificateChainProvisionConfiguration performs a merge with any union data inside the DeviceProfileData_ProvisionConfiguration, using the provided X509CertificateChainProvisionConfiguration
func (t *DeviceProfileData_ProvisionConfiguration) MergeX509CertificateChainProvisionConfiguration(v X509CertificateChainProvisionConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceProfileData_ProvisionConfiguration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceProfileData_ProvisionConfiguration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsCoapDeviceProfileTransportConfiguration returns the union data inside the DeviceProfileData_TransportConfiguration as a CoapDeviceProfileTransportConfiguration
func (t DeviceProfileData_TransportConfiguration) AsCoapDeviceProfileTransportConfiguration() (CoapDeviceProfileTransportConfiguration, error) {
	var body CoapDeviceProfileTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCoapDeviceProfileTransportConfiguration overwrites any union data inside the DeviceProfileData_TransportConfiguration as the provided CoapDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) FromCoapDeviceProfileTransportConfiguration(v CoapDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCoapDeviceProfileTransportConfiguration performs a merge with any union data inside the DeviceProfileData_TransportConfiguration, using the provided CoapDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) MergeCoapDeviceProfileTransportConfiguration(v CoapDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDefaultDeviceProfileTransportConfiguration returns the union data inside the DeviceProfileData_TransportConfiguration as a DefaultDeviceProfileTransportConfiguration
func (t DeviceProfileData_TransportConfiguration) AsDefaultDeviceProfileTransportConfiguration() (DefaultDeviceProfileTransportConfiguration, error) {
	var body DefaultDeviceProfileTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDefaultDeviceProfileTransportConfiguration overwrites any union data inside the DeviceProfileData_TransportConfiguration as the provided DefaultDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) FromDefaultDeviceProfileTransportConfiguration(v DefaultDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDefaultDeviceProfileTransportConfiguration performs a merge with any union data inside the DeviceProfileData_TransportConfiguration, using the provided DefaultDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) MergeDefaultDeviceProfileTransportConfiguration(v DefaultDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsLwm2mDeviceProfileTransportConfiguration returns the union data inside the DeviceProfileData_TransportConfiguration as a Lwm2mDeviceProfileTransportConfiguration
func (t DeviceProfileData_TransportConfiguration) AsLwm2mDeviceProfileTransportConfiguration() (Lwm2mDeviceProfileTransportConfiguration, error) {
	var body Lwm2mDeviceProfileTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromLwm2mDeviceProfileTransportConfiguration overwrites any union data inside the DeviceProfileData_TransportConfiguration as the provided Lwm2mDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) FromLwm2mDeviceProfileTransportConfiguration(v Lwm2mDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeLwm2mDeviceProfileTransportConfiguration performs a merge with any union data inside the DeviceProfileData_TransportConfiguration, using the provided Lwm2mDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) MergeLwm2mDeviceProfileTransportConfiguration(v Lwm2mDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMqttDeviceProfileTransportConfiguration returns the union data inside the DeviceProfileData_TransportConfiguration as a MqttDeviceProfileTransportConfiguration
func (t DeviceProfileData_TransportConfiguration) AsMqttDeviceProfileTransportConfiguration() (MqttDeviceProfileTransportConfiguration, error) {
	var body MqttDeviceProfileTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMqttDeviceProfileTransportConfiguration overwrites any union data inside the DeviceProfileData_TransportConfiguration as the provided MqttDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) FromMqttDeviceProfileTransportConfiguration(v MqttDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMqttDeviceProfileTransportConfiguration performs a merge with any union data inside the DeviceProfileData_TransportConfiguration, using the provided MqttDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) MergeMqttDeviceProfileTransportConfiguration(v MqttDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSnmpDeviceProfileTransportConfiguration returns the union data inside the DeviceProfileData_TransportConfiguration as a SnmpDeviceProfileTransportConfiguration
func (t DeviceProfileData_TransportConfiguration) AsSnmpDeviceProfileTransportConfiguration() (SnmpDeviceProfileTransportConfiguration, error) {
	var body SnmpDeviceProfileTransportConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSnmpDeviceProfileTransportConfiguration overwrites any union data inside the DeviceProfileData_TransportConfiguration as the provided SnmpDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) FromSnmpDeviceProfileTransportConfiguration(v SnmpDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSnmpDeviceProfileTransportConfiguration performs a merge with any union data inside the DeviceProfileData_TransportConfiguration, using the provided SnmpDeviceProfileTransportConfiguration
func (t *DeviceProfileData_TransportConfiguration) MergeSnmpDeviceProfileTransportConfiguration(v SnmpDeviceProfileTransportConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t DeviceProfileData_TransportConfiguration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *DeviceProfileData_TransportConfiguration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiUsageStateFilter returns the union data inside the EntityCountQuery_EntityFilter as a ApiUsageStateFilter
func (t EntityCountQuery_EntityFilter) AsApiUsageStateFilter() (ApiUsageStateFilter, error) {
	var body ApiUsageStateFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageStateFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided ApiUsageStateFilter
func (t *EntityCountQuery_EntityFilter) FromApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageStateFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided ApiUsageStateFilter
func (t *EntityCountQuery_EntityFilter) MergeApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetSearchQueryFilter returns the union data inside the EntityCountQuery_EntityFilter as a AssetSearchQueryFilter
func (t EntityCountQuery_EntityFilter) AsAssetSearchQueryFilter() (AssetSearchQueryFilter, error) {
	var body AssetSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetSearchQueryFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided AssetSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) FromAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetSearchQueryFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided AssetSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) MergeAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetTypeFilter returns the union data inside the EntityCountQuery_EntityFilter as a AssetTypeFilter
func (t EntityCountQuery_EntityFilter) AsAssetTypeFilter() (AssetTypeFilter, error) {
	var body AssetTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetTypeFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided AssetTypeFilter
func (t *EntityCountQuery_EntityFilter) FromAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetTypeFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided AssetTypeFilter
func (t *EntityCountQuery_EntityFilter) MergeAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceSearchQueryFilter returns the union data inside the EntityCountQuery_EntityFilter as a DeviceSearchQueryFilter
func (t EntityCountQuery_EntityFilter) AsDeviceSearchQueryFilter() (DeviceSearchQueryFilter, error) {
	var body DeviceSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceSearchQueryFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided DeviceSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) FromDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceSearchQueryFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided DeviceSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) MergeDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceTypeFilter returns the union data inside the EntityCountQuery_EntityFilter as a DeviceTypeFilter
func (t EntityCountQuery_EntityFilter) AsDeviceTypeFilter() (DeviceTypeFilter, error) {
	var body DeviceTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceTypeFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided DeviceTypeFilter
func (t *EntityCountQuery_EntityFilter) FromDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceTypeFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided DeviceTypeFilter
func (t *EntityCountQuery_EntityFilter) MergeDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeSearchQueryFilter returns the union data inside the EntityCountQuery_EntityFilter as a EdgeSearchQueryFilter
func (t EntityCountQuery_EntityFilter) AsEdgeSearchQueryFilter() (EdgeSearchQueryFilter, error) {
	var body EdgeSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeSearchQueryFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EdgeSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) FromEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeSearchQueryFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EdgeSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) MergeEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeTypeFilter returns the union data inside the EntityCountQuery_EntityFilter as a EdgeTypeFilter
func (t EntityCountQuery_EntityFilter) AsEdgeTypeFilter() (EdgeTypeFilter, error) {
	var body EdgeTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeTypeFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EdgeTypeFilter
func (t *EntityCountQuery_EntityFilter) FromEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeTypeFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EdgeTypeFilter
func (t *EntityCountQuery_EntityFilter) MergeEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityListFilter returns the union data inside the EntityCountQuery_EntityFilter as a EntityListFilter
func (t EntityCountQuery_EntityFilter) AsEntityListFilter() (EntityListFilter, error) {
	var body EntityListFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityListFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EntityListFilter
func (t *EntityCountQuery_EntityFilter) FromEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityListFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EntityListFilter
func (t *EntityCountQuery_EntityFilter) MergeEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityNameFilter returns the union data inside the EntityCountQuery_EntityFilter as a EntityNameFilter
func (t EntityCountQuery_EntityFilter) AsEntityNameFilter() (EntityNameFilter, error) {
	var body EntityNameFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityNameFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EntityNameFilter
func (t *EntityCountQuery_EntityFilter) FromEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityNameFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EntityNameFilter
func (t *EntityCountQuery_EntityFilter) MergeEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityTypeFilter returns the union data inside the EntityCountQuery_EntityFilter as a EntityTypeFilter
func (t EntityCountQuery_EntityFilter) AsEntityTypeFilter() (EntityTypeFilter, error) {
	var body EntityTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityTypeFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EntityTypeFilter
func (t *EntityCountQuery_EntityFilter) FromEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityTypeFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EntityTypeFilter
func (t *EntityCountQuery_EntityFilter) MergeEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewSearchQueryFilter returns the union data inside the EntityCountQuery_EntityFilter as a EntityViewSearchQueryFilter
func (t EntityCountQuery_EntityFilter) AsEntityViewSearchQueryFilter() (EntityViewSearchQueryFilter, error) {
	var body EntityViewSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewSearchQueryFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EntityViewSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) FromEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewSearchQueryFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EntityViewSearchQueryFilter
func (t *EntityCountQuery_EntityFilter) MergeEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewTypeFilter returns the union data inside the EntityCountQuery_EntityFilter as a EntityViewTypeFilter
func (t EntityCountQuery_EntityFilter) AsEntityViewTypeFilter() (EntityViewTypeFilter, error) {
	var body EntityViewTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewTypeFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided EntityViewTypeFilter
func (t *EntityCountQuery_EntityFilter) FromEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewTypeFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided EntityViewTypeFilter
func (t *EntityCountQuery_EntityFilter) MergeEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRelationsQueryFilter returns the union data inside the EntityCountQuery_EntityFilter as a RelationsQueryFilter
func (t EntityCountQuery_EntityFilter) AsRelationsQueryFilter() (RelationsQueryFilter, error) {
	var body RelationsQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRelationsQueryFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided RelationsQueryFilter
func (t *EntityCountQuery_EntityFilter) FromRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRelationsQueryFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided RelationsQueryFilter
func (t *EntityCountQuery_EntityFilter) MergeRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSingleEntityFilter returns the union data inside the EntityCountQuery_EntityFilter as a SingleEntityFilter
func (t EntityCountQuery_EntityFilter) AsSingleEntityFilter() (SingleEntityFilter, error) {
	var body SingleEntityFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSingleEntityFilter overwrites any union data inside the EntityCountQuery_EntityFilter as the provided SingleEntityFilter
func (t *EntityCountQuery_EntityFilter) FromSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSingleEntityFilter performs a merge with any union data inside the EntityCountQuery_EntityFilter, using the provided SingleEntityFilter
func (t *EntityCountQuery_EntityFilter) MergeSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EntityCountQuery_EntityFilter) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EntityCountQuery_EntityFilter) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEntityExportDataObject returns the union data inside the EntityDataDiff_CurrentVersion as a EntityExportDataObject
func (t EntityDataDiff_CurrentVersion) AsEntityExportDataObject() (EntityExportDataObject, error) {
	var body EntityExportDataObject
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityExportDataObject overwrites any union data inside the EntityDataDiff_CurrentVersion as the provided EntityExportDataObject
func (t *EntityDataDiff_CurrentVersion) FromEntityExportDataObject(v EntityExportDataObject) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityExportDataObject performs a merge with any union data inside the EntityDataDiff_CurrentVersion, using the provided EntityExportDataObject
func (t *EntityDataDiff_CurrentVersion) MergeEntityExportDataObject(v EntityExportDataObject) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceExportData returns the union data inside the EntityDataDiff_CurrentVersion as a DeviceExportData
func (t EntityDataDiff_CurrentVersion) AsDeviceExportData() (DeviceExportData, error) {
	var body DeviceExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceExportData overwrites any union data inside the EntityDataDiff_CurrentVersion as the provided DeviceExportData
func (t *EntityDataDiff_CurrentVersion) FromDeviceExportData(v DeviceExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceExportData performs a merge with any union data inside the EntityDataDiff_CurrentVersion, using the provided DeviceExportData
func (t *EntityDataDiff_CurrentVersion) MergeDeviceExportData(v DeviceExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRuleChainExportData returns the union data inside the EntityDataDiff_CurrentVersion as a RuleChainExportData
func (t EntityDataDiff_CurrentVersion) AsRuleChainExportData() (RuleChainExportData, error) {
	var body RuleChainExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRuleChainExportData overwrites any union data inside the EntityDataDiff_CurrentVersion as the provided RuleChainExportData
func (t *EntityDataDiff_CurrentVersion) FromRuleChainExportData(v RuleChainExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRuleChainExportData performs a merge with any union data inside the EntityDataDiff_CurrentVersion, using the provided RuleChainExportData
func (t *EntityDataDiff_CurrentVersion) MergeRuleChainExportData(v RuleChainExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWidgetTypeExportData returns the union data inside the EntityDataDiff_CurrentVersion as a WidgetTypeExportData
func (t EntityDataDiff_CurrentVersion) AsWidgetTypeExportData() (WidgetTypeExportData, error) {
	var body WidgetTypeExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWidgetTypeExportData overwrites any union data inside the EntityDataDiff_CurrentVersion as the provided WidgetTypeExportData
func (t *EntityDataDiff_CurrentVersion) FromWidgetTypeExportData(v WidgetTypeExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWidgetTypeExportData performs a merge with any union data inside the EntityDataDiff_CurrentVersion, using the provided WidgetTypeExportData
func (t *EntityDataDiff_CurrentVersion) MergeWidgetTypeExportData(v WidgetTypeExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWidgetsBundleExportData returns the union data inside the EntityDataDiff_CurrentVersion as a WidgetsBundleExportData
func (t EntityDataDiff_CurrentVersion) AsWidgetsBundleExportData() (WidgetsBundleExportData, error) {
	var body WidgetsBundleExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWidgetsBundleExportData overwrites any union data inside the EntityDataDiff_CurrentVersion as the provided WidgetsBundleExportData
func (t *EntityDataDiff_CurrentVersion) FromWidgetsBundleExportData(v WidgetsBundleExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWidgetsBundleExportData performs a merge with any union data inside the EntityDataDiff_CurrentVersion, using the provided WidgetsBundleExportData
func (t *EntityDataDiff_CurrentVersion) MergeWidgetsBundleExportData(v WidgetsBundleExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EntityDataDiff_CurrentVersion) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EntityDataDiff_CurrentVersion) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEntityExportDataObject returns the union data inside the EntityDataDiff_OtherVersion as a EntityExportDataObject
func (t EntityDataDiff_OtherVersion) AsEntityExportDataObject() (EntityExportDataObject, error) {
	var body EntityExportDataObject
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityExportDataObject overwrites any union data inside the EntityDataDiff_OtherVersion as the provided EntityExportDataObject
func (t *EntityDataDiff_OtherVersion) FromEntityExportDataObject(v EntityExportDataObject) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityExportDataObject performs a merge with any union data inside the EntityDataDiff_OtherVersion, using the provided EntityExportDataObject
func (t *EntityDataDiff_OtherVersion) MergeEntityExportDataObject(v EntityExportDataObject) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceExportData returns the union data inside the EntityDataDiff_OtherVersion as a DeviceExportData
func (t EntityDataDiff_OtherVersion) AsDeviceExportData() (DeviceExportData, error) {
	var body DeviceExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceExportData overwrites any union data inside the EntityDataDiff_OtherVersion as the provided DeviceExportData
func (t *EntityDataDiff_OtherVersion) FromDeviceExportData(v DeviceExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceExportData performs a merge with any union data inside the EntityDataDiff_OtherVersion, using the provided DeviceExportData
func (t *EntityDataDiff_OtherVersion) MergeDeviceExportData(v DeviceExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRuleChainExportData returns the union data inside the EntityDataDiff_OtherVersion as a RuleChainExportData
func (t EntityDataDiff_OtherVersion) AsRuleChainExportData() (RuleChainExportData, error) {
	var body RuleChainExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRuleChainExportData overwrites any union data inside the EntityDataDiff_OtherVersion as the provided RuleChainExportData
func (t *EntityDataDiff_OtherVersion) FromRuleChainExportData(v RuleChainExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRuleChainExportData performs a merge with any union data inside the EntityDataDiff_OtherVersion, using the provided RuleChainExportData
func (t *EntityDataDiff_OtherVersion) MergeRuleChainExportData(v RuleChainExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWidgetTypeExportData returns the union data inside the EntityDataDiff_OtherVersion as a WidgetTypeExportData
func (t EntityDataDiff_OtherVersion) AsWidgetTypeExportData() (WidgetTypeExportData, error) {
	var body WidgetTypeExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWidgetTypeExportData overwrites any union data inside the EntityDataDiff_OtherVersion as the provided WidgetTypeExportData
func (t *EntityDataDiff_OtherVersion) FromWidgetTypeExportData(v WidgetTypeExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWidgetTypeExportData performs a merge with any union data inside the EntityDataDiff_OtherVersion, using the provided WidgetTypeExportData
func (t *EntityDataDiff_OtherVersion) MergeWidgetTypeExportData(v WidgetTypeExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWidgetsBundleExportData returns the union data inside the EntityDataDiff_OtherVersion as a WidgetsBundleExportData
func (t EntityDataDiff_OtherVersion) AsWidgetsBundleExportData() (WidgetsBundleExportData, error) {
	var body WidgetsBundleExportData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWidgetsBundleExportData overwrites any union data inside the EntityDataDiff_OtherVersion as the provided WidgetsBundleExportData
func (t *EntityDataDiff_OtherVersion) FromWidgetsBundleExportData(v WidgetsBundleExportData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWidgetsBundleExportData performs a merge with any union data inside the EntityDataDiff_OtherVersion, using the provided WidgetsBundleExportData
func (t *EntityDataDiff_OtherVersion) MergeWidgetsBundleExportData(v WidgetsBundleExportData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EntityDataDiff_OtherVersion) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EntityDataDiff_OtherVersion) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsApiUsageStateFilter returns the union data inside the EntityDataQuery_EntityFilter as a ApiUsageStateFilter
func (t EntityDataQuery_EntityFilter) AsApiUsageStateFilter() (ApiUsageStateFilter, error) {
	var body ApiUsageStateFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageStateFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided ApiUsageStateFilter
func (t *EntityDataQuery_EntityFilter) FromApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageStateFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided ApiUsageStateFilter
func (t *EntityDataQuery_EntityFilter) MergeApiUsageStateFilter(v ApiUsageStateFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetSearchQueryFilter returns the union data inside the EntityDataQuery_EntityFilter as a AssetSearchQueryFilter
func (t EntityDataQuery_EntityFilter) AsAssetSearchQueryFilter() (AssetSearchQueryFilter, error) {
	var body AssetSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetSearchQueryFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided AssetSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) FromAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetSearchQueryFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided AssetSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) MergeAssetSearchQueryFilter(v AssetSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAssetTypeFilter returns the union data inside the EntityDataQuery_EntityFilter as a AssetTypeFilter
func (t EntityDataQuery_EntityFilter) AsAssetTypeFilter() (AssetTypeFilter, error) {
	var body AssetTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAssetTypeFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided AssetTypeFilter
func (t *EntityDataQuery_EntityFilter) FromAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAssetTypeFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided AssetTypeFilter
func (t *EntityDataQuery_EntityFilter) MergeAssetTypeFilter(v AssetTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceSearchQueryFilter returns the union data inside the EntityDataQuery_EntityFilter as a DeviceSearchQueryFilter
func (t EntityDataQuery_EntityFilter) AsDeviceSearchQueryFilter() (DeviceSearchQueryFilter, error) {
	var body DeviceSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceSearchQueryFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided DeviceSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) FromDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceSearchQueryFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided DeviceSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) MergeDeviceSearchQueryFilter(v DeviceSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceTypeFilter returns the union data inside the EntityDataQuery_EntityFilter as a DeviceTypeFilter
func (t EntityDataQuery_EntityFilter) AsDeviceTypeFilter() (DeviceTypeFilter, error) {
	var body DeviceTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceTypeFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided DeviceTypeFilter
func (t *EntityDataQuery_EntityFilter) FromDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceTypeFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided DeviceTypeFilter
func (t *EntityDataQuery_EntityFilter) MergeDeviceTypeFilter(v DeviceTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeSearchQueryFilter returns the union data inside the EntityDataQuery_EntityFilter as a EdgeSearchQueryFilter
func (t EntityDataQuery_EntityFilter) AsEdgeSearchQueryFilter() (EdgeSearchQueryFilter, error) {
	var body EdgeSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeSearchQueryFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EdgeSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) FromEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeSearchQueryFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EdgeSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) MergeEdgeSearchQueryFilter(v EdgeSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeTypeFilter returns the union data inside the EntityDataQuery_EntityFilter as a EdgeTypeFilter
func (t EntityDataQuery_EntityFilter) AsEdgeTypeFilter() (EdgeTypeFilter, error) {
	var body EdgeTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeTypeFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EdgeTypeFilter
func (t *EntityDataQuery_EntityFilter) FromEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeTypeFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EdgeTypeFilter
func (t *EntityDataQuery_EntityFilter) MergeEdgeTypeFilter(v EdgeTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityListFilter returns the union data inside the EntityDataQuery_EntityFilter as a EntityListFilter
func (t EntityDataQuery_EntityFilter) AsEntityListFilter() (EntityListFilter, error) {
	var body EntityListFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityListFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EntityListFilter
func (t *EntityDataQuery_EntityFilter) FromEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityListFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EntityListFilter
func (t *EntityDataQuery_EntityFilter) MergeEntityListFilter(v EntityListFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityNameFilter returns the union data inside the EntityDataQuery_EntityFilter as a EntityNameFilter
func (t EntityDataQuery_EntityFilter) AsEntityNameFilter() (EntityNameFilter, error) {
	var body EntityNameFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityNameFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EntityNameFilter
func (t *EntityDataQuery_EntityFilter) FromEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityNameFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EntityNameFilter
func (t *EntityDataQuery_EntityFilter) MergeEntityNameFilter(v EntityNameFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityTypeFilter returns the union data inside the EntityDataQuery_EntityFilter as a EntityTypeFilter
func (t EntityDataQuery_EntityFilter) AsEntityTypeFilter() (EntityTypeFilter, error) {
	var body EntityTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityTypeFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EntityTypeFilter
func (t *EntityDataQuery_EntityFilter) FromEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityTypeFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EntityTypeFilter
func (t *EntityDataQuery_EntityFilter) MergeEntityTypeFilter(v EntityTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewSearchQueryFilter returns the union data inside the EntityDataQuery_EntityFilter as a EntityViewSearchQueryFilter
func (t EntityDataQuery_EntityFilter) AsEntityViewSearchQueryFilter() (EntityViewSearchQueryFilter, error) {
	var body EntityViewSearchQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewSearchQueryFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EntityViewSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) FromEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewSearchQueryFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EntityViewSearchQueryFilter
func (t *EntityDataQuery_EntityFilter) MergeEntityViewSearchQueryFilter(v EntityViewSearchQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityViewTypeFilter returns the union data inside the EntityDataQuery_EntityFilter as a EntityViewTypeFilter
func (t EntityDataQuery_EntityFilter) AsEntityViewTypeFilter() (EntityViewTypeFilter, error) {
	var body EntityViewTypeFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityViewTypeFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided EntityViewTypeFilter
func (t *EntityDataQuery_EntityFilter) FromEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityViewTypeFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided EntityViewTypeFilter
func (t *EntityDataQuery_EntityFilter) MergeEntityViewTypeFilter(v EntityViewTypeFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRelationsQueryFilter returns the union data inside the EntityDataQuery_EntityFilter as a RelationsQueryFilter
func (t EntityDataQuery_EntityFilter) AsRelationsQueryFilter() (RelationsQueryFilter, error) {
	var body RelationsQueryFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRelationsQueryFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided RelationsQueryFilter
func (t *EntityDataQuery_EntityFilter) FromRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRelationsQueryFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided RelationsQueryFilter
func (t *EntityDataQuery_EntityFilter) MergeRelationsQueryFilter(v RelationsQueryFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSingleEntityFilter returns the union data inside the EntityDataQuery_EntityFilter as a SingleEntityFilter
func (t EntityDataQuery_EntityFilter) AsSingleEntityFilter() (SingleEntityFilter, error) {
	var body SingleEntityFilter
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSingleEntityFilter overwrites any union data inside the EntityDataQuery_EntityFilter as the provided SingleEntityFilter
func (t *EntityDataQuery_EntityFilter) FromSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSingleEntityFilter performs a merge with any union data inside the EntityDataQuery_EntityFilter, using the provided SingleEntityFilter
func (t *EntityDataQuery_EntityFilter) MergeSingleEntityFilter(v SingleEntityFilter) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EntityDataQuery_EntityFilter) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EntityDataQuery_EntityFilter) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsBooleanFilterPredicate returns the union data inside the KeyFilter_Predicate as a BooleanFilterPredicate
func (t KeyFilter_Predicate) AsBooleanFilterPredicate() (BooleanFilterPredicate, error) {
	var body BooleanFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBooleanFilterPredicate overwrites any union data inside the KeyFilter_Predicate as the provided BooleanFilterPredicate
func (t *KeyFilter_Predicate) FromBooleanFilterPredicate(v BooleanFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBooleanFilterPredicate performs a merge with any union data inside the KeyFilter_Predicate, using the provided BooleanFilterPredicate
func (t *KeyFilter_Predicate) MergeBooleanFilterPredicate(v BooleanFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsComplexFilterPredicate returns the union data inside the KeyFilter_Predicate as a ComplexFilterPredicate
func (t KeyFilter_Predicate) AsComplexFilterPredicate() (ComplexFilterPredicate, error) {
	var body ComplexFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromComplexFilterPredicate overwrites any union data inside the KeyFilter_Predicate as the provided ComplexFilterPredicate
func (t *KeyFilter_Predicate) FromComplexFilterPredicate(v ComplexFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeComplexFilterPredicate performs a merge with any union data inside the KeyFilter_Predicate, using the provided ComplexFilterPredicate
func (t *KeyFilter_Predicate) MergeComplexFilterPredicate(v ComplexFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNumericFilterPredicate returns the union data inside the KeyFilter_Predicate as a NumericFilterPredicate
func (t KeyFilter_Predicate) AsNumericFilterPredicate() (NumericFilterPredicate, error) {
	var body NumericFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNumericFilterPredicate overwrites any union data inside the KeyFilter_Predicate as the provided NumericFilterPredicate
func (t *KeyFilter_Predicate) FromNumericFilterPredicate(v NumericFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNumericFilterPredicate performs a merge with any union data inside the KeyFilter_Predicate, using the provided NumericFilterPredicate
func (t *KeyFilter_Predicate) MergeNumericFilterPredicate(v NumericFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsStringFilterPredicate returns the union data inside the KeyFilter_Predicate as a StringFilterPredicate
func (t KeyFilter_Predicate) AsStringFilterPredicate() (StringFilterPredicate, error) {
	var body StringFilterPredicate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStringFilterPredicate overwrites any union data inside the KeyFilter_Predicate as the provided StringFilterPredicate
func (t *KeyFilter_Predicate) FromStringFilterPredicate(v StringFilterPredicate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStringFilterPredicate performs a merge with any union data inside the KeyFilter_Predicate, using the provided StringFilterPredicate
func (t *KeyFilter_Predicate) MergeStringFilterPredicate(v StringFilterPredicate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t KeyFilter_Predicate) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *KeyFilter_Predicate) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEmailDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a EmailDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsEmailDeliveryMethodNotificationTemplate() (EmailDeliveryMethodNotificationTemplate, error) {
	var body EmailDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEmailDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided EmailDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromEmailDeliveryMethodNotificationTemplate(v EmailDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEmailDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided EmailDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeEmailDeliveryMethodNotificationTemplate(v EmailDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMicrosoftTeamsDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsMicrosoftTeamsDeliveryMethodNotificationTemplate() (MicrosoftTeamsDeliveryMethodNotificationTemplate, error) {
	var body MicrosoftTeamsDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrosoftTeamsDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromMicrosoftTeamsDeliveryMethodNotificationTemplate(v MicrosoftTeamsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrosoftTeamsDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeMicrosoftTeamsDeliveryMethodNotificationTemplate(v MicrosoftTeamsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMobileAppDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a MobileAppDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsMobileAppDeliveryMethodNotificationTemplate() (MobileAppDeliveryMethodNotificationTemplate, error) {
	var body MobileAppDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMobileAppDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided MobileAppDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromMobileAppDeliveryMethodNotificationTemplate(v MobileAppDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMobileAppDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided MobileAppDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeMobileAppDeliveryMethodNotificationTemplate(v MobileAppDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSlackDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a SlackDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsSlackDeliveryMethodNotificationTemplate() (SlackDeliveryMethodNotificationTemplate, error) {
	var body SlackDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSlackDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided SlackDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromSlackDeliveryMethodNotificationTemplate(v SlackDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSlackDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided SlackDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeSlackDeliveryMethodNotificationTemplate(v SlackDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmsDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a SmsDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsSmsDeliveryMethodNotificationTemplate() (SmsDeliveryMethodNotificationTemplate, error) {
	var body SmsDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmsDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided SmsDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromSmsDeliveryMethodNotificationTemplate(v SmsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmsDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided SmsDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeSmsDeliveryMethodNotificationTemplate(v SmsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebDeliveryMethodNotificationTemplate returns the union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as a WebDeliveryMethodNotificationTemplate
func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) AsWebDeliveryMethodNotificationTemplate() (WebDeliveryMethodNotificationTemplate, error) {
	var body WebDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties as the provided WebDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) FromWebDeliveryMethodNotificationTemplate(v WebDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationRequestPreview_ProcessedTemplates_AdditionalProperties, using the provided WebDeliveryMethodNotificationTemplate
func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MergeWebDeliveryMethodNotificationTemplate(v WebDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationRequestPreview_ProcessedTemplates_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEscalatedNotificationRuleRecipientsConfig returns the union data inside the NotificationRule_RecipientsConfig as a EscalatedNotificationRuleRecipientsConfig
func (t NotificationRule_RecipientsConfig) AsEscalatedNotificationRuleRecipientsConfig() (EscalatedNotificationRuleRecipientsConfig, error) {
	var body EscalatedNotificationRuleRecipientsConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEscalatedNotificationRuleRecipientsConfig overwrites any union data inside the NotificationRule_RecipientsConfig as the provided EscalatedNotificationRuleRecipientsConfig
func (t *NotificationRule_RecipientsConfig) FromEscalatedNotificationRuleRecipientsConfig(v EscalatedNotificationRuleRecipientsConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEscalatedNotificationRuleRecipientsConfig performs a merge with any union data inside the NotificationRule_RecipientsConfig, using the provided EscalatedNotificationRuleRecipientsConfig
func (t *NotificationRule_RecipientsConfig) MergeEscalatedNotificationRuleRecipientsConfig(v EscalatedNotificationRuleRecipientsConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationRule_RecipientsConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationRule_RecipientsConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAlarmAssignmentNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a AlarmAssignmentNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsAlarmAssignmentNotificationRuleTriggerConfig() (AlarmAssignmentNotificationRuleTriggerConfig, error) {
	var body AlarmAssignmentNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmAssignmentNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided AlarmAssignmentNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromAlarmAssignmentNotificationRuleTriggerConfig(v AlarmAssignmentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmAssignmentNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided AlarmAssignmentNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeAlarmAssignmentNotificationRuleTriggerConfig(v AlarmAssignmentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAlarmCommentNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a AlarmCommentNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsAlarmCommentNotificationRuleTriggerConfig() (AlarmCommentNotificationRuleTriggerConfig, error) {
	var body AlarmCommentNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmCommentNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided AlarmCommentNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromAlarmCommentNotificationRuleTriggerConfig(v AlarmCommentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmCommentNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided AlarmCommentNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeAlarmCommentNotificationRuleTriggerConfig(v AlarmCommentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAlarmNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a AlarmNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsAlarmNotificationRuleTriggerConfig() (AlarmNotificationRuleTriggerConfig, error) {
	var body AlarmNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided AlarmNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromAlarmNotificationRuleTriggerConfig(v AlarmNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided AlarmNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeAlarmNotificationRuleTriggerConfig(v AlarmNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiUsageLimitNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a ApiUsageLimitNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsApiUsageLimitNotificationRuleTriggerConfig() (ApiUsageLimitNotificationRuleTriggerConfig, error) {
	var body ApiUsageLimitNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageLimitNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided ApiUsageLimitNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromApiUsageLimitNotificationRuleTriggerConfig(v ApiUsageLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageLimitNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided ApiUsageLimitNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeApiUsageLimitNotificationRuleTriggerConfig(v ApiUsageLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceActivityNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a DeviceActivityNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsDeviceActivityNotificationRuleTriggerConfig() (DeviceActivityNotificationRuleTriggerConfig, error) {
	var body DeviceActivityNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceActivityNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided DeviceActivityNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromDeviceActivityNotificationRuleTriggerConfig(v DeviceActivityNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceActivityNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided DeviceActivityNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeDeviceActivityNotificationRuleTriggerConfig(v DeviceActivityNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeCommunicationFailureNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsEdgeCommunicationFailureNotificationRuleTriggerConfig() (EdgeCommunicationFailureNotificationRuleTriggerConfig, error) {
	var body EdgeCommunicationFailureNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeCommunicationFailureNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromEdgeCommunicationFailureNotificationRuleTriggerConfig(v EdgeCommunicationFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeCommunicationFailureNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeEdgeCommunicationFailureNotificationRuleTriggerConfig(v EdgeCommunicationFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeConnectionNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a EdgeConnectionNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsEdgeConnectionNotificationRuleTriggerConfig() (EdgeConnectionNotificationRuleTriggerConfig, error) {
	var body EdgeConnectionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeConnectionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided EdgeConnectionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromEdgeConnectionNotificationRuleTriggerConfig(v EdgeConnectionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeConnectionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided EdgeConnectionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeEdgeConnectionNotificationRuleTriggerConfig(v EdgeConnectionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntitiesLimitNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a EntitiesLimitNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsEntitiesLimitNotificationRuleTriggerConfig() (EntitiesLimitNotificationRuleTriggerConfig, error) {
	var body EntitiesLimitNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntitiesLimitNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided EntitiesLimitNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromEntitiesLimitNotificationRuleTriggerConfig(v EntitiesLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntitiesLimitNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided EntitiesLimitNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeEntitiesLimitNotificationRuleTriggerConfig(v EntitiesLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityActionNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a EntityActionNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsEntityActionNotificationRuleTriggerConfig() (EntityActionNotificationRuleTriggerConfig, error) {
	var body EntityActionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityActionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided EntityActionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromEntityActionNotificationRuleTriggerConfig(v EntityActionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityActionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided EntityActionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeEntityActionNotificationRuleTriggerConfig(v EntityActionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNewPlatformVersionNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a NewPlatformVersionNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsNewPlatformVersionNotificationRuleTriggerConfig() (NewPlatformVersionNotificationRuleTriggerConfig, error) {
	var body NewPlatformVersionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNewPlatformVersionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided NewPlatformVersionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromNewPlatformVersionNotificationRuleTriggerConfig(v NewPlatformVersionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNewPlatformVersionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided NewPlatformVersionNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeNewPlatformVersionNotificationRuleTriggerConfig(v NewPlatformVersionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRateLimitsNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a RateLimitsNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsRateLimitsNotificationRuleTriggerConfig() (RateLimitsNotificationRuleTriggerConfig, error) {
	var body RateLimitsNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRateLimitsNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided RateLimitsNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromRateLimitsNotificationRuleTriggerConfig(v RateLimitsNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRateLimitsNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided RateLimitsNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeRateLimitsNotificationRuleTriggerConfig(v RateLimitsNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig() (RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig, error) {
	var body RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig(v RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig(v RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTaskProcessingFailureNotificationRuleTriggerConfig returns the union data inside the NotificationRule_TriggerConfig as a TaskProcessingFailureNotificationRuleTriggerConfig
func (t NotificationRule_TriggerConfig) AsTaskProcessingFailureNotificationRuleTriggerConfig() (TaskProcessingFailureNotificationRuleTriggerConfig, error) {
	var body TaskProcessingFailureNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTaskProcessingFailureNotificationRuleTriggerConfig overwrites any union data inside the NotificationRule_TriggerConfig as the provided TaskProcessingFailureNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) FromTaskProcessingFailureNotificationRuleTriggerConfig(v TaskProcessingFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTaskProcessingFailureNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRule_TriggerConfig, using the provided TaskProcessingFailureNotificationRuleTriggerConfig
func (t *NotificationRule_TriggerConfig) MergeTaskProcessingFailureNotificationRuleTriggerConfig(v TaskProcessingFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationRule_TriggerConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationRule_TriggerConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEscalatedNotificationRuleRecipientsConfig returns the union data inside the NotificationRuleInfo_RecipientsConfig as a EscalatedNotificationRuleRecipientsConfig
func (t NotificationRuleInfo_RecipientsConfig) AsEscalatedNotificationRuleRecipientsConfig() (EscalatedNotificationRuleRecipientsConfig, error) {
	var body EscalatedNotificationRuleRecipientsConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEscalatedNotificationRuleRecipientsConfig overwrites any union data inside the NotificationRuleInfo_RecipientsConfig as the provided EscalatedNotificationRuleRecipientsConfig
func (t *NotificationRuleInfo_RecipientsConfig) FromEscalatedNotificationRuleRecipientsConfig(v EscalatedNotificationRuleRecipientsConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEscalatedNotificationRuleRecipientsConfig performs a merge with any union data inside the NotificationRuleInfo_RecipientsConfig, using the provided EscalatedNotificationRuleRecipientsConfig
func (t *NotificationRuleInfo_RecipientsConfig) MergeEscalatedNotificationRuleRecipientsConfig(v EscalatedNotificationRuleRecipientsConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationRuleInfo_RecipientsConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationRuleInfo_RecipientsConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAlarmAssignmentNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a AlarmAssignmentNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsAlarmAssignmentNotificationRuleTriggerConfig() (AlarmAssignmentNotificationRuleTriggerConfig, error) {
	var body AlarmAssignmentNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmAssignmentNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided AlarmAssignmentNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromAlarmAssignmentNotificationRuleTriggerConfig(v AlarmAssignmentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmAssignmentNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided AlarmAssignmentNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeAlarmAssignmentNotificationRuleTriggerConfig(v AlarmAssignmentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAlarmCommentNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a AlarmCommentNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsAlarmCommentNotificationRuleTriggerConfig() (AlarmCommentNotificationRuleTriggerConfig, error) {
	var body AlarmCommentNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmCommentNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided AlarmCommentNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromAlarmCommentNotificationRuleTriggerConfig(v AlarmCommentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmCommentNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided AlarmCommentNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeAlarmCommentNotificationRuleTriggerConfig(v AlarmCommentNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsAlarmNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a AlarmNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsAlarmNotificationRuleTriggerConfig() (AlarmNotificationRuleTriggerConfig, error) {
	var body AlarmNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAlarmNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided AlarmNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromAlarmNotificationRuleTriggerConfig(v AlarmNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAlarmNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided AlarmNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeAlarmNotificationRuleTriggerConfig(v AlarmNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsApiUsageLimitNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a ApiUsageLimitNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsApiUsageLimitNotificationRuleTriggerConfig() (ApiUsageLimitNotificationRuleTriggerConfig, error) {
	var body ApiUsageLimitNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromApiUsageLimitNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided ApiUsageLimitNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromApiUsageLimitNotificationRuleTriggerConfig(v ApiUsageLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeApiUsageLimitNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided ApiUsageLimitNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeApiUsageLimitNotificationRuleTriggerConfig(v ApiUsageLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsDeviceActivityNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a DeviceActivityNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsDeviceActivityNotificationRuleTriggerConfig() (DeviceActivityNotificationRuleTriggerConfig, error) {
	var body DeviceActivityNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDeviceActivityNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided DeviceActivityNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromDeviceActivityNotificationRuleTriggerConfig(v DeviceActivityNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDeviceActivityNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided DeviceActivityNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeDeviceActivityNotificationRuleTriggerConfig(v DeviceActivityNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeCommunicationFailureNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsEdgeCommunicationFailureNotificationRuleTriggerConfig() (EdgeCommunicationFailureNotificationRuleTriggerConfig, error) {
	var body EdgeCommunicationFailureNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeCommunicationFailureNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromEdgeCommunicationFailureNotificationRuleTriggerConfig(v EdgeCommunicationFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeCommunicationFailureNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided EdgeCommunicationFailureNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeEdgeCommunicationFailureNotificationRuleTriggerConfig(v EdgeCommunicationFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEdgeConnectionNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a EdgeConnectionNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsEdgeConnectionNotificationRuleTriggerConfig() (EdgeConnectionNotificationRuleTriggerConfig, error) {
	var body EdgeConnectionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEdgeConnectionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided EdgeConnectionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromEdgeConnectionNotificationRuleTriggerConfig(v EdgeConnectionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEdgeConnectionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided EdgeConnectionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeEdgeConnectionNotificationRuleTriggerConfig(v EdgeConnectionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntitiesLimitNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a EntitiesLimitNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsEntitiesLimitNotificationRuleTriggerConfig() (EntitiesLimitNotificationRuleTriggerConfig, error) {
	var body EntitiesLimitNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntitiesLimitNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided EntitiesLimitNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromEntitiesLimitNotificationRuleTriggerConfig(v EntitiesLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntitiesLimitNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided EntitiesLimitNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeEntitiesLimitNotificationRuleTriggerConfig(v EntitiesLimitNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEntityActionNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a EntityActionNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsEntityActionNotificationRuleTriggerConfig() (EntityActionNotificationRuleTriggerConfig, error) {
	var body EntityActionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEntityActionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided EntityActionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromEntityActionNotificationRuleTriggerConfig(v EntityActionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEntityActionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided EntityActionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeEntityActionNotificationRuleTriggerConfig(v EntityActionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNewPlatformVersionNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a NewPlatformVersionNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsNewPlatformVersionNotificationRuleTriggerConfig() (NewPlatformVersionNotificationRuleTriggerConfig, error) {
	var body NewPlatformVersionNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNewPlatformVersionNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided NewPlatformVersionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromNewPlatformVersionNotificationRuleTriggerConfig(v NewPlatformVersionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNewPlatformVersionNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided NewPlatformVersionNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeNewPlatformVersionNotificationRuleTriggerConfig(v NewPlatformVersionNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRateLimitsNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a RateLimitsNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsRateLimitsNotificationRuleTriggerConfig() (RateLimitsNotificationRuleTriggerConfig, error) {
	var body RateLimitsNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRateLimitsNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided RateLimitsNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromRateLimitsNotificationRuleTriggerConfig(v RateLimitsNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRateLimitsNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided RateLimitsNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeRateLimitsNotificationRuleTriggerConfig(v RateLimitsNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig() (RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig, error) {
	var body RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig(v RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeRuleEngineComponentLifecycleEventNotificationRuleTriggerConfig(v RuleEngineComponentLifecycleEventNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTaskProcessingFailureNotificationRuleTriggerConfig returns the union data inside the NotificationRuleInfo_TriggerConfig as a TaskProcessingFailureNotificationRuleTriggerConfig
func (t NotificationRuleInfo_TriggerConfig) AsTaskProcessingFailureNotificationRuleTriggerConfig() (TaskProcessingFailureNotificationRuleTriggerConfig, error) {
	var body TaskProcessingFailureNotificationRuleTriggerConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTaskProcessingFailureNotificationRuleTriggerConfig overwrites any union data inside the NotificationRuleInfo_TriggerConfig as the provided TaskProcessingFailureNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) FromTaskProcessingFailureNotificationRuleTriggerConfig(v TaskProcessingFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTaskProcessingFailureNotificationRuleTriggerConfig performs a merge with any union data inside the NotificationRuleInfo_TriggerConfig, using the provided TaskProcessingFailureNotificationRuleTriggerConfig
func (t *NotificationRuleInfo_TriggerConfig) MergeTaskProcessingFailureNotificationRuleTriggerConfig(v TaskProcessingFailureNotificationRuleTriggerConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationRuleInfo_TriggerConfig) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationRuleInfo_TriggerConfig) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsMobileAppNotificationDeliveryMethodConfig returns the union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties as a MobileAppNotificationDeliveryMethodConfig
func (t NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) AsMobileAppNotificationDeliveryMethodConfig() (MobileAppNotificationDeliveryMethodConfig, error) {
	var body MobileAppNotificationDeliveryMethodConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMobileAppNotificationDeliveryMethodConfig overwrites any union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties as the provided MobileAppNotificationDeliveryMethodConfig
func (t *NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) FromMobileAppNotificationDeliveryMethodConfig(v MobileAppNotificationDeliveryMethodConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMobileAppNotificationDeliveryMethodConfig performs a merge with any union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties, using the provided MobileAppNotificationDeliveryMethodConfig
func (t *NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) MergeMobileAppNotificationDeliveryMethodConfig(v MobileAppNotificationDeliveryMethodConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSlackNotificationDeliveryMethodConfig returns the union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties as a SlackNotificationDeliveryMethodConfig
func (t NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) AsSlackNotificationDeliveryMethodConfig() (SlackNotificationDeliveryMethodConfig, error) {
	var body SlackNotificationDeliveryMethodConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSlackNotificationDeliveryMethodConfig overwrites any union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties as the provided SlackNotificationDeliveryMethodConfig
func (t *NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) FromSlackNotificationDeliveryMethodConfig(v SlackNotificationDeliveryMethodConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSlackNotificationDeliveryMethodConfig performs a merge with any union data inside the NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties, using the provided SlackNotificationDeliveryMethodConfig
func (t *NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) MergeSlackNotificationDeliveryMethodConfig(v SlackNotificationDeliveryMethodConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationSettings_DeliveryMethodsConfigs_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsMicrosoftTeamsNotificationTargetConfig returns the union data inside the NotificationTarget_Configuration as a MicrosoftTeamsNotificationTargetConfig
func (t NotificationTarget_Configuration) AsMicrosoftTeamsNotificationTargetConfig() (MicrosoftTeamsNotificationTargetConfig, error) {
	var body MicrosoftTeamsNotificationTargetConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrosoftTeamsNotificationTargetConfig overwrites any union data inside the NotificationTarget_Configuration as the provided MicrosoftTeamsNotificationTargetConfig
func (t *NotificationTarget_Configuration) FromMicrosoftTeamsNotificationTargetConfig(v MicrosoftTeamsNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrosoftTeamsNotificationTargetConfig performs a merge with any union data inside the NotificationTarget_Configuration, using the provided MicrosoftTeamsNotificationTargetConfig
func (t *NotificationTarget_Configuration) MergeMicrosoftTeamsNotificationTargetConfig(v MicrosoftTeamsNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPlatformUsersNotificationTargetConfig returns the union data inside the NotificationTarget_Configuration as a PlatformUsersNotificationTargetConfig
func (t NotificationTarget_Configuration) AsPlatformUsersNotificationTargetConfig() (PlatformUsersNotificationTargetConfig, error) {
	var body PlatformUsersNotificationTargetConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPlatformUsersNotificationTargetConfig overwrites any union data inside the NotificationTarget_Configuration as the provided PlatformUsersNotificationTargetConfig
func (t *NotificationTarget_Configuration) FromPlatformUsersNotificationTargetConfig(v PlatformUsersNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePlatformUsersNotificationTargetConfig performs a merge with any union data inside the NotificationTarget_Configuration, using the provided PlatformUsersNotificationTargetConfig
func (t *NotificationTarget_Configuration) MergePlatformUsersNotificationTargetConfig(v PlatformUsersNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSlackNotificationTargetConfig returns the union data inside the NotificationTarget_Configuration as a SlackNotificationTargetConfig
func (t NotificationTarget_Configuration) AsSlackNotificationTargetConfig() (SlackNotificationTargetConfig, error) {
	var body SlackNotificationTargetConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSlackNotificationTargetConfig overwrites any union data inside the NotificationTarget_Configuration as the provided SlackNotificationTargetConfig
func (t *NotificationTarget_Configuration) FromSlackNotificationTargetConfig(v SlackNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSlackNotificationTargetConfig performs a merge with any union data inside the NotificationTarget_Configuration, using the provided SlackNotificationTargetConfig
func (t *NotificationTarget_Configuration) MergeSlackNotificationTargetConfig(v SlackNotificationTargetConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationTarget_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationTarget_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEmailDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a EmailDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsEmailDeliveryMethodNotificationTemplate() (EmailDeliveryMethodNotificationTemplate, error) {
	var body EmailDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEmailDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided EmailDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromEmailDeliveryMethodNotificationTemplate(v EmailDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEmailDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided EmailDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeEmailDeliveryMethodNotificationTemplate(v EmailDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMicrosoftTeamsDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsMicrosoftTeamsDeliveryMethodNotificationTemplate() (MicrosoftTeamsDeliveryMethodNotificationTemplate, error) {
	var body MicrosoftTeamsDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMicrosoftTeamsDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromMicrosoftTeamsDeliveryMethodNotificationTemplate(v MicrosoftTeamsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMicrosoftTeamsDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided MicrosoftTeamsDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeMicrosoftTeamsDeliveryMethodNotificationTemplate(v MicrosoftTeamsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsMobileAppDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a MobileAppDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsMobileAppDeliveryMethodNotificationTemplate() (MobileAppDeliveryMethodNotificationTemplate, error) {
	var body MobileAppDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromMobileAppDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided MobileAppDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromMobileAppDeliveryMethodNotificationTemplate(v MobileAppDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeMobileAppDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided MobileAppDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeMobileAppDeliveryMethodNotificationTemplate(v MobileAppDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSlackDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a SlackDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsSlackDeliveryMethodNotificationTemplate() (SlackDeliveryMethodNotificationTemplate, error) {
	var body SlackDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSlackDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided SlackDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromSlackDeliveryMethodNotificationTemplate(v SlackDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSlackDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided SlackDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeSlackDeliveryMethodNotificationTemplate(v SlackDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmsDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a SmsDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsSmsDeliveryMethodNotificationTemplate() (SmsDeliveryMethodNotificationTemplate, error) {
	var body SmsDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmsDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided SmsDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromSmsDeliveryMethodNotificationTemplate(v SmsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmsDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided SmsDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeSmsDeliveryMethodNotificationTemplate(v SmsDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebDeliveryMethodNotificationTemplate returns the union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as a WebDeliveryMethodNotificationTemplate
func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) AsWebDeliveryMethodNotificationTemplate() (WebDeliveryMethodNotificationTemplate, error) {
	var body WebDeliveryMethodNotificationTemplate
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebDeliveryMethodNotificationTemplate overwrites any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties as the provided WebDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) FromWebDeliveryMethodNotificationTemplate(v WebDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebDeliveryMethodNotificationTemplate performs a merge with any union data inside the NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties, using the provided WebDeliveryMethodNotificationTemplate
func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MergeWebDeliveryMethodNotificationTemplate(v WebDeliveryMethodNotificationTemplate) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *NotificationTemplateConfig_DeliveryMethodsTemplates_AdditionalProperties) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsBackupCodeTwoFaProviderConfig returns the union data inside the PlatformTwoFaSettings_Providers_Item as a BackupCodeTwoFaProviderConfig
func (t PlatformTwoFaSettings_Providers_Item) AsBackupCodeTwoFaProviderConfig() (BackupCodeTwoFaProviderConfig, error) {
	var body BackupCodeTwoFaProviderConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackupCodeTwoFaProviderConfig overwrites any union data inside the PlatformTwoFaSettings_Providers_Item as the provided BackupCodeTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) FromBackupCodeTwoFaProviderConfig(v BackupCodeTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackupCodeTwoFaProviderConfig performs a merge with any union data inside the PlatformTwoFaSettings_Providers_Item, using the provided BackupCodeTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) MergeBackupCodeTwoFaProviderConfig(v BackupCodeTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEmailTwoFaProviderConfig returns the union data inside the PlatformTwoFaSettings_Providers_Item as a EmailTwoFaProviderConfig
func (t PlatformTwoFaSettings_Providers_Item) AsEmailTwoFaProviderConfig() (EmailTwoFaProviderConfig, error) {
	var body EmailTwoFaProviderConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEmailTwoFaProviderConfig overwrites any union data inside the PlatformTwoFaSettings_Providers_Item as the provided EmailTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) FromEmailTwoFaProviderConfig(v EmailTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEmailTwoFaProviderConfig performs a merge with any union data inside the PlatformTwoFaSettings_Providers_Item, using the provided EmailTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) MergeEmailTwoFaProviderConfig(v EmailTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmsTwoFaProviderConfig returns the union data inside the PlatformTwoFaSettings_Providers_Item as a SmsTwoFaProviderConfig
func (t PlatformTwoFaSettings_Providers_Item) AsSmsTwoFaProviderConfig() (SmsTwoFaProviderConfig, error) {
	var body SmsTwoFaProviderConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmsTwoFaProviderConfig overwrites any union data inside the PlatformTwoFaSettings_Providers_Item as the provided SmsTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) FromSmsTwoFaProviderConfig(v SmsTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmsTwoFaProviderConfig performs a merge with any union data inside the PlatformTwoFaSettings_Providers_Item, using the provided SmsTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) MergeSmsTwoFaProviderConfig(v SmsTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTotpTwoFaProviderConfig returns the union data inside the PlatformTwoFaSettings_Providers_Item as a TotpTwoFaProviderConfig
func (t PlatformTwoFaSettings_Providers_Item) AsTotpTwoFaProviderConfig() (TotpTwoFaProviderConfig, error) {
	var body TotpTwoFaProviderConfig
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTotpTwoFaProviderConfig overwrites any union data inside the PlatformTwoFaSettings_Providers_Item as the provided TotpTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) FromTotpTwoFaProviderConfig(v TotpTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTotpTwoFaProviderConfig performs a merge with any union data inside the PlatformTwoFaSettings_Providers_Item, using the provided TotpTwoFaProviderConfig
func (t *PlatformTwoFaSettings_Providers_Item) MergeTotpTwoFaProviderConfig(v TotpTwoFaProviderConfig) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t PlatformTwoFaSettings_Providers_Item) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *PlatformTwoFaSettings_Providers_Item) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDefaultTenantProfileConfiguration returns the union data inside the TenantProfileData_Configuration as a DefaultTenantProfileConfiguration
func (t TenantProfileData_Configuration) AsDefaultTenantProfileConfiguration() (DefaultTenantProfileConfiguration, error) {
	var body DefaultTenantProfileConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDefaultTenantProfileConfiguration overwrites any union data inside the TenantProfileData_Configuration as the provided DefaultTenantProfileConfiguration
func (t *TenantProfileData_Configuration) FromDefaultTenantProfileConfiguration(v DefaultTenantProfileConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDefaultTenantProfileConfiguration performs a merge with any union data inside the TenantProfileData_Configuration, using the provided DefaultTenantProfileConfiguration
func (t *TenantProfileData_Configuration) MergeDefaultTenantProfileConfiguration(v DefaultTenantProfileConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t TenantProfileData_Configuration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *TenantProfileData_Configuration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsAwsSnsSmsProviderConfiguration returns the union data inside the TestSmsRequest_ProviderConfiguration as a AwsSnsSmsProviderConfiguration
func (t TestSmsRequest_ProviderConfiguration) AsAwsSnsSmsProviderConfiguration() (AwsSnsSmsProviderConfiguration, error) {
	var body AwsSnsSmsProviderConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromAwsSnsSmsProviderConfiguration overwrites any union data inside the TestSmsRequest_ProviderConfiguration as the provided AwsSnsSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) FromAwsSnsSmsProviderConfiguration(v AwsSnsSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeAwsSnsSmsProviderConfiguration performs a merge with any union data inside the TestSmsRequest_ProviderConfiguration, using the provided AwsSnsSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) MergeAwsSnsSmsProviderConfiguration(v AwsSnsSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsSmppSmsProviderConfiguration returns the union data inside the TestSmsRequest_ProviderConfiguration as a SmppSmsProviderConfiguration
func (t TestSmsRequest_ProviderConfiguration) AsSmppSmsProviderConfiguration() (SmppSmsProviderConfiguration, error) {
	var body SmppSmsProviderConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromSmppSmsProviderConfiguration overwrites any union data inside the TestSmsRequest_ProviderConfiguration as the provided SmppSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) FromSmppSmsProviderConfiguration(v SmppSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeSmppSmsProviderConfiguration performs a merge with any union data inside the TestSmsRequest_ProviderConfiguration, using the provided SmppSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) MergeSmppSmsProviderConfiguration(v SmppSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsTwilioSmsProviderConfiguration returns the union data inside the TestSmsRequest_ProviderConfiguration as a TwilioSmsProviderConfiguration
func (t TestSmsRequest_ProviderConfiguration) AsTwilioSmsProviderConfiguration() (TwilioSmsProviderConfiguration, error) {
	var body TwilioSmsProviderConfiguration
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromTwilioSmsProviderConfiguration overwrites any union data inside the TestSmsRequest_ProviderConfiguration as the provided TwilioSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) FromTwilioSmsProviderConfiguration(v TwilioSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeTwilioSmsProviderConfiguration performs a merge with any union data inside the TestSmsRequest_ProviderConfiguration, using the provided TwilioSmsProviderConfiguration
func (t *TestSmsRequest_ProviderConfiguration) MergeTwilioSmsProviderConfiguration(v TwilioSmsProviderConfiguration) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t TestSmsRequest_ProviderConfiguration) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *TestSmsRequest_ProviderConfiguration) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
